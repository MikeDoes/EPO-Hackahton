<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE ep-patent-document PUBLIC "-//EPO//EP PATENT DOCUMENT 1.5.1//EN" "ep-patent-document-v1-5-1.dtd">
<!-- This XML data has been generated under the supervision of the European Patent Office -->
<ep-patent-document id="EP18161864B1" file="EP18161864NWB1.xml" lang="en" country="EP" doc-number="3385866" kind="B1" date-publ="20211006" status="n" dtd-version="ep-patent-document-v1-5-1">
<SDOBI lang="en"><B000><eptags><B001EP>ATBECHDEDKESFRGBGRITLILUNLSEMCPTIESILTLVFIROMKCYALTRBGCZEEHUPLSK..HRIS..MTNORS..SM..................</B001EP><B005EP>J</B005EP><B007EP>BDM Ver 2.0.12 (4th of August) -  2100000/0</B007EP></eptags></B000><B100><B110>3385866</B110><B120><B121>EUROPEAN PATENT SPECIFICATION</B121></B120><B130>B1</B130><B140><date>20211006</date></B140><B190>EP</B190></B100><B200><B210>18161864.6</B210><B220><date>20180314</date></B220><B240><B241><date>20190409</date></B241><B242><date>20200227</date></B242></B240><B250>en</B250><B251EP>en</B251EP><B260>en</B260></B200><B300><B310>201715480848</B310><B320><date>20170406</date></B320><B330><ctry>US</ctry></B330></B300><B400><B405><date>20211006</date><bnum>202140</bnum></B405><B430><date>20181010</date><bnum>201841</bnum></B430><B450><date>20211006</date><bnum>202140</bnum></B450><B452EP><date>20210428</date></B452EP></B400><B500><B510EP><classification-ipcr sequence="1"><text>G06F  16/40        20190101AFI20210326BHEP        </text></classification-ipcr><classification-ipcr sequence="2"><text>G06F  16/435       20190101ALI20210326BHEP        </text></classification-ipcr><classification-ipcr sequence="3"><text>G06F  16/41        20190101ALI20210326BHEP        </text></classification-ipcr></B510EP><B520EP><classifications-cpc><classification-cpc sequence="1"><text>G06F  16/435       20190101 LI20190103BHEP        </text></classification-cpc><classification-cpc sequence="2"><text>G06F  16/40        20190101 LI20190103BHEP        </text></classification-cpc><classification-cpc sequence="3"><text>G06F  16/41        20190101 LI20190103BHEP        </text></classification-cpc></classifications-cpc></B520EP><B540><B541>de</B541><B542>INDIZIERUNG VON MULTIMEDIADATEIEN UNABHÄNGIG VOM FORMAT</B542><B541>en</B541><B542>FORMAT-INDEPENDENT MEDIA FILE INDEXING</B542><B541>fr</B541><B542>INDEXATION DE FICHIER MULTIMÉDIA INDEPENDENTE DU FORMAT.</B542></B540><B560><B561><text>US-A1- 2004 199 507</text></B561><B561><text>US-A1- 2010 262 710</text></B561><B562><text>"DEMYSTIFING AUDIO METADATA", JOURNAL OF THE AUDIO ENGINEERING SOCIETY, AUDIO ENGINEERING SOCIETY, NEW YORK, NY, US, vol. 51, no. 7/8, 1 July 2003 (2003-07-01) , pages 744-751, XP002296583, ISSN: 1549-4950</text></B562></B560></B500><B700><B720><B721><snm>Sacilotto, Roger P. (Jr)</snm><adr><str>2 Limewoods Drive
Saugus</str><city>Massachusetts, 01906</city><ctry>US</ctry></adr></B721></B720><B730><B731><snm>Avid Technology, Inc.</snm><iid>101210296</iid><irf>P51215EP</irf><adr><str>75 Network Drive</str><city>Burlington, MA 01803</city><ctry>US</ctry></adr></B731></B730><B740><B741><snm>Cole, Douglas Lloyd</snm><iid>100809276</iid><adr><str>Mathys &amp; Squire 
The Shard 
32 London Bridge Street</str><city>London SE1 9SG</city><ctry>GB</ctry></adr></B741></B740></B700><B800><B840><ctry>AL</ctry><ctry>AT</ctry><ctry>BE</ctry><ctry>BG</ctry><ctry>CH</ctry><ctry>CY</ctry><ctry>CZ</ctry><ctry>DE</ctry><ctry>DK</ctry><ctry>EE</ctry><ctry>ES</ctry><ctry>FI</ctry><ctry>FR</ctry><ctry>GB</ctry><ctry>GR</ctry><ctry>HR</ctry><ctry>HU</ctry><ctry>IE</ctry><ctry>IS</ctry><ctry>IT</ctry><ctry>LI</ctry><ctry>LT</ctry><ctry>LU</ctry><ctry>LV</ctry><ctry>MC</ctry><ctry>MK</ctry><ctry>MT</ctry><ctry>NL</ctry><ctry>NO</ctry><ctry>PL</ctry><ctry>PT</ctry><ctry>RO</ctry><ctry>RS</ctry><ctry>SE</ctry><ctry>SI</ctry><ctry>SK</ctry><ctry>SM</ctry><ctry>TR</ctry></B840></B800></SDOBI>
<description id="desc" lang="en"><!-- EPO <DP n="1"> -->
<heading id="h0001">BACKGROUND</heading>
<p id="p0001" num="0001">Media files commonly include within them an index, which provides information as to the location of individual elements within the file. In the case of video files, the index provides locations of the video frames within the file, and in the case of audio files the index provides locations of individual audio samples within the file. This information is required, for example, when a media processing or editing application needs to read a specific portion, or clip from a media file. By referring to the index, the application is able to locate the clip, and retrieve it for playback or for other purposes. For files in which each of the elements has a fixed size, it may be possible to locate a specific element by knowing its sequential position within the media file. However, modern media files often include elements of variable size, especially in video files, where the size of each frame depends on the degree to which it is compressed, and/or on its dependency on other frames when interframe compression techniques are involved. In such files, in addition to information as to the location of each frame, the index includes information about the frame's dependency on other frames.</p>
<p id="p0002" num="0002">In the various video file formats that have an index, the index is either placed at the end of the file, or in sections distributed over the file, or in reserved space at the beginning of the file and periodically updated during file capture or transfer. In each of these formats, the index is either not available until the entire video file is present, or it becomes partially available before the file is complete, but at the cost of increased latency, processing cost, the need to use otherwise undesirable formats, exception workflows, and a risk of error.</p>
<p id="p0003" num="0003">With the increasing premium on rapid turnaround workflows, it is essential for media editors to be able to work with video files before the file is completely captured or before it is completely transferred into storage accessible to their media processing application. This is especially important for files that take an extended period to capture, e.g., a live sporting event, or files that are large and take time to transfer over the bandwidth that is available. There is therefore a need for systems and methods that can effectively support rapid, "edit while transfer" (EWT) workflows, enabling<!-- EPO <DP n="2"> --> such files to be worked on before they are fully written or transferred to an editing or archiving system.</p>
<p id="p0004" num="0004"><patcit id="pcit0001" dnum="US20100262710A"><text>US 2010/0262710</text></patcit> discloses a multi-user video editing system where frames are rendered either in the background, or in real-time as a proxy representation of edited media is streamed to a client. The rendered frames are stored in a render cache comprising an index that allows the streaming engine to assemble the video stream in real time using a combination of pre-rendered frames from the render cache and frames being rendered in real-time.</p>
<p id="p0005" num="0005">Aspects of media metadata standards and metadata exchange are discussed in "<nplcit id="ncit0001" npl-type="s"><text>Demystifying Metadata", Journal of the Audio Engineering Society vol.51 no. 7/8 (July 2003</text></nplcit>). An infrastructure for indexing media files in a file system is disclosed in <patcit id="pcit0002" dnum="US20040199507A"><text>US 2004/0199507</text></patcit>.</p>
<heading id="h0002">SUMMARY</heading>
<p id="p0006" num="0006">The present invention is defined by the appended independent claims. Certain preferred features are set out in the dependent claims. Embodiments which do not fall within the scope of the claims are to be interpreted merely as examples useful for understanding the invention.</p>
<p id="p0007" num="0007">In general, the methods, systems, and computer program products described herein provide a media file index service that facilitates edit-while-capture workflows.<!-- EPO <DP n="3"> --></p>
<heading id="h0003">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p0008" num="0008">
<ul id="ul0001" list-style="none">
<li><figref idref="f0001">Figure 1</figref> is a high level diagram showing a system for maintaining a media file index external to the media file.</li>
<li><figref idref="f0002">Figure 2</figref> is an illustration of a prior art index for a media file.</li>
<li><figref idref="f0003">Figure 3</figref> is a high level flow diagram of steps that are performed by the system illustrated in <figref idref="f0001">Figure 1</figref> when a portion of a media file is written to shared storage.</li>
<li><figref idref="f0004">Figure 4</figref> is a high level flow diagram of steps that are performed when the reader system of <figref idref="f0001">Figure 1</figref> requires an element from a media file while the reader system is subscribed to raw index-related messages.</li>
<li><figref idref="f0005">Figure 5</figref> is a high level flow diagram of steps that are performed when the reader system of <figref idref="f0001">Figure 1</figref> requires an element from the media file while the reader system is subscribed to refined index-related messages.</li>
</ul></p>
<heading id="h0004">DETAILED DESCRIPTION</heading>
<p id="p0009" num="0009">Media files that are indexed fall into one of three categories. In the first, the index is placed at the end of the file. Such an index can only be written to the file when the entire file is captured or transferred. In the second category, the index is split into sections and written at various locations within the file. Since the index in such a file is fragmented, an application needing to access a particular element first has to locate the section of the index containing the location information of the required element, and then look up the information within the located section. In the third category, index space is reserved up-front in the file and periodically updated while the file is being captured. This reduces flexibility when the file length is not known in advance since capture has to end once the reserved space has expired, or conversely, if the file is terminated earlier than anticipated (i.e., the file is smaller than<!-- EPO <DP n="4"> --> expected), some of the reserved index space is wasted. Each of these indexing methods has disadvantages in terms of one or more of latency, processing requirements, or flexibility.</p>
<p id="p0010" num="0010">The systems and methods described herein are independent of the format of the media file, and reduce latency and processing requirements, and increase flexibility. Furthermore, they enable an editor using a client system to access and manipulate a media file even while it continues to be captured or transferred to the client and is therefore incomplete. Such situations may arise when large media files corresponding to a long temporal duration are being captured. Such media may be received via a satellite feed, or directly from a media capture device, such as a camera or a set of microphones. Examples include live events, such as sporting events or artistic performances, or a news feed, which may last many minutes or hours. Rather than wait until the file is complete, i.e., until the sporting event or artistic performance has ended, editors may need to use media from the file to produce pieces based on the portion of the file already captured while the media continues to be captured, or immediately after the event or performance is over. For example, in a live sporting event having several parts, editors may wish to prepare a synopsis of the highlights of one part to air during a break before the next part starts. With a news feed, an editor may wish to create a summary or a preview of a breaking story before the full report on the story is available. As another example, Web broadcasts including edited excerpts of the media being captured may be issued during a live event.</p>
<p id="p0011" num="0011">A high level block diagram of the various components of the described media file indexing system is illustrated in <figref idref="f0001">Figure 1</figref>. Writer system 102 is a computer system that is receiving media (as media elements or as a stream of bytes) that is in the process of being captured, or that is being transferred from one system to another. Although the use of the system is described herein with reference to media capture applications, it is applicable to media transfer as well. A writer system may be implemented by a video server, such as the AirSpeed® system available from Avid Technology, Inc., of Burlington, Massachusetts. Reader system 104 is a computer that is reading the media file that is being captured or transferred from writer system 102. The writer system incrementally writes portions of the captured media to shared storage 106 where it is stored within media file 108. While media is being captured, each incremental portion written to the shared storage is generally the media that has<!-- EPO <DP n="5"> --> been captured and received by the writing system since the previous portion was written out to shared storage. When such an incremental writing operation is complete, writer system 102 publishes a raw message containing information as to the offset of the new frames that have been written, together with descriptive information about the frames. The raw message is received by message broker 110. Message broker 110 broadcasts the received raw message, which is received by systems that are subscribed to the raw message channel. Index service system 112 is subscribed to the raw message channel and receives all broadcast raw messages. The index service maintains index 114 for media file 108 that specifies the location within the media file of each element that has been written to the file. Since low latency is desirable for the index service, index 114 is usually stored in RAM.</p>
<p id="p0012" num="0012"><figref idref="f0002">Figure 2</figref> is a high level illustration of an exemplary structure of a media index. Entries in the index are keyed by element number 202, with each entry including a byte offset of the element 204, element size 206, as well as information about the element 208. <figref idref="f0002">Figure 2</figref> illustrates an index for a video file, in which the elements are frames, and the information about each element is a frame type, such as I, P, or B in an interframe (group of pictures-based) compression scheme. Index service system 112 may be located locally to writer system 102 and/or reader system 104, and connected to these systems with a local area network. In other embodiments, the index service system may be remote or in the Cloud, and may be connected to the writer and reader systems via the internet. Referring again to <figref idref="f0001">Figure 1</figref>, reader system 104 is also connected to the message bus and may receive messages from the message broker. Reader system 104 runs a media editing application that requires media from media file 108. An example of such a media editing application is the video editing application Media Composer® from Avid® Technology, Inc. of Burlington, Massachusetts, described in part in <patcit id="pcit0003" dnum="US5267351A"><text>U.S. Patent Nos. 5,267,351</text></patcit>, <patcit id="pcit0004" dnum="US5355450A"><text>5,355,450</text></patcit>, and <patcit id="pcit0005" dnum="US5930445A"><text>5,930,445</text></patcit>. For audio editing, an example of such a media editing application is a digital audio workstation which refers to a software application for recording, editing, and storing digital audio. An example of such a digital audio workstation is Pro Tools®, also from Avid Technology, Inc. Media editing applications may be hosted locally on a client or in a client-server or cloud-based environment.<!-- EPO <DP n="6"> --></p>
<p id="p0013" num="0013"><figref idref="f0003">Figure 3</figref> is a high level flow diagram illustrating a sequence of steps that occurs when writer system 102 writes a portion of the media file to shared storage 106 (step 302). After completing the writing operation, the writer system sends a raw message to message broker 110 (step 304). The raw message contains information defining the byte offset of each element in the written portion of the media file. In some embodiments in which media elements being written are each of a constant size, the raw message may specify an element size and the frame numbers (or range) of the frames that have been written, instead of specifying the location of each element individually. While this reduces the size of a raw message, it increases the complexity of the software in the receiving systems. Raw messages also include some descriptive information about the elements. For example, if the media file is a video file and interframe compression is being used to compress the file, the descriptive information may specify the type of each frame, i.e., I, P, or B.</p>
<p id="p0014" num="0014">The message broker receives the raw message and broadcasts it over the message bus (step 306). If reader system 104 is subscribed to the raw messages, it will receive the message (step 308). Index service system 112 is subscribed to the raw message channel, and receives the broadcast raw message (step 310). It uses the information the message contains to create (if a media file is being opened), update, or close (if the media file is complete) the media file index (step 310). When updating the index, the location information for the newly added elements to the media file is added to index 114. Index service system 112 then generates a refined version of the raw message, and sends this to the message broker (step 312). The message broker receives the refined message, and broadcasts it on the message bus. Refined messages include less information than the raw messages from which they are derived. In the described system, a refined message includes a notification as to whether the media file has been opened, whether it has been modified, or whether it has been closed. It may also include information as to the temporal location of the most recent element written to the file, which corresponds approximately to the location of the record head. Optionally, the refined message also includes call back information that can be used by a reader when issuing a query to the index service to specify that the query relates to a specific refined message. Refined messages do not include location information of the newly written media file elements. Since refined messages<!-- EPO <DP n="7"> --> contains less information than raw messages, their broadcast over the message bus places less load on the network than the broadcast of raw messages.</p>
<p id="p0015" num="0015">We now describe exemplary flow diagrams for the two cases in which (i) reader system 104 is subscribed to the raw message channel and (ii) when it is subscribed to the refined message channel. Starting with the former case, <figref idref="f0004">Figure 4</figref> is a high level flow diagram illustrating a sequence of steps that takes place when a reader system that is subscribed to the raw message channel requires an element from the media file. The required element may be one or more video frames from a video file, or one or more samples from an audio file. The process starts when the reader system requires an element from the media file that has not been previously retrieved from shared storage (step 402). The element may be required if an editor wishes to edit or play back the media element. The reader first checks to determine whether it has information derived from previously received raw messages with location information for the required element on the shared storage (step 404). The lack of such information may indicate (i) that the required element has not yet been written to shared storage, or (ii) that the reader system has not received the information, for example if it was broadcast before the reader system started subscribing to the raw message, or (iii) that the reader system received the information but has not retained it, since, depending on the storage and processing capacity of the reader system, only some the contents of raw messages may be been retained. In some systems, the previously received notifications may have been summarized in a table, or only a certain portion of the notifications may have been retained. For example, if an editor's region of interest is at a certain temporal location within the media file, notifications concerning portions near that region of interest may be retained, but notifications from other locations, e.g., significantly earlier or later, may have been discarded.</p>
<p id="p0016" num="0016">The amount of index information from previously received messages that is retained by the reader system depends on the user context of the system. If low latency is a priority, the reader system retains as much index information as possible, so that it does not incur the delay incurred by the need to issue queries to the index service in order to retrieve needed elements. Such a situation arises during craft editing of a video program, when an editor plays back precisely selected portions of the media and high responsiveness is necessary. Apart from slowing down the work,<!-- EPO <DP n="8"> --> unexpected latencies may appear to be a problem with the media itself as opposed to a delay introduced by the editing system. In other contexts, low latency is not as important. In this situation, the reader system may conserve memory by retaining only a portion of the index information received in raw messages, or may subscribe only to refined messages, and query the index only when new frames are needed. An example of such a context arises when media is being logged, since a short delay does not affect the process since it is inherently somewhat approximate.</p>
<p id="p0017" num="0017">If the reading system finds that it has information from previously received raw messages with the location of the required element on shared storage, the system uses such information to retrieve the required element (step 406). The required element may then be used by a media editing application running on the reader system to edit or play back a portion of the media file that includes the required element that has now been retrieved (step 408).</p>
<p id="p0018" num="0018">If the reader system does not have information from previously received raw notifications that the required element is available, the reader system queries the index service (step 410). If the index service does not contain an entry for the required element, the reader system displays an indication for the user, such as "Media Capture in Progress" (step 412). The index service may also return information on the current temporal location of the most recently added index entry, which provides an approximation to the location of the record head (step 412). By comparing the information as to the location of the record head with the temporal location of the required element, the reader system can estimate when the required element will be available on the shared storage, and wait this estimated amount of time (step 414) before querying the index service again (step 410). When the index system responds to the query with a response containing the location information for the required element (step 416), the reader system receives the location information from the index service and retrieves the required element from shared storage (step 418). It can then use a media editing application running on the reader system to edit or play back a portion of the media file that includes the required element (step 408).</p>
<p id="p0019" num="0019">When a reader system does not have a need for newly added media element location information at the time it is added to the media file, it may subscribe to the refined messages, which reduces unnecessary traffic on the message bus. This situation may arise when an editor is using the reading system to work on a portion of<!-- EPO <DP n="9"> --> the media file that has already been written to shared storage, and does not require more recently added media. Conversely, it may arise when an editor plans to edit or play back media that is not expected to be captured for some time, and thus it can wait until the media is expected before paying attention to messages from the index service. <figref idref="f0005">Figure 5</figref> is a high level flow diagram illustrating the case when the reader system is subscribed to refined messages (and not to raw messages) from the index service. The sequence starts when the reader system requires an element of the media file that it has not previously retrieved from shared storage (step 502). The reader system queries the index service to determine whether an entry for the required element is present in the index (step 504). If the index contains an entry for the required element, the index service responds to the query with the location information for the required element. The reader system receives the response from the index service containing the location information, and uses that to retrieve the required element from shared storage (step 506). An editor may now use a media editing application running on the reader system to edit or play back a portion of the media file that includes the required element (step 508).</p>
<p id="p0020" num="0020">If the required element is not present in the index when the reader system queries the index service, it sends a response to this effect to the reader system, together with information as to the temporal location of the most recently added frame, which corresponds approximately to the location of the record head. The reader system may be in one of two playback states. In one state, the editor is working with media that is close to the record head, perhaps even playing back and editing media as it is received. In this case, the reader system expects that any further changes to the media file will correspond to the most recent portion of media being written to the media file onto the shared storage, and it will be requiring this media. It therefore waits until it receives the next refined message (step 510), and then issues another query to the index service (step 504). It is expected that an entry for the required element will then be present in the index, and that the reader system will be able to proceed to retrieving the location information, retrieving the required element, and enabling the editor to proceed with viewing or editing the required element (steps 506, 508). In another playback state, the editor wishes to work with media that is well ahead of the record head, i.e., not near the record head as in the playback state just described. In this case, the required element may not be captured and written to<!-- EPO <DP n="10"> --> shared storage for some time. Since refined messages include information as to the temporal location of the elements most recently written to the media file, the reader system is able to use this information together with the temporal location of the media that the editor requested to estimate when the required element will be written to shared storage. The reader system then displays an indication to the user that the required element is not yet available, displaying, for example, a caption "Media Capture in Progress" (step 512). In order to avoid repeatedly querying the index service in vain, the reader system waits until the time when it estimates that the required element will be written to the shared storage (step 514), and issues another query (step 504) to the index service. If the estimate is accurate, the index will now contain the location information requested, which will be returned to the reader system, which then retrieves the required element from shared storage (step 506) and enables an editor using a media editing application on the reader system to edit or play back a portion of the media file that includes the required element (step 508). If the reader's estimate is inaccurate, the reader may re-estimate a new time to reissue a query to the index based on the information returned in the unsuccessful query. While waiting for new frames to arrive, the reader system continues to be able to work in parallel to allow the editor to work with media elements already known about and stored on shared storage.</p>
<p id="p0021" num="0021">As recording and editing proceeds, the sequence of steps shown in <figref idref="f0004">Figures 4</figref> and <figref idref="f0005">5</figref> are repeated, with the reader's entry point (steps 402, 502) being repeatedly invoked.</p>
<p id="p0022" num="0022">The index service can service multiple files during capture. Each media file being written to shared storage is handled by its own writer and reader, which may be implemented as different processes running on the same writer system (102) and reader system (104) described above. The steps described above with reference to the writer system and the reader system equally apply to software-implemented processes running on the writer system and the reader system. The index service maintains a separate index for each of the files. A common use case involves an editor editing a media project comprising one or more video tracks and one or more audio tracks. In such a case, the reader processes for multiple files, one for each of the video tracks and audio tracks, service a single media processing application running on the reader system.<!-- EPO <DP n="11"> --></p>
<p id="p0023" num="0023">The indexing service described herein provides several advantages as compared to prior systems in which a reader has no access to an index, or has to work with an index located within an incomplete file. A first advantage stems from the positive information received by a reader as to the state of the media file on shared storage when it receives a message. This keeps the reader informed as to what new elements have arrived so it does not waste time continually requesting elements that are not yet present. Should errors in the writing process occur, messages keep the reader informed as to what is happening. By contrast, when attempting to read a media file directly, a reader may receive an error and have no information as to the cause of the error, which might indicate a network outage, a corrupt or partially written media element, or incomplete file synchronization, such as might occur in the case of an interrupted restore from archive. When such an error is received, the reader system has to wait an unknown period of time before the error condition is removed and reading can resume.</p>
<p id="p0024" num="0024">Another advantage of the described index service is the format-independent nature of the index. Readers do not have to know the specifics of each media file format, and can access elements within the media file during media capture by using only information stored in the index. By contrast, if a reader is reading a file containing an index directly, it needs to know where to find the index, or the one or more portions of the index if it is split into sections.</p>
<p id="p0025" num="0025">The various components of the various systems described herein may be implemented as a computer program using general-purpose computer systems. Such a computer system typically includes a main unit connected to both an output device that displays information to a user and an input device that receives input from a user. The main unit generally includes a processor connected to a memory system via an interconnection mechanism. The input device and output device also are connected to the processor and memory system via the interconnection mechanism.</p>
<p id="p0026" num="0026">One or more output devices may be connected to the computer system. Example output devices include, but are not limited to, liquid crystal displays (LCD), plasma displays, cathode ray tubes, video projection systems and other video output devices, printers, devices for communicating over a low or high bandwidth network, including network interface devices, cable modems, and storage devices such as disk or tape. One or more input devices may be connected to the computer system.<!-- EPO <DP n="12"> --> Example input devices include, but are not limited to, a keyboard, keypad, track ball, mouse, pen and tablet, touchscreen, camera, communication device, and data input devices. The invention is not limited to the particular input or output devices used in combination with the computer system or to those described herein.</p>
<p id="p0027" num="0027">The computer system may be a general purpose computer system, which is programmable using a computer programming language, a scripting language or even assembly language. The computer system may also be specially programmed, special purpose hardware. In a general-purpose computer system, the processor is typically a commercially available processor. The general-purpose computer also typically has an operating system, which controls the execution of other computer programs and provides scheduling, debugging, input/output control, accounting, compilation, storage assignment, data management and memory management, and communication control and related services. The computer system may be connected to a local network and/or to a wide area network, such as the Internet. The connected network may transfer to and from the computer system program instructions for execution on the computer, media data such as video data, still image data, or audio data, metadata, review and approval information for a media composition, media annotations, and other data.</p>
<p id="p0028" num="0028">A memory system typically includes a computer readable medium. The medium may be volatile or nonvolatile, writeable or nonwriteable, and/or rewriteable or not rewriteable. A memory system typically stores data in binary form. Such data may define an application program to be executed by the microprocessor, or information stored on the disk to be processed by the application program. The invention is not limited to a particular memory system. Time-based media may be stored on and input from magnetic, optical, or solid state drives, which may include an array of local or network attached disks.</p>
<p id="p0029" num="0029">System such as those described herein may be implemented in software, hardware, firmware, or a combination of the three. The various elements of the systems, either individually or in combination may be implemented as one or more computer program products in which computer program instructions are stored on a computer readable medium for execution by a computer, or transferred to a computer system via a connected local area or wide area network. Various steps of a process may be performed by a computer executing such computer program instructions. The<!-- EPO <DP n="13"> --> computer system may be a multiprocessor computer system or may include multiple computers connected over a computer network. The components described herein may be separate modules of a computer program, or may be separate computer programs, which may be operable on separate computers. The data produced by these components may be stored in a memory storage system or transmitted between computer systems by means of various communication media such as carrier signals.</p>
<p id="p0030" num="0030">Having now described an example embodiment, it should be apparent to those skilled in the art that the foregoing is merely illustrative and not limiting, having been presented by way of example only.</p>
</description>
<claims id="claims01" lang="en"><!-- EPO <DP n="14"> -->
<claim id="c-en-01-0001" num="0001">
<claim-text>A method of maintaining an index for a media file, the method comprising:
<claim-text>at a writer system (102), receiving media that is in the process of being captured or transferred and incrementally writing a plurality of portions of the media to a shared media storage system (106) for storage in a media file (108); and</claim-text>
<claim-text>creating an index (114) for the media file on an indexing system (112);</claim-text>
wherein the receiving, writing and creating steps comprise:<br/>
for each portion of the plurality of portions of the media:
<claim-text>at the writer system (102):
<claim-text>receiving the portion, the portion comprising a plurality of media elements;</claim-text>
<claim-text>sending the portion to the shared media storage system (106) to be stored in the media file on the shared media storage system; and</claim-text>
<claim-text>sending to a message broker system (110) a message that includes information defining locations within the media file of the media elements of the received portion;</claim-text></claim-text>
<claim-text>at the message broker system (110):
<claim-text>receiving the message; and</claim-text>
<claim-text>broadcasting the message on a message bus; and</claim-text></claim-text>
<claim-text>at the indexing system (112):
<claim-text>receiving the message from the message broker system; and</claim-text>
<claim-text>adding to the index (114) the information defining locations within the media file of the plurality of media elements of the received portion.</claim-text></claim-text></claim-text></claim>
<claim id="c-en-01-0002" num="0002">
<claim-text>The method of claim 1, wherein a quantity of data contained within each portion of the plurality of portions of the media corresponds to a storage capacity of a file system cache of the writer system.</claim-text></claim>
<claim id="c-en-01-0003" num="0003">
<claim-text>The method of claim 1 or 2, wherein the media file is one of:
<claim-text>a video file, wherein each media element of the plurality of media elements is a video frame of the video file;<!-- EPO <DP n="15"> --></claim-text>
<claim-text>an audio file, wherein each media element of the plurality of media elements is an audio sample of the audio file.</claim-text></claim-text></claim>
<claim id="c-en-01-0004" num="0004">
<claim-text>The method of any of the preceding claims, further comprising:<br/>
at the indexing system:
<claim-text>converting the received message into a refined message, wherein the refined message includes a notification that the media file has changed and does not include the information defining locations within the media file of the plurality of media elements of the received portion; and</claim-text>
<claim-text>sending the refined message to the message broker; and</claim-text>
<claim-text>the message broker receiving and broadcasting the refined message over the message bus.</claim-text></claim-text></claim>
<claim id="c-en-01-0005" num="0005">
<claim-text>The method of any of the preceding claims, further comprising, at a reader system (104) connected to the message bus and to the shared storage:
<claim-text>receiving the message broadcast by the message broker (110);</claim-text>
<claim-text>using the information defining the locations within the media file of the plurality of media elements of the received portion of the media file to retrieve from the shared storage (106) one or more of the plurality of media elements of the received portion of the media file (108); and</claim-text>
<claim-text>enabling a user of a media editing application running on the reader system to view and edit a portion of the media file that includes the retrieved one or more of the plurality of media elements.</claim-text></claim-text></claim>
<claim id="c-en-01-0006" num="0006">
<claim-text>The method of any of the preceding claims, wherein the reader system:
<claim-text>is receiving messages from the message broker (110); and</claim-text>
<claim-text>is requiring an element of the media file (108) that it has not previously retrieved from shared storage;</claim-text>
<claim-text>and the method is further:
<claim-text>determining whether the reader system has information from previously received messages that specifies whether the required element is available from the shared storage;<!-- EPO <DP n="16"> --></claim-text>
<claim-text>if the reader system has information from previously received messages that the required element is available from the shared storage, using information defining a location of the required element within the media file to retrieve the required element from the shared storage; and</claim-text>
<claim-text>if the reader system does not have information from previously received messages that the required element is available from the shared storage, issuing a query to the indexing system (112) to determine whether the index (114) includes an entry for the required element and, if the index includes an entry for the required element, retrieving from the index location information for the required element and using the location information to retrieve the required element from shared storage.</claim-text></claim-text></claim-text></claim>
<claim id="c-en-01-0007" num="0007">
<claim-text>The method of claim 6, further comprising:<br/>
if the reader system receives a response from the indexing system that the index does not include an entry for the required element, displaying on a display of the reader system an indication that the requested element is not yet available.</claim-text></claim>
<claim id="c-en-01-0008" num="0008">
<claim-text>The method of any of the preceding claims, wherein the reader system:
<claim-text>is receiving refined messages from the message broker (110); and</claim-text>
<claim-text>is requiring an element of the media file (108) that it has not previously retrieved from shared storage; and</claim-text>
<claim-text>is further:
<claim-text>issuing a query to the indexing system (112) to determine whether the index (114) includes an entry for the required element, and, if the index includes an entry for the required element, retrieving location information for the required element and retrieving the required element from shared storage; and</claim-text>
<claim-text>if the reader system receives a response from the indexing system that the index does not include an entry for the required element:
<claim-text>after waiting until the required element is expected to be present on the shared storage, issuing a second query to the indexing system to determine whether the index includes an entry for the required element; and<!-- EPO <DP n="17"> --></claim-text>
<claim-text>if the index includes an entry for the required element, retrieving from the index location information for the required element and using the location information to retrieve the required element from shared storage.</claim-text></claim-text></claim-text></claim-text></claim>
<claim id="c-en-01-0009" num="0009">
<claim-text>The method of claim 8, wherein information as to when the required element is expected to be present is included within one of:
<claim-text>a message received by the reader system that includes information defining locations within the media file of a plurality of media elements;</claim-text>
<claim-text>a refined message received by the reader system that includes a notification that the media file has changed but does not include information defining locations within the media file of a plurality of media elements.</claim-text></claim-text></claim>
<claim id="c-en-01-0010" num="0010">
<claim-text>The method of any of the preceding claims, wherein the reader system:
<claim-text>is receiving refined messages from the broker (110); and</claim-text>
<claim-text>is requiring an element of the media file (108) that it has not previously retrieved from shared storage, the required element corresponding to a temporal location within the media file that is temporally close to a most recently captured element of the media file; and</claim-text>
<claim-text>in response to receiving the refined message, issuing a query to the indexing system (112) to determine whether the index (114) includes an entry for the required element, and if the index includes an entry for the required element, retrieving from the index location information for the required element and using the location information to retrieve the required element from shared storage.</claim-text></claim-text></claim>
<claim id="c-en-01-0011" num="0011">
<claim-text>The method of any of the preceding claims, comprising, at the indexing system (112), in response to receiving a query from a reading system (104) for location information within the media file for a specified one or more elements of the media file:<br/>
<!-- EPO <DP n="18"> -->if the index includes an entry for the specified one or more elements of the media file, providing a response to the reading system that includes location information for the specified one or more elements of the media file.</claim-text></claim>
<claim id="c-en-01-0012" num="0012">
<claim-text>The method of claim 11, comprising, at the indexing system (112):<br/>
if the index does not include an entry for the specified one or more elements of the media file, providing a response to the reading system that includes information as to a temporal location of a most recently received element of the media file.</claim-text></claim>
<claim id="c-en-01-0013" num="0013">
<claim-text>A system having means for performing a method as set out in any of claims 1 to 12.</claim-text></claim>
<claim id="c-en-01-0014" num="0014">
<claim-text>A computer-readable medium with computer program instructions encoded thereon, which when executed by a computer system cause the computer system to perform a method as claimed in any of claims 1 to 12.</claim-text></claim>
</claims>
<claims id="claims02" lang="de"><!-- EPO <DP n="19"> -->
<claim id="c-de-01-0001" num="0001">
<claim-text>Verfahren zum Aufrechterhalten eines Index für eine Mediendatei, wobei das Verfahren umfasst:
<claim-text>an einem Schreibsystem (102), Empfangen von Medien, die gerade erfasst oder übertragen werden, und inkrementelles Schreiben einer Vielzahl von Teilen des Mediums in ein gemeinsames Medienspeichersystem (106) zur Speicherung in einer Mediendatei (108); und</claim-text>
<claim-text>Erzeugen eines Index (114) für die Mediendatei auf einem Indizierungssystem (112); wobei die Schritte Empfangen, Schreiben und Erzeugen umfassen:<br/>
für jeden Teil der Vielzahl von Teilen des Mediums:
<claim-text>am Schreibsystem (102):
<claim-text>Empfangen des Teils, wobei der Teil eine Vielzahl von Medienelementen umfasst;</claim-text>
<claim-text>Senden des Teils an das gemeinsame Medienspeichersystem (106), um in der Mediendatei auf dem gemeinsamen Medienspeichersystem gespeichert zu werden; und</claim-text>
<claim-text>Senden einer Nachricht an ein Nachrichten-Broker-System (110), die Informationen enthält, die Orte der Medienelemente des empfangenen Teils innerhalb der Mediendatei definieren;</claim-text></claim-text>
<claim-text>am Nachrichten-Broker-Sy stem (110):
<claim-text>Empfangen der Nachricht; und</claim-text>
<claim-text>Übertragen der Nachricht auf einem Nachrichtenbus; und</claim-text></claim-text>
<claim-text>am Indizierungssystem (112):
<claim-text>Empfangen der Nachricht vomNachrichten-Broker-System; und</claim-text>
<claim-text>Hinzufügen der Informationen, die die Orte der Vielzahl von Medienelementen des empfangenen Teils innerhalb der Mediendatei definieren, zum Index (114).</claim-text></claim-text></claim-text></claim-text></claim>
<claim id="c-de-01-0002" num="0002">
<claim-text>Verfahren nach Anspruch 1, wobei eine Datenmenge, die in jedem Teil der mehreren Teile des Mediums enthalten ist, einer Speicherkapazität eines Dateisystem-Caches des Schreibsystems entspricht.<!-- EPO <DP n="20"> --></claim-text></claim>
<claim id="c-de-01-0003" num="0003">
<claim-text>Verfahren nach Anspruch 1 oder 2, wobei die Mediendatei eine der folgenden ist:
<claim-text>eine Videodatei, wobei jedes Medienelement der Vielzahl von Medienelementen ein Videobild der Videodatei ist;</claim-text>
<claim-text>eine Audiodatei, wobei jedes Medienelement der Vielzahl von Medienelementen ein Audio-Sample der Audiodatei ist.</claim-text></claim-text></claim>
<claim id="c-de-01-0004" num="0004">
<claim-text>Verfahren nach einem der vorhergehenden Ansprüche, ferner umfassend:<br/>
am Indizierungssystem:
<claim-text>Konvertieren der empfangenen Nachricht in eine verfeinerte Nachricht, wobei die verfeinerte Nachricht eine Benachrichtigung enthält, dass sich die Mediendatei geändert hat und keine Informationen enthält, die Orte der Vielzahl von Medienelementen des empfangenen Teils innerhalb der Mediendatei definieren; und</claim-text>
<claim-text>Senden der verfeinerten Nachricht an den Nachrichten-Broker; und</claim-text>
<claim-text>wobei der Nachrichten-Broker die verfeinerte Nachricht empfängt und über den Nachrichtenbus überträgt.</claim-text></claim-text></claim>
<claim id="c-de-01-0005" num="0005">
<claim-text>Verfahren nach einem der vorangehenden Ansprüche, das ferner an einem Lesesystem (104), das mit dem Nachrichtenbus und dem gemeinsamen Speicher verbunden ist, umfasst:
<claim-text>Empfangen der vom Nachrichten-Broker (110) gesendeten Nachricht;</claim-text>
<claim-text>Verwenden der Informationen, die die Orte der Vielzahl von Medienelementen des empfangenen Teils der Mediendatei innerhalb der Mediendatei definieren, um ein oder mehrere der Vielzahl von Medienelementen des empfangenen Teils der Mediendatei (108) aus dem gemeinsamen Speicher (106) abzurufen; und</claim-text>
<claim-text>Ermöglichen, dass ein Benutzer einer Medienbearbeitungsanwendung, die auf dem Lesesystem läuft, einen Teil der Mediendatei, der das abgerufene eine oder mehrere der Vielzahl von Medienelementen enthält, ansehen und bearbeiten kann.</claim-text></claim-text></claim>
<claim id="c-de-01-0006" num="0006">
<claim-text>Verfahren nach einem der vorhergehenden Ansprüche, wobei das Lesesystem:
<claim-text>Nachrichten vom Nachrichten-Broker (110) empfängt; und</claim-text>
<claim-text>ein Element der Mediendatei (108) anfordert, das es zuvor nicht aus dem gemeinsamen Speicher abgerufen hat;<!-- EPO <DP n="21"> --></claim-text>
<claim-text>und das Verfahren ferner umfasst:
<claim-text>Bestimmen, ob das Lesesystem über Informationen aus zuvor empfangenen Nachrichten verfügt, die angeben, ob das erforderliche Element im gemeinsamen Speicher verfügbar ist;</claim-text>
<claim-text>wenn das Lesesystem über Informationen aus zuvor empfangenen Nachrichten verfügt, dass das erforderliche Element aus dem gemeinsam genutzten Speicher verfügbar ist, Verwenden von Informationen, die einen Ort des erforderlichen Elements innerhalb der Mediendatei definieren, um das erforderliche Element aus dem gemeinsam genutzten Speicher abzurufen; und</claim-text>
<claim-text>wenn das Lesesystem nicht über Informationen aus zuvor empfangenen Nachrichten verfügt, dass das erforderliche Element aus dem gemeinsamen Speicher verfügbar ist, Ausgeben einer Abfrage an das Indizierungssystem (112), um zu bestimmen, ob der Index (114) einen Eintrag für das erforderliche Element enthält, und, wenn der Index einen Eintrag für das erforderliche Element enthält, Abrufen von Ortsinformationen für das erforderliche Element aus dem Index und Verwenden der Ortsinformationen, um das erforderliche Element aus dem gemeinsamen Speicher abzurufen.</claim-text></claim-text></claim-text></claim>
<claim id="c-de-01-0007" num="0007">
<claim-text>Verfahren nach Anspruch 6, das weiterhin umfasst:<br/>
wenn das Lesesystem eine Antwort vom Indizierungssystem empfängt, dass der Index keinen Eintrag für das angeforderte Element enthält, Anzeigen einer Anzeige auf einem Display des Lesesystems, dass das angeforderte Element noch nicht verfügbar ist.</claim-text></claim>
<claim id="c-de-01-0008" num="0008">
<claim-text>Das Verfahren nach einem der vorhergehenden Ansprüche,<br/>
wobei das Lesesystem:
<claim-text>verfeinerte Nachrichten von dem Nachrichten-Broker (110) empfängt; und</claim-text>
<claim-text>ein Element der Mediendatei (108) anfordert, das es zuvor nicht aus dem gemeinsamen Speicher abgerufen hat; und</claim-text>
<claim-text>weiterhin:
<claim-text>Ausgeben einer Abfrage an das Indizierungssystem (112), um zu bestimmen, ob der Index (114) einen Eintrag für das erforderliche Element enthält, und, wenn der Index einen Eintrag für das erforderliche Element<!-- EPO <DP n="22"> --> enthält, Abrufen von Ortsinformationen für das erforderliche Element und Abrufen des erforderlichen Elements aus dem gemeinsamen Speicher; und</claim-text>
<claim-text>wenn das Lesesystem eine Antwort vom Indizierungssystem erhält, dass der Index keinen Eintrag für das gewünschte Element enthält:
<claim-text>nach dem Warten, bis davon auszugehen ist, dass das erforderliche Element auf dem gemeinsamen Speicher vorhanden ist, Ausgeben einer zweiten Abfrage an das Indizierungssystem, um zu bestimmen, ob der Index einen Eintrag für das erforderliche Element enthält; und</claim-text>
<claim-text>wenn der Index einen Eintrag für das erforderliche Element enthält, Abrufen von Ortsinformationen für das erforderliche Element aus dem Index und Verwenden der Ortsinformationen, um das erforderliche Element aus dem gemeinsamen Speicher abzurufen.</claim-text></claim-text></claim-text></claim-text></claim>
<claim id="c-de-01-0009" num="0009">
<claim-text>Verfahren nach Anspruch 8, wobei die Information, wann das erforderliche Element voraussichtlich vorhanden sein wird, in einem der folgenden Elemente enthalten ist:
<claim-text>eine vom Lesesystem empfangene Nachricht, die Informationen enthält, die Orte einer Vielzahl von Medienelementen innerhalb der Mediendatei definieren;</claim-text>
<claim-text>eine vom Lesesystem empfangene verfeinerte Nachricht, die eine Benachrichtigung darüber enthält, dass sich die Mediendatei geändert hat, aber keine Informationen enthält, die Orte einer Vielzahl von Medienelementen innerhalb der Mediendatei definieren.</claim-text></claim-text></claim>
<claim id="c-de-01-0010" num="0010">
<claim-text>Verfahren nach einem der vorhergehenden Ansprüche,<br/>
wobei das Lesesystem:
<claim-text>verfeinerte Nachrichten vom Broker (110) empfängt; und</claim-text>
<claim-text>ein Element der Mediendatei (108) anfordert, das es zuvor nicht aus dem gemeinsamen Speicher abgerufen hat, wobei das angeforderte Element einer zeitlichen Position innerhalb der Mediendatei entspricht, die zeitlich nahe an einem zuletzt erfassten Element der Mediendatei liegt; und<br/>
als Reaktion auf das Empfangen der verfeinerten Nachricht, Ausgeben einer Abfrage an das Indizierungssystem (112), um zu bestimmen, ob der Index (114) einen Eintrag für das erforderliche Element enthält, und wenn der Index einen Eintrag für das erforderliche Element enthält, Abrufen von<!-- EPO <DP n="23"> --> Ortsinformationen für das erforderliche Element aus dem Index und Verwenden der Ortsinformationen, um das erforderliche Element aus dem gemeinsamen Speicher abzurufen.</claim-text></claim-text></claim>
<claim id="c-de-01-0011" num="0011">
<claim-text>Verfahren nach einem der vorhergehenden Ansprüche, bei dem das Indizierungssystem (112) als Reaktion auf den Empfang einer Abfrage von einem Lesesystem (104) nach Ortsinformationen innerhalb der Mediendatei für ein spezifiziertes eines oder mehrere Elemente der Mediendatei:<br/>
wenn der Index einen Eintrag für das angegebene eine oder mehrere Elemente der Mediendatei enthält, Bereitstellen einer Antwort an das Lesesystem, die Ortsinformationen für das angegebene eine oder mehrere Elemente der Mediendatei enthält.</claim-text></claim>
<claim id="c-de-01-0012" num="0012">
<claim-text>VerfahrennachAnspruch 11, aufweisend am Indizierungssystem(112):<br/>
wenn der Index keinen Eintrag für das spezifizierte eine oder mehrere Elemente der Mediendatei enthält, Bereitstellen einer Antwort an das Lesesystem, die Informationen über einen zeitlichen Ort eines zuletzt empfangenen Elements der Mediendatei enthält.</claim-text></claim>
<claim id="c-de-01-0013" num="0013">
<claim-text>System mit Mitteln zur Durchführung eines Verfahrens nach einem der Ansprüche 1 bis 12.</claim-text></claim>
<claim id="c-de-01-0014" num="0014">
<claim-text>Computerlesbares Medium mit darauf kodierten Computerprogrammanweisungen, die bei Ausführung durch ein Computersystem das Computersystem veranlassen, ein Verfahren nach einem der Ansprüche 1 bis 12 durchzuführen.</claim-text></claim>
</claims>
<claims id="claims03" lang="fr"><!-- EPO <DP n="24"> -->
<claim id="c-fr-01-0001" num="0001">
<claim-text>Procédé de maintien d'un index pour un fichier multimédia, le procédé comprenant de :
<claim-text>au niveau d'un système d'écriture (102), recevoir un média qui est en train d'être capturé ou transféré et écrire de manière incrémentielle une pluralité de parties du média sur un système de stockage de médias partagé (106) pour un stockage dans un fichier multimédia (108) ; et</claim-text>
<claim-text>créer un index (114) pour le fichier multimédia sur un système d'indexation (112) ;</claim-text>
<claim-text>dans lequel les étapes de réception, d'écriture et de création comprennent de :
<claim-text>pour chaque partie de la pluralité de parties du média :<br/>
au niveau du système d'écriture (102) :
<claim-text>recevoir la partie, la partie comprenant une pluralité d'éléments de média;</claim-text>
<claim-text>envoyer la partie au système de stockage de médias partagé (106) pour être stockée dans le fichier multimédia sur le système de stockage de médias partagé; et</claim-text>
<claim-text>envoyer à un système de courtier de messages (110) un message qui comprend des informations définissant des emplacements dans le fichier multimédia des éléments de média de la partie reçue;</claim-text></claim-text>
<claim-text>au niveau du système de courtage de messages (110) :
<claim-text>recevoir le message; et</claim-text>
<claim-text>diffuser le message sur un bus de messages; et</claim-text></claim-text>
<claim-text>au niveau du système d'indexation (112) :
<claim-text>recevoir le message à partir du système de courtage de messages; et<!-- EPO <DP n="25"> --></claim-text>
<claim-text>ajouter à l'index (114) les informations définissant des emplacements dans le fichier multimédia de la pluralité d'éléments de média de la partie reçue.</claim-text></claim-text></claim-text></claim-text></claim>
<claim id="c-fr-01-0002" num="0002">
<claim-text>Procédé selon la revendication 1, dans lequel une quantité de données contenues dans chaque partie de la pluralité de parties du média correspond à une capacité de stockage d'un cache de système de fichiers du système d'écriture.</claim-text></claim>
<claim id="c-fr-01-0003" num="0003">
<claim-text>Procédé de la revendication 1 ou 2, dans lequel le fichier multimédia est l'un de :
<claim-text>un fichier vidéo, dans lequel chaque élément de média de la pluralité d'éléments de média est une trame vidéo du fichier vidéo;</claim-text>
<claim-text>un fichier audio, dans lequel chaque élément de média de la pluralité d'éléments de média est un échantillon audio du fichier audio.</claim-text></claim-text></claim>
<claim id="c-fr-01-0004" num="0004">
<claim-text>Procédé selon l'une quelconque des revendications précédentes, comprenant en outre de :<br/>
au niveau du système d'indexation :
<claim-text>convertir le message reçu en un message affiné, dans lequel le message affiné comprend une notification selon laquelle le fichier multimédia a été modifié et ne comprend pas les informations définissant des emplacements dans le fichier multimédia de la pluralité d'éléments de média de la partie reçue; et</claim-text>
<claim-text>envoyer le message affiné au courtier de messages; et</claim-text>
<claim-text>le courtier de messages reçoit et diffuse le message affiné sur le bus de messages.</claim-text><!-- EPO <DP n="26"> --></claim-text></claim>
<claim id="c-fr-01-0005" num="0005">
<claim-text>Procédé selon l'une quelconque des revendications précédentes, comprenant en outre, au niveau d'un système de lecture (104) connecté au bus de messages et à la mémoire partagée, de :
<claim-text>recevoir le message diffusé par le courtier de messages (110) ;</claim-text>
<claim-text>utiliser les informations définissant les emplacements dans le fichier multimédia de la pluralité d'éléments de média de la partie reçue du fichier multimédia pour récupérer à partir du stockage partagé (106) un ou plusieurs de la pluralité d'éléments de média de la partie reçue du fichier multimédia (108) ; et</claim-text>
<claim-text>permettre à un utilisateur d'une application d'édition de médias s'exécutant sur le système de lecture de visualiser et d'éditer une partie du fichier multimédia qui comprend le ou les éléments récupérés de la pluralité d'éléments de média.</claim-text></claim-text></claim>
<claim id="c-fr-01-0006" num="0006">
<claim-text>Procédé selon l'une quelconque des revendications précédentes, dans lequel le système de lecture :
<claim-text>reçoit des messages à partir du courtier de messages (110) ; et</claim-text>
<claim-text>demande un élément du fichier multimédia (108) qu'il n'a pas précédemment récupéré à partir du stockage partagé;</claim-text>
<claim-text>et le procédé consiste en outre à :
<claim-text>déterminer si le système de lecture dispose d'informations provenant de messages reçus précédemment qui spécifient si l'élément requis est disponible à partir du stockage partagé;</claim-text>
<claim-text>si le système de lecture dispose d'informations provenant de messages reçus précédemment selon lesquelles l'élément requis est disponible à partir du stockage partagé, utiliser des informations définissant un<!-- EPO <DP n="27"> --> emplacement de l'élément requis dans le fichier multimédia pour récupérer l'élément requis à partir du stockage partagé; et</claim-text>
<claim-text>si le système de lecture ne dispose pas d'informations provenant de messages précédemment reçus selon lesquelles l'élément requis est disponible à partir du stockage partagé, émettre une requête vers le système d'indexation (112) pour déterminer si l'index (114) comprend une entrée pour l'élément requis et, si l'index comprend une entrée pour l'élément requis, récupérer à partir de l'index des informations d'emplacement pour l'élément requis et utiliser les informations d'emplacement pour récupérer l'élément requis à partir du stockage partagé.</claim-text></claim-text></claim-text></claim>
<claim id="c-fr-01-0007" num="0007">
<claim-text>Procédé selon la revendication 6, comprenant en outre de :<br/>
si le système de lecture reçoit une réponse du système d'indexation indiquant que l'index ne comprend pas d'entrée pour l'élément requis, afficher sur un écran du système de lecture une indication que l'élément demandé n'est pas encore disponible.</claim-text></claim>
<claim id="c-fr-01-0008" num="0008">
<claim-text>Procédé selon l'une quelconque des revendications précédentes, dans lequel le système de lecture :
<claim-text>reçoit des messages affinés à partir du courtier de messages (110) ; et</claim-text>
<claim-text>demande un élément du fichier multimédia (108) qu'il n'a pas précédemment récupéré à partir du stockage partagé; et</claim-text>
<claim-text>en outre :
<claim-text>émet une requête vers le système d'indexation (112) pour déterminer si l'index (114) comprend une entrée<!-- EPO <DP n="28"> --> pour l'élément requis, et, si l'index comprend une entrée pour l'élément requis, récupérer des informations d'emplacement pour l'élément requis et récupérer l'élément requis à partir du stockage partagé; et</claim-text>
<claim-text>si le système de lecture reçoit une réponse à partir du système d'indexation indiquant que l'index ne contient pas d'entrée pour l'élément requis :
<claim-text>après avoir attendu jusqu'à ce que l'élément requis soit censé être présent sur le stockage partagé, émettre une seconde requête vers le système d'indexation pour déterminer si l'index comprend une entrée pour l'élément requis; et</claim-text>
<claim-text>si l'index comprend une entrée pour l'élément requis, récupérer à partir de l'index des informations d'emplacement pour l'élément requis et utiliser les informations d'emplacement pour récupérer l'élément requis à partir du stockage partagé.</claim-text></claim-text></claim-text></claim-text></claim>
<claim id="c-fr-01-0009" num="0009">
<claim-text>Procédé selon la revendication 8, dans lequel les informations relatives au fait de savoir quand l'élément requis est censé être présent sont incluses dans l'un des éléments suivants :
<claim-text>un message reçu par le système de lecture qui comprend des informations définissant des emplacements dans le fichier multimédia d'une pluralité d'éléments de média;</claim-text>
<claim-text>un message affiné reçu par le système de lecture qui comprend une notification selon laquelle le fichier multimédia a été modifié mais ne comprend pas d'informations définissant des emplacements dans le fichier multimédia d'une pluralité d'éléments de média.</claim-text></claim-text></claim>
<claim id="c-fr-01-0010" num="0010">
<claim-text>Procédé selon l'une quelconque des revendications précédentes, dans lequel le système de lecture :<!-- EPO <DP n="29"> -->
<claim-text>reçoit des messages affinés à partir du courtier (110) ; et</claim-text>
<claim-text>demande un élément du fichier multimédia (108) qu'il n'a pas précédemment récupéré à partir du stockage partagé, l'élément requis correspondant à un emplacement temporel dans le fichier multimédia qui est temporellement proche d'un élément le plus récemment capturé du fichier multimédia; et</claim-text>
en réponse à la réception du message affiné, émettre une requête vers le système d'indexation (112) pour déterminer si l'index (114) comprend une entrée pour l'élément requis, et si l'index comprend une entrée pour l'élément requis, récupérer à partir de l'index des informations d'emplacement pour l'élément requis et utiliser les informations d'emplacement pour récupérer l'élément requis à partir du stockage partagé.</claim-text></claim>
<claim id="c-fr-01-0011" num="0011">
<claim-text>Procédé selon l'une quelconque des revendications précédentes, comprenant, au niveau du système d'indexation (112), en réponse à la réception d'une requête provenant d'un système de lecture (104) pour des informations d'emplacement dans le fichier multimédia pour un ou plusieurs éléments spécifiés du fichier multimédia :<br/>
si l'index comprend une entrée pour le ou les éléments spécifiés du fichier multimédia, fournir une réponse au système de lecture qui comprend des informations d'emplacement pour le ou les éléments spécifiés du fichier multimédia.</claim-text></claim>
<claim id="c-fr-01-0012" num="0012">
<claim-text>Procédé selon la revendication 11, comprenant, au niveau du système d'indexation (112) :<br/>
si l'index ne comprend pas d'entrée pour le ou les éléments spécifiés du fichier multimédia, fournir une<!-- EPO <DP n="30"> --> réponse au système de lecture qui comprend des informations concernant l'emplacement temporel d'un élément reçu le plus récemment du fichier multimédia.</claim-text></claim>
<claim id="c-fr-01-0013" num="0013">
<claim-text>Système comportant des moyens pour exécuter un procédé tel que défini dans l'une quelconque des revendications 1 à 12.</claim-text></claim>
<claim id="c-fr-01-0014" num="0014">
<claim-text>Support lisible par ordinateur comportant des instructions de programme informatique codées sur celui-ci, qui, lorsqu'elles sont exécutées par un système informatique, amènent le système informatique à exécuter un procédé selon l'une quelconque des revendications 1 à 12.</claim-text></claim>
</claims>
<drawings id="draw" lang="en"><!-- EPO <DP n="31"> -->
<figure id="f0001" num="1"><img id="if0001" file="imgf0001.tif" wi="157" he="177" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="32"> -->
<figure id="f0002" num="2"><img id="if0002" file="imgf0002.tif" wi="108" he="162" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="33"> -->
<figure id="f0003" num="3"><img id="if0003" file="imgf0003.tif" wi="153" he="233" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="34"> -->
<figure id="f0004" num="4"><img id="if0004" file="imgf0004.tif" wi="148" he="233" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="35"> -->
<figure id="f0005" num="5"><img id="if0005" file="imgf0005.tif" wi="138" he="233" img-content="drawing" img-format="tif"/></figure>
</drawings>
<ep-reference-list id="ref-list">
<heading id="ref-h0001"><b>REFERENCES CITED IN THE DESCRIPTION</b></heading>
<p id="ref-p0001" num=""><i>This list of references cited by the applicant is for the reader's convenience only. It does not form part of the European patent document. Even though great care has been taken in compiling the references, errors or omissions cannot be excluded and the EPO disclaims all liability in this regard.</i></p>
<heading id="ref-h0002"><b>Patent documents cited in the description</b></heading>
<p id="ref-p0002" num="">
<ul id="ref-ul0001" list-style="bullet">
<li><patcit id="ref-pcit0001" dnum="US20100262710A"><document-id><country>US</country><doc-number>20100262710</doc-number><kind>A</kind></document-id></patcit><crossref idref="pcit0001">[0004]</crossref></li>
<li><patcit id="ref-pcit0002" dnum="US20040199507A"><document-id><country>US</country><doc-number>20040199507</doc-number><kind>A</kind></document-id></patcit><crossref idref="pcit0002">[0005]</crossref></li>
<li><patcit id="ref-pcit0003" dnum="US5267351A"><document-id><country>US</country><doc-number>5267351</doc-number><kind>A</kind></document-id></patcit><crossref idref="pcit0003">[0012]</crossref></li>
<li><patcit id="ref-pcit0004" dnum="US5355450A"><document-id><country>US</country><doc-number>5355450</doc-number><kind>A</kind></document-id></patcit><crossref idref="pcit0004">[0012]</crossref></li>
<li><patcit id="ref-pcit0005" dnum="US5930445A"><document-id><country>US</country><doc-number>5930445</doc-number><kind>A</kind></document-id></patcit><crossref idref="pcit0005">[0012]</crossref></li>
</ul></p>
<heading id="ref-h0003"><b>Non-patent literature cited in the description</b></heading>
<p id="ref-p0003" num="">
<ul id="ref-ul0002" list-style="bullet">
<li><nplcit id="ref-ncit0001" npl-type="s"><article><atl>Demystifying Metadata</atl><serial><sertitle>Journal of the Audio Engineering Society</sertitle><pubdate><sdate>20030700</sdate><edate/></pubdate><vid>51</vid><ino>7/8</ino></serial></article></nplcit><crossref idref="ncit0001">[0005]</crossref></li>
</ul></p>
</ep-reference-list>
</ep-patent-document>
