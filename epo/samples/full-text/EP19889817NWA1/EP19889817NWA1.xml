<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE ep-patent-document PUBLIC "-//EPO//EP PATENT DOCUMENT 1.5.1//EN" "ep-patent-document-v1-5-1.dtd">
<!-- This XML data has been generated under the supervision of the European Patent Office -->
<ep-patent-document id="EP19889817A1" file="EP19889817NWA1.xml" lang="en" country="EP" doc-number="3890218" kind="A1" date-publ="20211006" status="n" dtd-version="ep-patent-document-v1-5-1">
<SDOBI lang="en"><B000><eptags><B001EP>ATBECHDEDKESFRGBGRITLILUNLSEMCPTIESILTLVFIROMKCYALTRBGCZEEHUPLSKBAHRIS..MTNORSMESMMAKHTNMD..........</B001EP><B005EP>J</B005EP><B007EP>BDM Ver 2.0.12 (4th of August) -  1100000/0</B007EP></eptags></B000><B100><B110>3890218</B110><B120><B121>EUROPEAN PATENT APPLICATION</B121><B121EP>published in accordance with Art. 153(4) EPC</B121EP></B120><B130>A1</B130><B140><date>20211006</date></B140><B190>EP</B190></B100><B200><B210>19889817.3</B210><B220><date>20191028</date></B220><B240><B241><date>20210628</date></B241></B240><B250>zh</B250><B251EP>en</B251EP><B260>en</B260></B200><B300><B310>201811437249</B310><B320><date>20181128</date></B320><B330><ctry>CN</ctry></B330></B300><B400><B405><date>20211006</date><bnum>202140</bnum></B405><B430><date>20211006</date><bnum>202140</bnum></B430></B400><B500><B510EP><classification-ipcr sequence="1"><text>H04J   3/06        20060101AFI20200605BHEP        </text></classification-ipcr><classification-ipcr sequence="2"><text>H04J  14/02        20060101ALI20200605BHEP        </text></classification-ipcr><classification-ipcr sequence="3"><text>H04L   7/00        20060101ALI20200605BHEP        </text></classification-ipcr></B510EP><B520EP><classifications-cpc><classification-cpc sequence="1"><text>H04J   3/06        20130101 LI20200626BCEP        </text></classification-cpc><classification-cpc sequence="2"><text>H04J  14/02        20130101 LI20200626BCEP        </text></classification-cpc><classification-cpc sequence="3"><text>H04L   7/00        20130101 LI20200626BCEP        </text></classification-cpc></classifications-cpc></B520EP><B540><B541>de</B541><B542>ZEITSTEMPELERFASSUNGSVERFAHREN UND ZEITSYNCHRONISATIONSSYSTEM</B542><B541>en</B541><B542>TIMESTAMP ACQUISITION METHOD AND TIME SYNCHRONIZATION SYSTEM</B542><B541>fr</B541><B542>PROCÉDÉ D'ACQUISITION D'ESTAMPILLE TEMPORELLE ET SYSTÈME DE SYNCHRONISATION TEMPORELLE</B542></B540><B590><B598>6</B598></B590></B500><B700><B710><B711><snm>ZTE Corporation</snm><iid>101635398</iid><irf>E0135044-SP</irf><adr><str>ZTE Plaza 
Keji Road South 
Hi-Tech Industrial Park 
Nanshan District</str><city>Shenzhen, Guangdong 518057</city><ctry>CN</ctry></adr></B711></B710><B720><B721><snm>WANG, Linlin</snm><adr><str>ZTE Plaza Keji Road South,
Hi-Tech Industrial Park,
Nanshan District.</str><city>Shenzhen, Guangdong 518057</city><ctry>CN</ctry></adr></B721><B721><snm>HE, Li</snm><adr><str>ZTE Plaza Keji Road South,
Hi-Tech Industrial Park,
Nanshan District.</str><city>Shenzhen, Guangdong 518057</city><ctry>CN</ctry></adr></B721><B721><snm>YOU, Jun</snm><adr><str>ZTE Plaza Keji Road South,
Hi-Tech Industrial Park,
Nanshan District.</str><city>Shenzhen, Guangdong 518057</city><ctry>CN</ctry></adr></B721></B720><B740><B741><snm>Pennacchio, Salvatore Giovanni</snm><sfx>et al</sfx><iid>101784427</iid><adr><str>Jacobacci &amp; Partners S.p.A. 
Via Senato, 8</str><city>20121 Milano</city><ctry>IT</ctry></adr></B741></B740></B700><B800><B840><ctry>AL</ctry><ctry>AT</ctry><ctry>BE</ctry><ctry>BG</ctry><ctry>CH</ctry><ctry>CY</ctry><ctry>CZ</ctry><ctry>DE</ctry><ctry>DK</ctry><ctry>EE</ctry><ctry>ES</ctry><ctry>FI</ctry><ctry>FR</ctry><ctry>GB</ctry><ctry>GR</ctry><ctry>HR</ctry><ctry>HU</ctry><ctry>IE</ctry><ctry>IS</ctry><ctry>IT</ctry><ctry>LI</ctry><ctry>LT</ctry><ctry>LU</ctry><ctry>LV</ctry><ctry>MC</ctry><ctry>MK</ctry><ctry>MT</ctry><ctry>NL</ctry><ctry>NO</ctry><ctry>PL</ctry><ctry>PT</ctry><ctry>RO</ctry><ctry>RS</ctry><ctry>SE</ctry><ctry>SI</ctry><ctry>SK</ctry><ctry>SM</ctry><ctry>TR</ctry></B840><B844EP><B845EP><ctry>BA</ctry></B845EP><B845EP><ctry>ME</ctry></B845EP></B844EP><B848EP><B849EP><ctry>KH</ctry></B849EP><B849EP><ctry>MA</ctry></B849EP><B849EP><ctry>MD</ctry></B849EP><B849EP><ctry>TN</ctry></B849EP></B848EP><B860><B861><dnum><anum>CN2019113735</anum></dnum><date>20191028</date></B861><B862>zh</B862></B860><B870><B871><dnum><pnum>WO2020108202</pnum></dnum><date>20200604</date><bnum>202023</bnum></B871></B870></B800></SDOBI>
<abstract id="abst" lang="en">
<p id="pa01" num="0001">Provided is a timestamp acquisition method and a time synchronization system. The method includes that: a first device sets a first tag for a first packet to be sent to a second device; and in a case where the first tag is detected at a Physical Coding Sublayer (PCS) layer of the first device, a current time T1 is acquired as a sending timestamp at which the first packet is sent. By virtue of the technical solution, the position where a timestamp of the first packet is provided is lowered into the PCS layer, and timestamp processing is performed at the PCS layer, thereby greatly reducing uncertain subsequent time delays. The solution can solve the problem of low accuracy of a timestamp determination scheme in the related art, greatly improve the accuracy of timestamp processing, and improve the time synchronization accuracy of the system.<img id="iaf01" file="imgaf001.tif" wi="127" he="75" img-content="drawing" img-format="tif"/></p>
</abstract>
<description id="desc" lang="en"><!-- EPO <DP n="1"> -->
<heading id="h0001"><b><u>Technical Field</u></b></heading>
<p id="p0001" num="0001">The present disclosure relates to the field of communications, and in particular to a timestamp acquisition method and a time synchronization system.</p>
<heading id="h0002"><b><u>Background</u></b></heading>
<p id="p0002" num="0002">In a related art, a time transfer technology has long been applied in bearer networks. Since the first version of the 1588V2 standard in 2008, a bearing device has been able to support the time transfer technology. However, because the previous standards do not require high accuracy of time transfer, the time transfer technology of the bearer network has not been widely applied.</p>
<p id="p0003" num="0003">After the 5th-generation mobile communication system (5G) technology is applied, the high-accuracy time transfer becomes a new mainstream demand in a bearer network system. In recent years, some high-accuracy time transfer technology schemes have been introduced, which enables the time transfer technology of the bearer network to be widely applied. A variety of methods can be used to improve the time accuracy of the bearing device. Compared with the general high accuracy, a significant change in the high accuracy is that the layer in which a timestamp is provided is as close to a physical (PHY) layer as possible to reduce a time delay caused by jitter in the device, thereby improving the accuracy of the timestamp. But how to increase the accuracy, different manufacturers put forward different technical solutions.</p>
<p id="p0004" num="0004">FlexE, which refers to the Flex Ethernet technology, aims to separate an ETH service from a physical channel by adding a FlexE Shim layer between a Media Access Control (MAC) layer and a Physical Coding Sublayer (PCS) layer of the traditional ETH. <figref idref="f0001">Fig. 1</figref> is a schematic diagram of a relationship among various parts of FlexE according to the related art. As shown in <figref idref="f0001">Fig. 1</figref>, FlexE Group includes 1 to n Ethernet PHYs; FlexE Clients correspond to a service flow, and FlexE Shim realizes a mapping/demapping function between the FlexE Clients and the FlexE Group, so that the rate of the Client no longer needs to correspond to the rate of the PHY.</p>
<p id="p0005" num="0005"><figref idref="f0002">Fig. 2</figref> is a structure diagram of FlexE multiplexing according to the related art. <figref idref="f0003">Fig. 3</figref> is a structure diagram of FlexE demultiplexing according to the related art. The relationship<!-- EPO <DP n="2"> --> between an ETH hierarchy and a FlexE hierarchy is shown in <figref idref="f0002">Fig. 2</figref> and <figref idref="f0003">Fig. 3</figref>. The 64/66bit encoding, Idle frame insertion, Overhead insertion and PHY distribution are performed at the FlexE Shim layer, and scrambling/lane distribution and AM code insertion are performed at the PCS layer. The overhead inserted at the FlexE layer is used to carry control information. <figref idref="f0004">Fig. 4</figref> is a schematic diagram of a FlexE overhead structure according to the related art. As shown in <figref idref="f0004">Fig. 4</figref>, the FlexE overhead structure is composed of an 8*66bit multi-frame structure, the last five 66bit blocks of which are used to store a variety of management information.</p>
<p id="p0006" num="0006">There is no effective solution to the problem of low accuracy of a timestamp determination scheme in the related art.</p>
<heading id="h0003"><u>Summary</u></heading>
<p id="p0007" num="0007">Embodiments of the present disclosure provide a timestamp acquisition method and a time synchronization system, which may at least solve the problem of low accuracy of a timestamp determination scheme in the related art.</p>
<p id="p0008" num="0008">According to some embodiments of the present disclosure, a timestamp acquisition method is provided, which may include that: a first device sets a first tag for a first packet to be sent to a second device; and in a case where the first tag is detected at a PCS layer of the first device, a current time T1 is acquired as a sending timestamp at which the first packet is sent.</p>
<p id="p0009" num="0009">According to some other embodiments of the present disclosure, a second device receives a first packet sent by a first device, wherein the first packet is in a FlexE overhead block format; a time T2 at which a PCS layer of the second device receives a first 66bit of a first overhead block of the first packet is recorded, and the time T2 is determined as a receiving timestamp at which the first packet is received.</p>
<p id="p0010" num="0010">According to some other embodiments of the present disclosure, a time synchronization system is provided, which may include a first device and a second device. The first device is configured to set a first tag for a first packet to be sent to the second device; and in a case where the first tag is detected at a PCS layer of the first device, determine a current time t1 and feed back the time t1 to the second device. The second device is configured to receive the first packet sent by the first device, and determine a time t2 at which the first packet is received. The second device is configured to set a second tag for a second packet to be sent to the first device, and in a case where the second tag is<!-- EPO <DP n="3"> --> detected at a PCS layer of the second device, determine a current time t3. The first device is configured to receive the second packet, determine a time t4 at which the second packet is received and feed back the time t4 to the second device. The second device is configured to perform time synchronization according to the time t1, the time t2, the time t3 and the time t4.</p>
<p id="p0011" num="0011">According to still other embodiments of the present disclosure, a storage medium is provided. The storage medium stores a computer program. The computer program is configured to execute, at runtime, operations in any of the above method embodiments.</p>
<p id="p0012" num="0012">According to still other embodiments of the present disclosure, an electronic device is provided, which includes a memory and a processor. The memory stores a computer program. The processor is configured to run the computer program, so as to perform operations in any of the above method embodiments.</p>
<p id="p0013" num="0013">Through the embodiments of the present disclosure, the first device sets a first tag for a first packet to be sent to the second device; and in a case where the first tag is detected at a PCS layer of the first device, the current time T1 is acquired as the sending timestamp at which the first packet is sent. By virtue of the technical solution, the position where a timestamp of the first packet is provided is lowered into the PCS layer, and timestamp processing is performed at the PCS layer, thereby greatly reducing uncertain subsequent time delays. The solution can solve the problem of low accuracy of a timestamp determination scheme in the related art, greatly improve the accuracy of timestamp processing, and improve the time synchronization accuracy of the system.</p>
<heading id="h0004"><b><u>Brief Description of the Drawings</u></b></heading>
<p id="p0014" num="0014">The accompanying drawings described herein are used to provide a deeper understanding of the present disclosure, and constitute a part of the present application. The exemplary embodiments of the present disclosure and the description thereof are used to explain the present disclosure. The drawings and the exemplary embodiment do not constitute limitations to the present disclosure. In the drawings:
<ul id="ul0001" list-style="none">
<li><figref idref="f0001">Fig. 1</figref> is a schematic diagram of a relationship among various parts of FlexE according to the related art;</li>
<li><figref idref="f0002">Fig. 2</figref> is a structure diagram of FlexE multiplexing according to the related art;</li>
<li><figref idref="f0003">Fig. 3</figref> is a structure diagram of FlexE demultiplexing according to the related art;<!-- EPO <DP n="4"> --></li>
<li><figref idref="f0004">Fig. 4</figref> is a schematic diagram of a FlexE overhead structure according to the related art;</li>
<li><figref idref="f0005">Fig. 5</figref> is a structural block diagram of hardware of a communication device for implementing a timestamp acquisition method according to some embodiments of the present disclosure;</li>
<li><figref idref="f0006">Fig. 6</figref> is a flowchart of a timestamp acquisition method according to some embodiments of the present disclosure;</li>
<li><figref idref="f0006">Fig. 7</figref> is a structure diagram of a sending system and a receiving system according to some embodiments of the present disclosure; and</li>
<li><figref idref="f0007">Fig. 8</figref> is a time information interaction diagram of E2E according to some embodiments of the present disclosure.</li>
</ul></p>
<heading id="h0005"><b><u>Detailed Description</u></b></heading>
<p id="p0015" num="0015">The present disclosure is described below in detail with reference to the drawings and in conjunction with the embodiments. It is to be noted that embodiments in the present application and characteristics in the embodiments may be combined to derive other embodiments not explicitly described.</p>
<p id="p0016" num="0016">It is to be noted that the terms "first", "second" and the like in the specification, the claims and the drawings of the present disclosure are used to distinguish similar objects, and are not used to describe a specific sequence or a precedence order.</p>
<heading id="h0006">First embodiment</heading>
<p id="p0017" num="0017">A method embodiment provided in the first embodiment may be performed in a communication device or similar computing devices. Taking that the method runs on a communication device as an example, <figref idref="f0005">Fig. 5</figref> is a structural block diagram of hardware of a communication device for implementing a timestamp acquisition method according to some embodiments of the present disclosure. As shown in <figref idref="f0005">Fig. 5</figref>, the communication device 50 may include one or more (only one is shown in <figref idref="f0005">Fig. 5</figref>) processors 502 (the processor 502 may include, but be not limited to, a processing device such as a Micro Processor Unit (MCU) or a Field Programmable Gate Array (FPGA)) and a memory 504 for storing data. In some exemplary implementations, the communication device may further include a transmission device 506 for implementing a communication function and an input and<!-- EPO <DP n="5"> --> output device 508. Those having ordinary skill in the art should know that the structure shown in <figref idref="f0005">Fig. 5</figref> is only schematic and is not intended to limit the structure of the communication device. For example, the communication device 50 may further include more or fewer components than the components shown in <figref idref="f0005">Fig. 5</figref>, or has a configuration different from that shown in <figref idref="f0005">Fig. 5</figref>.</p>
<p id="p0018" num="0018">The memory 504 may be configured to store a software program of application software and a module, for example, a program instruction/module corresponding to a time synchronization method in the embodiments of the present disclosure. The processor 502 runs the software program and module stored in the memory 504, thereby executing various functional applications and data processing, namely implementing the above-mentioned method. The memory 504 may include a high-speed random access memory and may also include a nonvolatile memory, for example, one or more magnetic storage devices, flash memories or other nonvolatile solid-state memories. In some examples, the memory 504 may further include a memory arranged remotely relative to the processor 502 and the remote memory may be connected to the communication device 50 through a network. An example of the network includes, but is not limited to, the Internet, an Intranet, a local area network, a mobile communication network and a combination thereof.</p>
<p id="p0019" num="0019">The transmission device 506 is configured to receive or send data through a network. A specific example of the network may include a wireless network provided by a communication provider of the communication device 50. In an example, the transmission device 506 includes a Network Interface Controller (NIC), which may be connected with another network device through a base station, thereby communicating with the Internet. In an example, the transmission device 506 may be a Radio Frequency (RF) module, which is configured to communicate with the Internet wirelessly.</p>
<p id="p0020" num="0020">In the present embodiment, a time synchronization method running on the communication device is provided. <figref idref="f0006">Fig. 6</figref> is a flowchart of a timestamp acquisition method according to some embodiments of the present disclosure. As shown in <figref idref="f0006">Fig. 6</figref>, the flow includes the following operations.</p>
<p id="p0021" num="0021">At S602, a first device sets a first tag for a first packet to be sent to a second device.</p>
<p id="p0022" num="0022">At S604, in a case where the first tag is detected at a PCS layer of the first device, a current time T1 is acquired as a sending timestamp at which the first packet is sent.</p>
<p id="p0023" num="0023">The first packet and the second packet of the present disclosure may be Point To Point<!-- EPO <DP n="6"> --> (PTP) packets.</p>
<p id="p0024" num="0024">Through the above operations, the first device sets a first tag for a first packet to be sent to the second device; and in a case where the first tag is detected at a PCS layer of the first device, the current time T1 is acquired as the sending timestamp at which the first packet is sent. By virtue of the technical solution, the position where a timestamp of the first packet is provided is lowered into the PCS layer, and timestamp processing is performed at the PCS layer, thereby greatly reducing uncertain subsequent time delays. The solution can solve the problem of low accuracy of a timestamp determination scheme in the related art, greatly improve the accuracy of timestamp processing, and improve the time synchronization accuracy of the system.</p>
<p id="p0025" num="0025">In some exemplary implementations, the operation that the first device sets the first tag for the first packet to be sent to the second device may be implemented in the following manner. The first device constructs the first packet in a FlexE overhead block format, wherein the FlexE overhead block format is 8*66bit; and a first 66bit of a first overhead block of the first packet is marked with the first tag.</p>
<p id="p0026" num="0026">In some exemplary implementations, after the first 66bit of the first overhead block of the first packet is marked with the first tag, the first tag is transmitted by adding a signal line.</p>
<p id="p0027" num="0027">In some exemplary implementations, the first packet is a FollowUp packet.</p>
<p id="p0028" num="0028">In some exemplary implementations, after the current time T1 is acquired as the sending timestamp at which the first packet is sent in a case where the first tag is detected at the PCS layer of the first device, the method includes one of the following operations: the time T1 is added in a Sync packet and the Sync packet is sent to the second device, wherein the first packet is the Sync packet; or, after the first packet is sent, the time T1 is sent to the second device through a FollowUp packet.</p>
<p id="p0029" num="0029">According to some other embodiments of the present disclosure, a timestamp acquisition method is provided, which includes the following operations.</p>
<p id="p0030" num="0030">At operation 1, a second device receives a first packet sent by a first device. The first packet is in a FlexE overhead block format.</p>
<p id="p0031" num="0031">At operation 2, a time T2 at which a PCS layer of the second device receives the first 66bit of the first overhead block of the first packet is recorded, and the time T2 is determined as a receiving timestamp at which the first packet is received.<!-- EPO <DP n="7"> --></p>
<p id="p0032" num="0032">Through the above operations, the position where a timestamp of the first packet is provided is lowered into the PCS layer, and timestamp processing is performed at the PCS layer, thereby greatly reducing uncertain subsequent time delays. The solution can solve the problem of low accuracy of a timestamp determination scheme in the related art, greatly improve the accuracy of timestamp processing, and improve the time synchronization accuracy of the system.</p>
<p id="p0033" num="0033">In some exemplary implementations, the operation that the second device receives the first packet sent by the first device further includes one of the following operations:<br/>
the second device receives a sending timestamp T1 of the first packet in the first packet; or after receiving the first packet, the second device receives a sending timestamp T1 of the first packet in a FollowUp packet.</p>
<p id="p0034" num="0034">Another embodiment of the present disclosure is provided below for illustration.</p>
<p id="p0035" num="0035">A PTP packet with a general high accuracy in the related art is generated at a MAC layer, and the timestamp is obtained at the MAC layer. Due to a series of processing performed at the FlexE layer and the PCS layer after the MAC layer, uncertain factors such as a link delay, a link difference, or an FIFO cache delay are introduced. If the position where the timestamp is acquired is prior to the layer where these uncertain delays are introduced, the accuracy of the timestamp will be greatly reduced.</p>
<p id="p0036" num="0036">The embodiment of the present disclosure provides a method for lowering the position where a FlexE timestamp is acquired into the PCS layer. Through the timestamp processing at the PCS layer, the accuracy of the timestamp processing is greatly improved, and the time synchronization accuracy of the system is improved.</p>
<p id="p0037" num="0037">The embodiment of the present disclosure provides a high-accuracy time transfer method applicable to a FlexE interface, which may be applied to the following system. A complete minimum system consists of two devices, each of which consists of a sending system and a receiving system. <figref idref="f0006">Fig. 7</figref> is a structure diagram of a sending system and a receiving system according to some embodiments of the present disclosure. As shown in <figref idref="f0006">Fig. 7</figref>, the sending system and the receiving system are each divided into key modules such as a PTP processing module, a FlexE processing module, and a PCS processing module.</p>
<p id="p0038" num="0038">The PTP processing module is located above the MAC layer, and is responsible for the<!-- EPO <DP n="8"> --> generation and termination of the PTP packet.</p>
<p id="p0039" num="0039">The FlexE processing module is at the Shim layer of FlexE, and is responsible for the service and overhead processing of FlexE.</p>
<p id="p0040" num="0040">The PCS processing module is located at the PCS layer, and is responsible for identifying the PTP packet and generating the timestamp.</p>
<p id="p0041" num="0041">The processing in a sending direction includes the following operations.</p>
<p id="p0042" num="0042">At S11, at a sender, the PTP processing module is responsible for constructing a complete PTP packet in an ETH format, converting the PTP packet into a FlexE overhead block format of 8*66bit shown in <figref idref="f0004">Fig. 4</figref>, and sends the converted packet to the FlexE overhead processing module. Because one overhead block may not be enough for bearing the PTP packet, the PTP packet may be split into multiple FlexE overhead blocks for transfer. Each overhead block is sent separately to the FlexE processing module.</p>
<p id="p0043" num="0043">At S12, the FlexE module splits the 8*66bit overhead block inserted by the PTP module into multiple 66bit blocks and inserts the 66bit blocks into the PHY according to the standard processing principle of the FlexE Shim layer. In order to lower the position where the timestamp is processed, the FlexE module needs to carry out a special processing in addition to the standard processing flow: when receiving the first overhead block carrying the PTP packet transferred by the PTP module, the FlexE module tags the first 66bit block of this first overhead block, and the tag is transferred to the PCS layer of the PHY as a channel associated signal. The tag may be transferred by adding a signal line or in other ways.</p>
<p id="p0044" num="0044">At S13, after the 66bit block carrying a channel associated tag is detected at the PCS layer, timestamp information at which the 66bit block is sent at the PCS layer is recorded as the sending timestamp of the PTP packet. If a one-step method is used, the timestamp information is added directly into the corresponding PTP packet. If a two-step method is used, the PCS layer returns the timestamp information to the PTP processing module for subsequent processing. The timestamp information recorded at the PCS layer is the real timestamp close to the physical layer, and subsequent processing basically has no jitter delay.</p>
<p id="p0045" num="0045">At S14, when the one-step method is used, each PTP packet is sent independently by repeating the above operation, and the timestamp is collected and added at the PCS layer.<!-- EPO <DP n="9"> --></p>
<p id="p0046" num="0046">At S15, when the two-step method is used, when sending the subsequent FollowUp packet, the PTP processing module adds the timestamp information into the FollowUp packet as the timestamp t1, and then sends the FollowUp packet to the peer device in the above way.</p>
<p id="p0047" num="0047">At S16, when the peer end feeds back a Delay_Req packet, the same operations as the above S11 to S13 are performed, as shown in the <figref idref="f0007">Fig. 8</figref>.</p>
<p id="p0048" num="0048">At S17, by setting a tag in the FlexE layer and recording the timestamp at the PCS layer, the position where the timestamp is acquired can be lowered at the sender, and the accuracy of the timestamp can be improved.</p>
<p id="p0049" num="0049">The processing in a receiving direction includes the following operations.</p>
<p id="p0050" num="0050">At S21, when performing the processing of the PCS layer, a receiver records the timestamp information for each 66bit block received.</p>
<p id="p0051" num="0051">At S22, the received timestamp information of the 66bit block is uploaded in a channel associated manner to the FlexE processing module.</p>
<p id="p0052" num="0052">At S23, the FlexE processing module terminates a PTP packet slice in overhead information and uploads the timestamp information of the first 66bit of the first overhead block where the PTP packet is located to the PTP processing module.</p>
<p id="p0053" num="0053">At S24, the PTP processing module receives all the PTP packet slices, splices the PTP packet slices to obtain the PTP packet, and takes the timestamp information carried by the first slice of the PTP packet as receiving timestamp information of this packet.</p>
<p id="p0054" num="0054">At S25, for a one-step method, S21 to S23 are repeated for each packet; and for a two-step method, the receiver extracts the corresponding timestamp information from the FollowUp packet as the receiving timestamp information t1.</p>
<p id="p0055" num="0055">In this way, the insertion and extraction of the timestamp of the packet can be realized at the PCS layer, thereby improving the accuracy of time processing.</p>
<p id="p0056" num="0056">An example of FlexE high-accuracy time processing performed according to the two-step method of E2E in a BC-BC model is explained below. <figref idref="f0007">Fig. 8</figref> is a time information interaction diagram of E2E according to some embodiments of the present disclosure. As shown in <figref idref="f0007">Fig. 8</figref>, in the sending direction of a Master, the following operations are included.</p>
<p id="p0057" num="0057">At S31, the PTP processing module constructs a Sync packet, and sends the Sync<!-- EPO <DP n="10"> --> packet to the FlexE processing module by splitting the Sync packet into multiple 8*66bit block structures of FlexE.</p>
<p id="p0058" num="0058">At S32, the FlexE processing module detects overhead insertion information from the PTP module, and when receiving the first 66bit of the first overhead block carrying the Sync packet, sets a tag for the 66bit block and sends the 66bit block and the channel associated tag to the PCS layer.</p>
<p id="p0059" num="0059">At S33, after the 66bit block carrying the channel associated tag is detected at the PCS layer, the corresponding sending timestamp information t1 is recorded, the Sync packet is sent to a Slave, and the recorded timestamp information is returned to the PTP packet processing module. In some exemplary implementations, if the one-step method is used, the timestamp information is directly added to the Sync packet.</p>
<p id="p0060" num="0060">At S34, the PTP module records the timestamp information, adds the timestamp information, namely the time t1, into the FollowUp packet when sending the next FollowUp packet, and then sends the packet to the peer receiver in the above way, so as to implement two-step sending processing.</p>
<p id="p0061" num="0061">The receiving processing at a Slave includes the following operations.</p>
<p id="p0062" num="0062">At S41, when performing the processing of the PCS layer, the Slave receiver records the timestamp for each 66bit block received.</p>
<p id="p0063" num="0063">At S42, the received timestamp information of the 66bit block is uploaded in a channel associated manner to the FlexE overhead processing module.</p>
<p id="p0064" num="0064">At S43, after receiving 8*66bit overhead information, namely the complete FlexE overhead multi-frame, the overhead processing module uploads the FlexE overhead multi-frame to the PTP processing module together with the timestamp information of the first 66bit block of the overhead block.</p>
<p id="p0065" num="0065">At S44, the PTP module splices multiple FlexE overheads, and after identifying the Sync packet, records the receiving timestamp information of the first overhead block where the Sync packet is located as the time t2. After identifying the FollowUp packet, the PTP module records the receiving timestamp information of the first overhead block where the FollowUp packet is located as the time t1.</p>
<p id="p0066" num="0066">At S45, the Slave sends a reply packet, namely the Delay_Req packet, in a flow similar to the flow for sending the Sync packet by the Master, the first 66bit block of the first<!-- EPO <DP n="11"> --> overhead block of the Delay_Req packet carrying the channel associated tag is identified at the PCS layer, and the timestamp information is recorded and sent by the PCS layer to the PTP module. The PTP packet records the timestamp information as the time t3.</p>
<p id="p0067" num="0067">The receiving processing at the Master includes the following operations.</p>
<p id="p0068" num="0068">At S51, when performing the processing of the PCS layer, the Master receiver records the timestamp for each 66bit block received.</p>
<p id="p0069" num="0069">At S52, the received timestamp information of the 66bit block is uploaded in a channel associated manner to the FlexE overhead processing module.</p>
<p id="p0070" num="0070">At S53, after receiving the 8*66bit overhead information, namely the complete FlexE overhead multi-frame, the overhead processing module uploads the complete FlexE overhead multi-frame to the PTP processing module together with the timestamp information of the first 66bit block of the overhead block.</p>
<p id="p0071" num="0071">At S54, the PTP module splices multiple FlexE overheads, and after identifying the Delay_Req packet, records the receiving timestamp information of the first overhead block where the Delay_Req packet is located as the time t4.</p>
<p id="p0072" num="0072">At S55, the Master sends a reply packet, namely a Delay_Resp packet, adds the time t4 timestamp information recorded before into the Delay_Resp packet, and sends the packet to the Slave by means of the sending process.</p>
<p id="p0073" num="0073">The receiving processing at the Slave includes the following operations.</p>
<p id="p0074" num="0074">At S61, the Slave repeats the previous receiving process.</p>
<p id="p0075" num="0075">At S62, after the PTP module receives the Delay_Resp packet and extracts the timestamp T4 from the Delay_Resp packet, the Slave can calculate a time offset relative to the Master by using the formula known in the industry <maths id="math0001" num=""><math display="inline"><msub><mi>T</mi><mi mathvariant="italic">Offset</mi></msub><mo>=</mo><mfrac><mrow><mfenced separators=""><msub><mi>T</mi><mn>2</mn></msub><mo>−</mo><msub><mi>T</mi><mn>1</mn></msub></mfenced><mo>−</mo><mfenced separators=""><msub><mi>T</mi><mn>4</mn></msub><mo>−</mo><msub><mi>T</mi><mn>3</mn></msub></mfenced></mrow><mn>2</mn></mfrac></math><img id="ib0001" file="imgb0001.tif" wi="36" he="10" img-content="math" img-format="tif" inline="yes"/></maths>, thereby realizing the adjustment of time accuracy between the Master and the Slave.</p>
<p id="p0076" num="0076">In the above way, the accuracy of a single device can reach 5ns, which greatly improves the time synchronization accuracy of the device.</p>
<p id="p0077" num="0077">Through the description of the above implementations, those having ordinary skill in the art can understand that the method according to the above embodiment may be implemented by means of software plus a necessary general hardware platform, and of<!-- EPO <DP n="12"> --> course, may also be implemented through hardware, but in many cases, the former is a better implementation. Based on such understanding, the essence of technical solution of the embodiments of the present disclosure, or in other words, the part of the technical solutions making contributions to the conventional art, may be embodied in the form of a software product stored in a storage medium (such as a Read-Only Memory (ROM)/Random Access Memory (RAM), a magnetic disk and an optical disc), including a number of instructions for enabling a terminal device (which may be a mobile phone, a computer, a server, or a network device, etc.) to perform the methods described in various embodiments of the present disclosure.</p>
<heading id="h0007">Second Embodiment</heading>
<p id="p0078" num="0078">In the present embodiment, a timestamp acquisition device is provided. The device is used to implement the above embodiments and exemplary implementations, and the details having been described will not be repeated. As used below, the term "module" may implement a combination of software and/or hardware of a predetermined function. Although the device described in the following embodiments is preferably implemented in software, the implementation in hardware or a combination of software and hardware is also possible and contemplated.</p>
<p id="p0079" num="0079">According to some other embodiments of the present disclosure, a timestamp acquisition device is provided, which is applied to the first device and includes a setting module and an acquiring module.</p>
<p id="p0080" num="0080">The setting module is configured to set a first tag for a first packet to be sent to the second device.</p>
<p id="p0081" num="0081">The acquiring module is configured to acquire, in a case where the first tag is detected at a PCS layer of the first device, a current time T1 as a sending timestamp at which the first packet is sent.</p>
<p id="p0082" num="0082">By using the above solution, the problem of low accuracy of a timestamp determination scheme in the related art is solved, the accuracy of timestamp processing is greatly improved, and the time synchronization accuracy of the system is improved.</p>
<p id="p0083" num="0083">According to some other embodiments of the present disclosure, a timestamp acquisition device is provided, which is applied to the second device and includes a receiving module and a recording module.<!-- EPO <DP n="13"> --></p>
<p id="p0084" num="0084">The receiving module is configured to receive a first packet sent by the first device. The first packet is in a FlexE overhead block format.</p>
<p id="p0085" num="0085">The recording module is configured to record a time T2 at which a PCS layer of the second device receives a first 66bit of a first overhead block of the first packet, and determine the time T2 to be the receiving timestamp at which the first packet is received.</p>
<p id="p0086" num="0086">By using the above solution, the problem of low accuracy of a timestamp determination scheme in the related art is solved, the accuracy of timestamp processing is greatly improved, and the time synchronization accuracy of the system is improved.</p>
<p id="p0087" num="0087">It is to be noted that each of the above modules may be implemented by software or hardware. For the latter, the modules may be implemented by, but not limited to, either of the following manners: the above modules are all located in the same processor; or, the above modules are located in different processors in any combination form respectively.</p>
<heading id="h0008">Third Embodiment</heading>
<p id="p0088" num="0088">According to some other embodiments of the present disclosure, a time synchronization system is provided, which includes a first device and a second device.</p>
<p id="p0089" num="0089">The first device is configured to set a first tag for a first packet to be sent to the second device, and in a case where the first tag is detected at a PCS layer of the first device, determine a current time t1 and feeds back the time t1 to the second device.</p>
<p id="p0090" num="0090">The second device is configured to receive the first packet sent by the first device, and determine a time t2 at which the first packet is received.</p>
<p id="p0091" num="0091">The second device is configured to set a second tag for a second packet to be sent to the first device, and in a case where the second tag is detected at a PCS layer of the second device, determine a current time t3.</p>
<p id="p0092" num="0092">The first device is configured to receive the second packet, determine a time t4 at which the second packet is received and feed back the time T4 to the second device.</p>
<p id="p0093" num="0093">The second device is configured to perform time synchronization according to the time t1, the time t2, the time t3 and the time t4.</p>
<p id="p0094" num="0094">In some exemplary implementations, a way of setting the first tag or the second tag includes the following operations.<!-- EPO <DP n="14"> --></p>
<p id="p0095" num="0095">A third packet to be sent to the peer end is constructed in a FlexE overhead block format. The FlexE overhead block format is 8*66bit.</p>
<p id="p0096" num="0096">A first 66bit of a first overhead block of the third packet is marked with the first tag or the second tag.</p>
<heading id="h0009">Embodiment 4</heading>
<p id="p0097" num="0097">The embodiments of the present disclosure provide a storage medium. In an exemplary embodiment, the storage medium may be set to store program codes for performing the following operations.</p>
<p id="p0098" num="0098">At S1, a first device sets a first tag for a first packet to be sent to a second device.</p>
<p id="p0099" num="0099">At S2, in a case where the first tag is detected at a PCS layer of the first device, a current time T1 is acquired as a sending timestamp at which the first packet is sent.</p>
<p id="p0100" num="0100">In an exemplary embodiment, the storage media include, but are not limited to, a USB flash disk, an ROM, an RAM, a mobile hard disk, a magnetic disk, a compact disc, and other media capable of storing the program codes.</p>
<p id="p0101" num="0101">The embodiments of the present disclosure provide an electronic device, which includes a memory and a processor. The memory stores a computer program. The processor is configured to run the computer program, so as to perform operations in any of the above method embodiments.</p>
<p id="p0102" num="0102">In some exemplary implementations, the electronic device may further include a transmission device and an input and output device. The transmission device is connected with the processor, and the input and output device is connected with the processor.</p>
<p id="p0103" num="0103">In some exemplary implementations of the present embodiment, the processor may be configured to execute the following operations through the computer program.</p>
<p id="p0104" num="0104">At S1, a first device sets a first tag for a first packet to be sent to a second device.</p>
<p id="p0105" num="0105">At S2, in a case where the first tag is detected at a PCS layer of the first device, a current time T1 is acquired as a sending timestamp at which the first packet is sent.</p>
<p id="p0106" num="0106">The specific examples in the present embodiment may refer to the examples described in the above embodiments and exemplary embodiments.</p>
<p id="p0107" num="0107">The specific examples in the present embodiment may refer to the examples described<!-- EPO <DP n="15"> --> in the above embodiments and alternative embodiments.</p>
<p id="p0108" num="0108">It is apparent that a person skilled in the art shall understand that all of the above-mentioned modules or operations in the present disclosure may be implemented by using a general computation apparatus, may be centralized on a single computation apparatus or may be distributed on a network composed of multiple computation apparatuses. Optionally, they may be implemented by using executable program codes of the computation apparatuses. Thus, they may be stored in a storage apparatus and executed by the computation apparatuses, the shown or described operations may be executed in a sequence different from this sequence under certain conditions, or they are manufactured into each integrated circuit module respectively, or multiple modules or operations therein are manufactured into a single integrated circuit module. Thus, the embodiments of the present disclosure are not limited to any specific hardware and software combination.</p>
<p id="p0109" num="0109">The above is only the exemplary embodiments of the present disclosure, not intended to limit the present disclosure. As will occur to those having ordinary skill in the art, the present disclosure is susceptible to various modifications and changes. Any modifications, equivalent replacements, improvements and the like made within the principle of the present disclosure shall fall within the scope of protection of the present disclosure.</p>
</description>
<claims id="claims01" lang="en"><!-- EPO <DP n="16"> -->
<claim id="c-en-0001" num="0001">
<claim-text>A timestamp acquisition method, comprising:
<claim-text>setting, by a first device, a first tag for a first packet to be sent to a second device; and</claim-text>
<claim-text>in a case where the first tag is detected at a Physical Coding Sublayer, PCS, layer of the first device, acquiring a current time T1 as a sending timestamp at which the first packet is sent.</claim-text></claim-text></claim>
<claim id="c-en-0002" num="0002">
<claim-text>The method according to claim 1, wherein setting, by the first device, the first tag for the first packet to be sent to the second device comprises:
<claim-text>constructing, by the first device, the first packet in a Flex Ethernet, FlexE, overhead block format, wherein the FlexE overhead block format is 8*66bit; and</claim-text>
<claim-text>marking a first 66bit of a first overhead block of the first packet with the first tag.</claim-text></claim-text></claim>
<claim id="c-en-0003" num="0003">
<claim-text>The method according to claim 2, wherein after marking the first 66bit of the first overhead block of the first packet with the first tag, the method further comprises:<br/>
transmitting the first tag by adding a signal line.</claim-text></claim>
<claim id="c-en-0004" num="0004">
<claim-text>The method according to claim 1, wherein after acquiring the current time T1 as the sending timestamp at which the first packet is sent in the case where the first tag is detected at the PCS layer of the first device, the method comprises one of the following:
<claim-text>adding the time T1 in a Sync packet and sending the Sync packet to the second device, wherein the first packet is the Sync packet;<br/>
or,</claim-text>
<claim-text>after sending the first packet, sending the time T1 to the second device through a FollowUp packet.</claim-text><!-- EPO <DP n="17"> --></claim-text></claim>
<claim id="c-en-0005" num="0005">
<claim-text>A timestamp acquisition method, comprising:
<claim-text>receiving, by a second device, a first packet sent by a first device, wherein the first packet is in a Flex Ethernet, FlexE, overhead block format; and</claim-text>
<claim-text>recording a time T2 at which a Physical Coding Sublayer, PCS, layer of the second device receives a first 66bit of a first overhead block of the first packet, and determining the time T2 as a receiving timestamp at which the first packet is received.</claim-text></claim-text></claim>
<claim id="c-en-0006" num="0006">
<claim-text>The method according to claim 5, wherein receiving, by the second device, the first packet sent by the first device further comprises one of the following:
<claim-text>receiving, by the second device, a sending timestamp T1 of the first packet in the first packet; or</claim-text>
<claim-text>after receiving the first packet, receiving, by the second device, a sending timestamp T1 of the first packet in a FollowUp packet.</claim-text></claim-text></claim>
<claim id="c-en-0007" num="0007">
<claim-text>A time synchronization system, comprising a first device and a second device, wherein
<claim-text>the first device is configured to set a first tag for a first packet to be sent to the second device, and in a case where the first tag is detected at a Physical Coding Sublayer, PCS, layer of the first device, determine a current time t1 and feed back the time t1 to the second device;</claim-text>
<claim-text>the second device is configured to receive the first packet sent by the first device, and determine a time t2 at which the first packet is received;</claim-text>
<claim-text>the second device is configured to set a second tag for a second packet to be sent to the first device, and in a case where the second tag is detected at a PCS layer of the second device, determine a current time t3;</claim-text>
<claim-text>the first device is configured to receive the second packet, determine a time t4 at which<!-- EPO <DP n="18"> --> the second packet is received and feed back the time t4 to the second device; and</claim-text>
<claim-text>the second device is configured to perform time synchronization according to the time t1, the time t2, the time t3 and the time t4.</claim-text></claim-text></claim>
<claim id="c-en-0008" num="0008">
<claim-text>The system according to claim 7, wherein a way of setting the first tag or the second tag comprises:
<claim-text>constructing a third packet to be sent to a peer end in a Flex Ethernet, FlexE, overhead block format, wherein the FlexE overhead block format is 8*66bit; and</claim-text>
<claim-text>marking a first 66bit of a first overhead block of the third packet with the first tag or the second tag.</claim-text></claim-text></claim>
<claim id="c-en-0009" num="0009">
<claim-text>A storage medium, storing a computer program, wherein the computer program is configured to execute, at runtime, the method according to any one of claims 1 to 6.</claim-text></claim>
<claim id="c-en-0010" num="0010">
<claim-text>An electronic device, comprising a memory and a processor, wherein the memory stores a computer program, and the processor is configured to run the computer program to execute the method according to any one of claims 1 to 6.</claim-text></claim>
</claims>
<drawings id="draw" lang="en"><!-- EPO <DP n="19"> -->
<figure id="f0001" num="1"><img id="if0001" file="imgf0001.tif" wi="155" he="66" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="20"> -->
<figure id="f0002" num="2"><img id="if0002" file="imgf0002.tif" wi="162" he="196" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="21"> -->
<figure id="f0003" num="3"><img id="if0003" file="imgf0003.tif" wi="161" he="196" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="22"> -->
<figure id="f0004" num="4"><img id="if0004" file="imgf0004.tif" wi="146" he="233" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="23"> -->
<figure id="f0005" num="5"><img id="if0005" file="imgf0005.tif" wi="68" he="136" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="24"> -->
<figure id="f0006" num="6,7"><img id="if0006" file="imgf0006.tif" wi="165" he="174" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="25"> -->
<figure id="f0007" num="8"><img id="if0007" file="imgf0007.tif" wi="155" he="141" img-content="drawing" img-format="tif"/></figure>
</drawings>
<search-report-data id="srep" lang="en" srep-office="EP" date-produced=""><doc-page id="srep0001" file="srep0001.tif" wi="149" he="233" type="tif"/><doc-page id="srep0002" file="srep0002.tif" wi="156" he="233" type="tif"/></search-report-data>
</ep-patent-document>
