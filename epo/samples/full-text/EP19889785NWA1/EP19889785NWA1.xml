<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE ep-patent-document PUBLIC "-//EPO//EP PATENT DOCUMENT 1.5.1//EN" "ep-patent-document-v1-5-1.dtd">
<!-- This XML data has been generated under the supervision of the European Patent Office -->
<ep-patent-document id="EP19889785A1" file="EP19889785NWA1.xml" lang="en" country="EP" doc-number="3890247" kind="A1" date-publ="20211006" status="n" dtd-version="ep-patent-document-v1-5-1">
<SDOBI lang="en"><B000><eptags><B001EP>ATBECHDEDKESFRGBGRITLILUNLSEMCPTIESILTLVFIROMKCYALTRBGCZEEHUPLSKBAHRIS..MTNORSMESMMAKHTNMD..........</B001EP><B005EP>J</B005EP><B007EP>BDM Ver 2.0.12 (4th of August) -  1100000/0</B007EP></eptags></B000><B100><B110>3890247</B110><B120><B121>EUROPEAN PATENT APPLICATION</B121><B121EP>published in accordance with Art. 153(4) EPC</B121EP></B120><B130>A1</B130><B140><date>20211006</date></B140><B190>EP</B190></B100><B200><B210>19889785.2</B210><B220><date>20191108</date></B220><B240><B241><date>20210413</date></B241></B240><B250>ja</B250><B251EP>en</B251EP><B260>en</B260></B200><B300><B310>2018222648</B310><B320><date>20181128</date></B320><B330><ctry>JP</ctry></B330></B300><B400><B405><date>20211006</date><bnum>202140</bnum></B405><B430><date>20211006</date><bnum>202140</bnum></B430></B400><B500><B510EP><classification-ipcr sequence="1"><text>H04L  12/28        20060101AFI20200605BHEP        </text></classification-ipcr></B510EP><B520EP><classifications-cpc><classification-cpc sequence="1"><text>H04L  12/28        20130101 LI20200625BCEP        </text></classification-cpc></classifications-cpc></B520EP><B540><B541>de</B541><B542>STEUERUNGSVORRICHTUNG, UNTERSTÜTZUNGSVORRICHTUNG UND KOMMUNIKATIONSSYSTEM</B542><B541>en</B541><B542>CONTROL DEVICE, SUPPORT DEVICE, AND COMMUNICATION SYSTEM</B542><B541>fr</B541><B542>DISPOSITIF DE COMMANDE, DISPOSITIF DE SUPPORT ET SYSTÈME DE COMMUNICATION</B542></B540><B590><B598>1</B598></B590></B500><B700><B710><B711><snm>OMRON Corporation</snm><iid>101882444</iid><irf>67229EP (BE/SU)</irf><adr><str>801, Minamifudodo-cho, 
Horikawahigashiiru,</str><city>Shiokoji-dori, Shimogyo-ku,
Kyoto-shi
Kyoto 600-8530</city><ctry>JP</ctry></adr></B711></B710><B720><B721><snm>TAHARA, Yutaka</snm><adr><str>c/o OMRON CORPORATION
801, Minamifudodo-cho,  
Horikawahigashiiru, Shiokoji-dori, Shimogyo-ku</str><city>Kyoto-shi, Kyoto 600-8530</city><ctry>JP</ctry></adr></B721><B721><snm>HALL, Johnston</snm><adr><str>c/o Omron Automation Americas
100 Consilium Place, Suite 802</str><city>Toronto, ON M1H3E3</city><ctry>CA</ctry></adr></B721></B720><B740><B741><snm>Becker, Eberhard</snm><iid>100041761</iid><adr><str>Becker &amp; Kurig Partnerschaft 
Patentanwälte PartmbB 
Bavariastrasse 7</str><city>80336 München</city><ctry>DE</ctry></adr></B741></B740></B700><B800><B840><ctry>AL</ctry><ctry>AT</ctry><ctry>BE</ctry><ctry>BG</ctry><ctry>CH</ctry><ctry>CY</ctry><ctry>CZ</ctry><ctry>DE</ctry><ctry>DK</ctry><ctry>EE</ctry><ctry>ES</ctry><ctry>FI</ctry><ctry>FR</ctry><ctry>GB</ctry><ctry>GR</ctry><ctry>HR</ctry><ctry>HU</ctry><ctry>IE</ctry><ctry>IS</ctry><ctry>IT</ctry><ctry>LI</ctry><ctry>LT</ctry><ctry>LU</ctry><ctry>LV</ctry><ctry>MC</ctry><ctry>MK</ctry><ctry>MT</ctry><ctry>NL</ctry><ctry>NO</ctry><ctry>PL</ctry><ctry>PT</ctry><ctry>RO</ctry><ctry>RS</ctry><ctry>SE</ctry><ctry>SI</ctry><ctry>SK</ctry><ctry>SM</ctry><ctry>TR</ctry></B840><B844EP><B845EP><ctry>BA</ctry></B845EP><B845EP><ctry>ME</ctry></B845EP></B844EP><B848EP><B849EP><ctry>KH</ctry></B849EP><B849EP><ctry>MA</ctry></B849EP><B849EP><ctry>MD</ctry></B849EP><B849EP><ctry>TN</ctry></B849EP></B848EP><B860><B861><dnum><anum>JP2019043973</anum></dnum><date>20191108</date></B861><B862>ja</B862></B860><B870><B871><dnum><pnum>WO2020110668</pnum></dnum><date>20200604</date><bnum>202023</bnum></B871></B870></B800></SDOBI>
<abstract id="abst" lang="en">
<p id="pa01" num="0001">An objective of the present invention is to facilitate settings to be performed for a relay device. A control device, configured to be able to communicate with other devices via a relay device, is provided with: a storage unit that stores a user program including at least one of instructions for performing communication settings that are settings related to communication with the other devices; and a communication setting unit that performs the communication settings. The communication setting unit performs transmission and reception of commands together with the relay device on the basis of fulfillment of conditions of executing the instruction and performs the communication settings indicated by the instruction.<img id="iaf01" file="imgaf001.tif" wi="127" he="77" img-content="drawing" img-format="tif"/></p>
</abstract>
<description id="desc" lang="en"><!-- EPO <DP n="1"> -->
<heading id="h0001">[Technical Field]</heading>
<p id="p0001" num="0001">The present invention relates to a technology for supporting setting work regarding communication between a control device and another device.</p>
<heading id="h0002">[Background Art]</heading>
<p id="p0002" num="0002">A control device such as a programmable logic controller (PLC) has been introduced at various manufacturing sites. Such a control device is a kind of computer, and a control program designed according to a manufacturing device, a manufacturing facility, or the like is executed. The control device is connected to various devices inside or outside a factory via a relay device.</p>
<p id="p0003" num="0003">For example, <patcit id="pcit0001" dnum="JP6407494B"><text>Japanese Patent No. 6407494</text></patcit> (Patent Literature 1) discloses a control device communicatively connected to a cloud system outside a factory via a router that is an example of a relay device.</p>
<p id="p0004" num="0004">Further, <patcit id="pcit0002" dnum="WO2016157477A"><text>International Publication No. 2016/157477 </text></patcit>(Patent Literature 2) discloses a control device communicatively connected to another control device via a router that is an example of a relay device.</p>
<heading id="h0003">[Citation List]</heading>
<heading id="h0004">[Patent Literature]</heading>
<p id="p0005" num="0005">
<ul id="ul0001" list-style="none" compact="compact">
<li>[Patent Literature 1] <patcit id="pcit0003" dnum="JP64074494B"><text>Japanese Patent No. 64074494</text></patcit></li>
<li>[Patent Literature 2] <patcit id="pcit0004" dnum="WO2016157477A"><text>International Publication No. 2016/157477</text></patcit></li>
</ul></p>
<heading id="h0005">[Summary of Invention]</heading><!-- EPO <DP n="2"> -->
<heading id="h0006">[Technical Problem]</heading>
<p id="p0006" num="0006">However, settings for a relay device are complicated, and it is necessary for a setting method to be learned. That is, in order to design and operate a network in a factory, it is necessary to educate not only a person who designs a network but also a person who operates the network designed at a site in a factory. Therefore, complexity of settings that are performed for a relay device is one factor that makes it difficult to build a network in the factory.</p>
<p id="p0007" num="0007">An objective of the present invention is to solve the above problems and facilitate settings that are performed for a relay device.</p>
<heading id="h0007">[Solution to Problem]</heading>
<p id="p0008" num="0008">According to an example of the present disclosure, a control device capable of communication with other devices via a relay device is provided. The control device includes a storage unit configured to store a user program including at least one instruction for performing communication settings regarding communication via the relay device; and a communication setting unit configured to perform transmission or reception of a command to or from the relay device on the basis of fulfillment of an execution condition for the instruction and perform the communication settings indicated by the instruction.</p>
<p id="p0009" num="0009">According to this disclosure, even when a user does not know a method of transmitting or receiving commands to and from the relay device, the control device executes a process according to designated setting content when the communication settings are designated, making it possible to easily perform communication settings for the relay device.</p>
<p id="p0010" num="0010">In the above-described disclosure, a protocols for the transmission or reception of the command to or from the relay device differs depending on a type of the relay device, and the communication setting unit performs the transmission or reception of the command to or from the relay device according to the protocol corresponding to the type of the relay device.</p>
<p id="p0011" num="0011"><!-- EPO <DP n="3"> --> According to this disclosure, it is possible to support various relay devices and it is possible for the user to use a plurality of types of relay devices.</p>
<p id="p0012" num="0012">In the above-described disclosure, the storage unit stores conversion information including the protocol for each type of the relay device. The control device further includes a conversion information specifying unit configured to determine the type of the relay device on the basis of device information included in the relay device and specify the conversion information on the basis of the type of the relay device. The communication setting unit performs the transmission or reception of the command to or from the relay device on the basis of the conversion information specified by the conversion information.</p>
<p id="p0013" num="0013">According to this disclosure, a user can perform the communication settings without being aware of a type of the relay device.</p>
<p id="p0014" num="0014">In the above-described disclosure, the conversion information is stored in the storage unit for each piece of content of the instruction. The conversion information specifying unit specifies the conversion information on the basis of an instruction for which an execution condition is fulfilled and the type of the relay device.</p>
<p id="p0015" num="0015">According to this disclosure, it is not necessary for the control device to store a program according to content of the instruction and a type of the relay device, making it possible to reduce an amount of data that is stored in the storage unit.</p>
<p id="p0016" num="0016">In the above-described disclosure, the user program includes an instruction related to the communication settings and a preferential instruction having a higher priority than the instruction. The control device further comprises a fixed-cycle task execution unit configured to repeatedly execute the preferential instruction at a fixed cycle. The communication setting unit issues the instruction related to the communication settings so as not to interfere with the execution of the preferential instruction.</p>
<p id="p0017" num="0017"><!-- EPO <DP n="4"> --> According to this disclosure, it is possible to execute an instruction related to communication settings without interfering with an instruction having a high priority.</p>
<p id="p0018" num="0018">In the above-described disclosure, the control device is communicatively connected to a first apparatus configured to manage a first field device group and a second apparatus configured to manage a second field device group via the relay device. The storage unit stores a first recipe including a condition for moving the first field device group and a second recipe including a condition for moving the second field device group. The user program includes an instruction for switching of a device serving as a connection destination and an instruction to switch the recipe according to the switching.</p>
<p id="p0019" num="0019">According to this disclosure, it is possible to easily perform setup change. According to another example of the present disclosure, a support device for supporting development of a user program for a control device capable of communication with other devices via a relay device is provided. The support device includes a storage unit configured to store at least one instruction for performing communication settings regarding communication via the relay device; and a control unit configured to combine the at least one instruction stored in the storage unit and generate the user program. The control unit creates the user program in a format enabling the control device to transmit or receive a command to or from the relay device at the time of execution of the instruction.</p>
<p id="p0020" num="0020">According to this disclosure, even when a user does not know a method of transmitting or receiving commands to and from the relay device, it is possible to create a user program for easily performing the communication settings for the relay device.</p>
<p id="p0021" num="0021">According to another example of the present disclosure, a communication system including a relay device, and a control device capable of communicating with other devices via the relay device is provided. The control device includes a storage unit configured to store a user program including at least one instruction for performing communication settings regarding communication via the relay device; and a communication setting unit configured to perform<!-- EPO <DP n="5"> --> transmission or reception of a command to or from the relay device on the basis of fulfillment of an execution condition for the instruction and perform the communication settings indicated by the instruction.</p>
<p id="p0022" num="0022">According to this disclosure, even when a user does not know a method of transmitting or receiving commands to and from the relay device, the control device executes a process according to designated setting content when the communication settings are designated, making it possible to easily perform communication settings for the relay device.</p>
<heading id="h0008">[Advantageous Effects of Invention]</heading>
<p id="p0023" num="0023">An environment in which a setting to be performed on the relay device can be easily performed is provided.</p>
<heading id="h0009">[Brief Description of Drawings]</heading>
<p id="p0024" num="0024">
<ul id="ul0002" list-style="none" compact="compact">
<li><figref idref="f0001">Fig. 1</figref> is a diagram schematically illustrating an application situation of a control device according to the present embodiment.</li>
<li><figref idref="f0002">Fig. 2</figref> is a diagram illustrating a system configuration of a communication system according to embodiment 1.</li>
<li><figref idref="f0003">Fig. 3</figref> is a schematic diagram illustrating an example of a device configuration of a CPU unit.</li>
<li><figref idref="f0004">Fig. 4</figref> is a schematic diagram illustrating a software configuration of the CPU unit.</li>
<li><figref idref="f0004">Fig. 5</figref> is a schematic diagram illustrating an example of a device configuration of a support device.</li>
<li><figref idref="f0005">Fig. 6</figref> is a schematic diagram illustrating a software configuration of the support device.</li>
<li><figref idref="f0006">Fig. 7</figref> is a diagram illustrating a functional configuration of a controller that is realized by execution of a program related to communication setting.</li>
<li><figref idref="f0007">Fig. 8</figref> is a diagram illustrating an example of a user program incorporating a function block related to communication setting.</li>
<li><figref idref="f0008">Fig. 9</figref> is a diagram illustrating an example of a user program incorporating a function block related to communication setting.<!-- EPO <DP n="6"> --></li>
<li><figref idref="f0009">Fig. 10</figref> is a diagram illustrating a timing at which a fixed-cycle task execution unit and a communication setting unit execute a process when the user program illustrated in <figref idref="f0007">Figs. 8</figref> and <figref idref="f0008">9</figref> is executed.</li>
<li><figref idref="f0010">Fig. 11</figref> is a diagram illustrating exchange of commands between the communication setting unit and a setting information updating unit.</li>
<li><figref idref="f0011">Fig. 12</figref> illustrates an example of instructions prepared in the support device.</li>
<li><figref idref="f0012">Fig. 13</figref> is a diagram illustrating a modification example of a communication system.</li>
<li><figref idref="f0013">Fig. 14</figref> is a diagram illustrating a schematic configuration of a control device according to embodiment 2.</li>
</ul></p>
<heading id="h0010">[Description of Embodiments]</heading>
<p id="p0025" num="0025">Hereinafter, embodiments according to the present invention will be described with reference to the drawings. In the following description, the same parts and components are denoted by the same reference signs. Names and functions thereof are the same. Therefore, detailed description of these will not be repeated. Respective embodiments and respective modification examples to be described below may be appropriate selectively combined.</p>
<heading id="h0011">§ 1 Application example</heading>
<p id="p0026" num="0026">An example of a situation in which the present invention is applied will be described with reference to <figref idref="f0001">Fig. 1. Fig. 1</figref> is a diagram schematically illustrating an application situation of a control device 100A according to the present embodiment. The control device 100A is communicatively connected to other devices (devices 41A, 41B, and 41C) via a relay device 200A.</p>
<p id="p0027" num="0027">The control device 100A includes a storage unit 106A in which a user program 1066A including at least one instruction for performing communication settings which are settings regarding communication with other devices is stored, and a communication setting unit 160A that performs the communication setting.</p>
<p id="p0028" num="0028">The communication settings are settings regarding communication with another device,<!-- EPO <DP n="7"> --> which are settings that are performed on the relay device 200A.</p>
<p id="p0029" num="0029">The communication setting unit 160A performs transmission or reception of a command to or from the relay device on the basis of the fact that the instruction execution condition has been fulfilled, and performs the communication settings indicated by the instruction.</p>
<p id="p0030" num="0030">For example, in the example illustrated in <figref idref="f0001">Fig. 1</figref>, the storage unit 106A stores the user program 1066A in which an execution condition for instruction a is fulfilled, an execution condition for instruction b is fulfilled when the execution of instruction a is completed, an execution condition for instruction c is fulfilled when the execution of instruction b is completed, and an execution condition for instruction d is fulfilled when the execution of instruction c is completed.</p>
<p id="p0031" num="0031">This user program 1066A is created by, for example, a development environment that is provided by a support device 30A. The support device 30A is realized, for example, by using hardware complying with a general-purpose architecture.</p>
<p id="p0032" num="0032">The communication setting unit 160A performs command exchange with the relay device 200A when executing instruction a, as illustrated in <figref idref="f0001">Fig. 1</figref>. When the execution of instruction a is completed, the communication setting unit 160A executes instruction b, and performs command exchange with the relay device 200A when executing instruction b. Similarly, the communication setting unit 160A performs command exchange with the relay device 200A when executing instruction c and instruction d.</p>
<p id="p0033" num="0033">Thus, in the communication setting, although command exchange between the relay device 200A and the control device 100A is necessary, the communication setting unit 160A performs exchange of a command when the instruction is executed, and thus a user can perform communication settings for the relay device 200A without learning about detailed command exchange that is performed between the relay device 200A and the control device 100A.<!-- EPO <DP n="8"> --></p>
<heading id="h0012">§2 Configuration example</heading>
<heading id="h0013">[Embodiment 1]</heading>
<heading id="h0014">&lt;A. System configuration of communication system&gt;</heading>
<p id="p0034" num="0034"><figref idref="f0002">Fig. 2</figref> is a diagram illustrating a system configuration of a communication system 1 according to embodiment 1. The communication system 1 is a system that is installed at a manufacturing site 2 in which manufacturing work is actually performed. The communication system 1 is used by a person (hereinafter also referred to as a "user") working at the manufacturing site 2. The communication system 1 provides an environment for performing settings regarding communication (hereinafter also referred to as "communication settings") between a remote site 4 allowing the manufacturing site 2 to be remotely viewed and operated and the manufacturing site 2.</p>
<p id="p0035" num="0035">The communication system 1 includes a controller 10 that controls a manufacturing apparatus, a robot, and the like, and a touch panel type human machine interface (HMI) 20 that a user operates to perform communication settings.</p>
<p id="p0036" num="0036">The controller 10 is communicatively connected to the HMI 20 via an information network NW1, and performs the communication settings according to a setting command output from the HMI 20 when the user operates the HMI 20.</p>
<p id="p0037" num="0037">The controller 10 is connected to a field device group 40 via a control network NW2. The field device group 40 includes a device that collects data from a control target, or a manufacturing device, a production line, and the like related to the control (hereinafter also collectively referred to as a "field"). As a device for collecting such data, an input relay, various sensors, and the like are assumed. The field device group 40 further includes a device that has some effect on the field on the basis of an instruction generated by the controller 10. As a device that has some effect on such a field, an output relay, a contactor, a servo driver, a servo motor, or any other actuator is assumed.</p>
<p id="p0038" num="0038">In the example illustrated in <figref idref="f0002">Fig. 2</figref>, the field device group 40 includes a remote<!-- EPO <DP n="9"> --> input/output (I/O) device 41, a relay group 42, a servo driver 45, and a servo motor 46, which are connected to the controller 10.</p>
<p id="p0039" num="0039">The controller 10 includes a CPU unit 100, a repeater unit 200, and a power supply unit 300. The power supply unit 300 supplies power to various devices constituting the controller 10, such as the CPU unit 100.</p>
<p id="p0040" num="0040">The CPU unit 100 corresponds to a control device that executes a control calculation for a control target. The CPU unit 100 is connected to a computer 4a of the remote site 4 via the repeater unit 200. The CPU unit 100 executes a user program that is created depending on a control purpose of the user to control the control target. The CPU unit 100 can set various devices connected to the CPU unit 100 as control targets. Specifically, the CPU unit 100 can set the repeater unit 200 as a control target and can change a state of the repeater unit 200. Specifically, the CPU unit 100 can perform a setting of the repeater unit 200. By the setting of the repeater unit 200 being performed, communication settings between the remote site 4 and the manufacturing site 2 are performed. In embodiment 1, a user program related to the communication settings is executed according to a setting change command that is output from the HMI 20 by the user operating the HMI 20.</p>
<p id="p0041" num="0041">The user program is created by a development environment that is provided by the support device 30. The CPU unit 100 includes an interface for connection to the support device 30. The user program created by the support device 30 is installed in the CPU unit 100 from the support device 30 and executed by the CPU unit 100. The user program is described using a programming language defined as a programming language for a PLC application in the international standard IEC61131-3. Specifically, the user program is a program described using one or a plurality of languages among five types of languages including a ladder diagram (LD), a function block diagram (FBD), a sequential function chart (SFC), an command list (IL), and structured text (ST).</p>
<p id="p0042" num="0042">The repeater unit 200 is a control device having a router function, and provides a<!-- EPO <DP n="10"> --> mediating function of mediating exchange of data between the CPU unit 100 and other devices. In the example illustrated in <figref idref="f0002">Fig. 2</figref>, the repeater unit 200 is communicatively connected to a network in the remote site 4 via a network NW3. The computer 4a is connected to the network in the remote site 4. That is, the repeater unit 200 mediates exchange of data between the CPU unit 100 and the computer 4a. More specifically, the repeater unit 200 can communicate with a repeater 4b to which the computer 4a is connected via the network NW3.</p>
<p id="p0043" num="0043">The network NW3 is assumed to be the Internet, a virtual private network (VPN), a dedicated line, or a communication line that is a combination of these, and may be any one of a wired network and a wireless network. In embodiment 1, the network NW3 is a VPN.</p>
<p id="p0044" num="0044">In a network that enables communication between the CPU unit 100 and the repeater unit 200, as an example, "192.168.1.1/24" is assigned as an IP address to the CPU unit 100. "192.168.1.254/24" is assigned as an IP address to the repeater unit 200.</p>
<p id="p0045" num="0045">In the network NW3, as an example, "10.0.0.1" is assigned as an IP address to the repeater unit 200. "20.0.0.1" is assigned as an IP address to the repeater 4b.</p>
<p id="p0046" num="0046">In a network that enables communication between the repeater 4b and the computer 4a, as an example, "192.168.2.254/24" is assigned as an IP address to the repeater 4b. "192.168.2.1/24" is assigned as an IP address to the computer 4a.</p>
<heading id="h0015">&lt;B. Device configuration of CPU unit&gt;</heading>
<p id="p0047" num="0047"><figref idref="f0003">Fig. 3</figref> is a schematic diagram illustrating an example of a device configuration of the CPU unit 100. The CPU unit 100 includes a processor 102, a main memory 104, a storage 106, an information network controller 108, a control network controller 110, an inter-unit bus controller 112, a local bus controller 114, a USB controller 116, and a memory card interface 118. These components are connected via a processor bus 120.</p>
<p id="p0048" num="0048">The processor 102 corresponds to an arithmetic processing unit that executes a control<!-- EPO <DP n="11"> --> calculation related to standard control, and includes a central processing unit (CPU), a graphics processing unit (GPU), and the like. As the processor 102, a configuration having a plurality of cores may be adopted, or a plurality of processors 102 may be disposed. Thus, the CPU unit 100 includes one or a plurality of processors 102 and/or a processor 102 including one or a plurality of cores. The processor 102 reads a program stored in the storage 106, loads the program into the main memory 104, and executes the program to realize a control calculation depending on the control target and various processes that will be described below.</p>
<p id="p0049" num="0049">The main memory 104 includes a volatile storage device such as a dynamic random access memory (DRAM) or a static random access memory (SRAM). The storage 106 includes, for example, a non-volatile storage device such as a solid state drive (SSD) or a hard disk drive (HDD).</p>
<p id="p0050" num="0050">The storage 106 stores various programs that are executed by the processor 102 and various pieces of data necessary for execution of the programs.</p>
<p id="p0051" num="0051">The information network controller 108 mediates communication with the HMI 20 via the information network NW1 (see <figref idref="f0002">Fig. 2</figref>). As the information network NW1, for example, a network protocol such as EtherNet/IP (registered trademark) having guaranteed punctuality is preferable.</p>
<p id="p0052" num="0052">The control network controller 110 mediates communication with the field device group 40 via the control network NW2 (see <figref idref="f0002">Fig. 2</figref>). As the control network NW2, for example, a network protocol such as EtherCAT (registered trademark) having guaranteed punctuality is preferable.</p>
<p id="p0053" num="0053">The inter-unit bus controller 112 is a device for connection to other units enabling data communication. In embodiment 1, the repeater unit 200 and the power supply unit 300 are connected via the inter-unit bus controller 112 of the CPU unit 100. As the inter-unit bus controller 112, for example, a device complying with a known data transmission standard (for<!-- EPO <DP n="12"> --> example, PCI Express) can be adopted.</p>
<p id="p0054" num="0054">The local bus controller 114 mediates communication with an input and output unit directly mounted in the CPU unit 100 via a local bus (not illustrated).</p>
<p id="p0055" num="0055">The USB controller 116 exchanges data with the support device 30 or the like via a USB connection.</p>
<p id="p0056" num="0056">The memory card interface 118 receives a memory card 118a, which is an example of a removable recording medium. The memory card interface 118 can write data to the memory card 118a and read various pieces of data from the memory card 118a.</p>
<heading id="h0016">&lt;C. Software configuration of CPU unit&gt;</heading>
<p id="p0057" num="0057"><figref idref="f0004">Fig. 4</figref> is a schematic diagram illustrating a software configuration of the CPU unit 100. In <figref idref="f0004">Fig. 4</figref>, an example of software groups for providing various functions according to embodiment 1 is illustrated. Instruction codes included in the software groups are stored in the storage 106, read at an appropriate timing, and executed by the processor 102 of the CPU unit 100.</p>
<p id="p0058" num="0058">Examples of the software executed by the CPU unit 100 basically include an operating system (OS) 1062, a system program 1064, and a user program 1066.</p>
<p id="p0059" num="0059">The OS 1062 is designed depending on a computer architecture of the CPU unit 100, and provides a basic execution environment allowing the processor 102 to execute the system program 1064 and the user program 1066. The OS 1062 is typically provided by a controller manufacturer or a specialized software company.</p>
<p id="p0060" num="0060">The system program 1064 is a software group for providing a function of the controller 10. Specifically, the system program 1064 includes a scheduler program 642, a sequence instruction program 644, an input and output processing program 646, and an access processing<!-- EPO <DP n="13"> --> program 648. Each program included in the system program 1064 is typically provided by a controller manufacturer, a specialized software company, or the like.</p>
<p id="p0061" num="0061">The user program 1066 is created depending on the control purpose of the user. In embodiment 1, the user program 1066 is generated, for example, in the support device 30. The user program 1066 is transferred from the support device 30 to the CPU unit 100 via a USB cable and stored in the storage 106.</p>
<p id="p0062" num="0062">The user program 1066 cooperates with the sequence instruction program 644 to realize the control purpose in the user. That is, the user program 1066 uses instructions, functions, function modules, and the like that are provided by the sequence instruction program 644 to realize a programmed operation.</p>
<p id="p0063" num="0063">The scheduler program 642 causes the processor 102 to execute a program according to a predetermined priority. The program includes a program of which an execution timing is highly required to be guaranteed, and a program of which an execution timing is less required to be guaranteed. For example, a program for operating a plurality of control devices in cooperation has an execution timing highly required to be guaranteed. On the other hand, a program for performing communication settings has an execution timing less required to be guaranteed. The program of which the execution timing is highly required to be guaranteed is set in a fixed-cycle task that is repeatedly executed at a fixed cycle. On the other hand, the program of which the execution timing is less required to be guaranteed is executed in a free time of the processor 102 that is not executing a fixed-cycle task not to interfere with the execution of the program set in the fixed-cycle task. Here, the "task" refers to a basic unit that is a target of control for allocating computing resources. The scheduler program 642 controls process start, process interruption, and process restart after the process interruption for each program that is executed by the processor 102.</p>
<p id="p0064" num="0064">The sequence instruction program 644 includes an instruction code group for calling an entity of the sequence instruction designated in the user program 1066 with the execution of the<!-- EPO <DP n="14"> --> user program 1066 and realizing content of the instruction.</p>
<p id="p0065" num="0065">The input and output processing program 646 is a program for managing acquisition of input data and transmission of output data from and to the field device connected to the controller 10.</p>
<p id="p0066" num="0066">The access processing program 648 includes an instruction code group for realizing a process necessary for performing the communication settings with the execution of the user program 1066.</p>
<heading id="h0017">&lt;D. Device configuration of support device&gt;</heading>
<p id="p0067" num="0067"><figref idref="f0004">Fig. 5</figref> is a schematic diagram illustrating an example of a device configuration of the support device 30. As an example, the support device 30 is realized by using hardware complying with a general-purpose architecture (for example, a general-purpose personal computer).</p>
<p id="p0068" num="0068">The support device 30 includes a processor 31, a main memory 32, an input unit 33, an output unit 34, a storage 35, an optical drive 36, and a USB controller 37 which is an example of a communication interface. These components are connected via a processor bus 38.</p>
<p id="p0069" num="0069">The processor 31 includes a CPU, a GPU, or the like, reads a program stored in the storage 35, loads the program into the main memory 32, and executes the program to realize various processes as described below.</p>
<p id="p0070" num="0070">The main memory 32 includes a volatile storage device such as a DRAM or a SRAM. The storage 35 includes, for example, a non-volatile storage device such as an HDD or an SSD.</p>
<p id="p0071" num="0071">The storage 35 stores various pieces of data that are used for creation of the user program 1066, and a program for supporting development of the user program 1066.</p>
<p id="p0072" num="0072"><!-- EPO <DP n="15"> --> The input unit 33 includes a keyboard, a mouse, and the like, and receives user operations with respect to the support device 30.</p>
<p id="p0073" num="0073">The output unit 34 includes a display, various indicators, a printer, and the like, and outputs, for example, a processing result from the processor 31. In embodiment 1, it is assumed that the output unit 34 includes a display.</p>
<p id="p0074" num="0074">The USB controller 37 exchanges data with the CPU unit 100 or the like via a USB connection.</p>
<p id="p0075" num="0075">The support device 30 includes the optical drive 36, and a program is read from a recording medium 36a (for example, an optical recording medium such as a digital versatile disc (DVD)) that non-transiently stores a computer-readable program and installed in the storage 35 or the like.</p>
<p id="p0076" num="0076">A support program 354, the function block 400, and the like may be installed in the support device 30 via the computer-readable recording medium 36a, but may also be downloaded from a server device or the like on a network and installed. Further, a function provided by the support device 30 according to the present embodiment may be realized by using some of modules provided by the OS.</p>
<p id="p0077" num="0077">Although the configuration example in which the functions required as the support device 30 are provided by the processor 31 executing the program has been illustrated in <figref idref="f0004">Fig. 5</figref>, some or all of these provided functions may be implemented by a dedicated hardware circuit (for example, an ASIC or an FPGA).</p>
<heading id="h0018">&lt;E. Software configuration of support device 30&gt;</heading>
<p id="p0078" num="0078"><figref idref="f0005">Fig. 6</figref> is a schematic diagram illustrating a software configuration of the support device 30. In <figref idref="f0005">Fig. 6</figref>, an example of software groups for providing various functions according to embodiment 1 is illustrated. Instruction codes included in the software groups are read at an<!-- EPO <DP n="16"> --> appropriate timing and executed by the processor 31 of the support device 30.</p>
<p id="p0079" num="0079">Software that is executed by the support device 30 includes at least an OS 352 and the support program 354. These programs are stored in the storage 35. Further, data that is used for execution of the program includes a function block library (hereinafter also referred to as a "FB library") 356 and a command library 358 and is stored in the storage 35.</p>
<p id="p0080" num="0080">The OS 352 provides a basic environment in which the support program 354 can be executed. The support program 354 is a program for realizing the function provided by the support device 30, and provides a function for creating the user program 1066.</p>
<p id="p0081" num="0081">The FB library 356 is a library of function blocks which are program components defined for each piece of instruction information for generating the user program 1066. The FB library 356 includes a function block 400 corresponding to instruction required for setting of communication. In embodiment 1, for example, a function block corresponding to an instruction to write a VPN setting between the manufacturing site 2 and the remote site 4 to the repeater unit 200, a function block corresponding to an instruction to read the VPN setting written to the repeater unit 200, and a function block corresponding to an instruction to enable the setting written to the repeater unit 200 are included in the FB library 356.</p>
<p id="p0082" num="0082">The user can input parameters necessary for execution of the function blocks 400 via the input unit 33, and combines the function blocks 400 for which the parameters are input to create the user program 1066.</p>
<p id="p0083" num="0083">The command library 358 is a library of conversion information 582 including a protocol for transmission or reception of commands that is performed between the repeater unit 200 and the CPU unit 100. More specifically, the protocol is information including a procedure for transmission or reception of commands, and types of commands. The CPU unit 100 performs communication settings for the repeater unit 200 according to the protocol included in the conversion information 582.<!-- EPO <DP n="17"> --></p>
<p id="p0084" num="0084">The conversion information 582 is stored in the command library 358 as a command group 580 for each type of command that is supported by the repeater unit 200. For example, a command group 580A for conversion to a command of company A and a command group 580B for conversion to a command of company B are stored in the command library 358. Each command group 580 includes the conversion information 582 for converting the function block 400 to a corresponding command.</p>
<p id="p0085" num="0085">The function block 400 and command library 358, for example, are distributed in a state of being stored in the recording medium 36a by a controller manufacturer or a specialized software company. The user can install the function block 400 and the command library 358 stored in the recording medium 36a, in the support device 30, to use the function block 400 and the command library 358.</p>
<p id="p0086" num="0086">The support program 354 includes an editor 541, a compiler 542, a debugger 543, a graphical user interface (GUI) module 544, a simulator 545, and a data storage unit 550.</p>
<p id="p0087" num="0087">The editor 541 provides functions such as input and editing for creating a source program of the user program 1066. More specifically, the editor 541 provides functions of storing and editing the created source program, in addition to the function of creating the source program of the user program 1066 by the user operating the input unit 33 including a keyboard or a mouse. The editor 541 creates the source program of the user program 1066 using the function block 400 selected from the FB library 356 according to an operation of a designer.</p>
<p id="p0088" num="0088">The compiler 542 provides a function of compiling the source program to generate the user program 1066 in a program format that can be executed by the controller 10.</p>
<p id="p0089" num="0089">The debugger 543 provides a function for performing debugging on the source program of the user program 1066.</p>
<p id="p0090" num="0090"><!-- EPO <DP n="18"> --> The GUI module 544 has a function of providing a user interface screen allowing the designer to input various pieces of data, parameters, or the like. The user interface screen is displayed on the output unit 34 including a display.</p>
<p id="p0091" num="0091">The simulator 545 constructs an environment for simulating the execution of the program in the controller 10 in the support device 30.</p>
<p id="p0092" num="0092">The created user program 1066 is stored in the data storage unit 550. The user program 1066 includes one or a plurality of function blocks 400. The user program 1066 stored in the data storage unit 550 is sent to the CPU unit 100 via the USB cable and set. In this case, the conversion information 582 corresponding to the function block 400 included in the user program 1066 is also sent to the CPU unit 100 and set. In embodiment 1, the support device 30 extracts the conversion information 582 corresponding to the function block 400 from each command group 580, and sends all pieces of extracted conversion information 582 to the CPU unit 100.</p>
<p id="p0093" num="0093">Accordingly, it is possible to create a user program for performing communication settings using an IEC program used in the field of FA. As a result, a designer of the IEC program can create the user program for performing a setting related to a communication function without learning for newly setting a communication function.</p>
<p id="p0094" num="0094">In the example illustrated in <figref idref="f0005">Fig. 6</figref>, it is assumed that the FB library 356 and the command library 358 are stored in the storage 35 of the support device 30, but at least one of the FB library 356 and the command library 358 may be stored in a server device that can be connected to the support device 30 via a network.</p>
<p id="p0095" num="0095">&lt;F. Functional configuration realized through execution of program related to communication setting&gt;</p>
<p id="p0096" num="0096"><figref idref="f0006">Fig. 7</figref> is a diagram illustrating a functional configuration of the controller 10 that is realized through execution of a program related to communication setting.<!-- EPO <DP n="19"> --></p>
<p id="p0097" num="0097">Various functions illustrated in <figref idref="f0006">Fig. 7</figref> are realized by an execution condition for the function block 400 regarding the communication settings included in the user program 1066 being fulfilled and an instruction indicated by the function block 400 being executed by the processor 102.</p>
<p id="p0098" num="0098">The CPU unit 100 includes a fixed-cycle task execution unit 140, a communication setting unit 160, and a conversion information specifying unit 180. The repeater unit 200 includes a setting information storage unit 220 and a setting information updating unit 240.</p>
<p id="p0099" num="0099">The fixed-cycle task execution unit 140 repeatedly executes a fixed-cycle task at a fixed cycle. The fixed-cycle task execution unit 140 determines at least whether or not to execute the instruction indicated by the function block 400. When the execution condition for the instruction indicated by the function block 400 is fulfilled, the fixed-cycle task execution unit 140 instructs the communication setting unit 160 to execute the instruction indicated by the function block 400.</p>
<p id="p0100" num="0100">The conversion information specifying unit 180 specifies a command that can be interpreted by the repeater unit 200 connected to the CPU unit 100, and specifies the conversion information 582 for conversion to the specified command. More specifically, the conversion information specifying unit 180 acquires device information 260 of the repeater unit 200 from the repeater unit 200 and specifies the conversion information 582 on the basis of the device information 260. As the device information 260, for example, a media access control (MAC) address is assumed.</p>
<p id="p0101" num="0101">More specifically, when the user program 1066 is installed from the support device 30, the conversion information 582 corresponding to each of the one or a plurality of function blocks 400 included in the user program 1066 is extracted from each command group 580, and installed in the CPU unit 100. A set of the conversion information 582 is referred to as a conversion information group 182. The conversion information specifying unit 180 specifies the<!-- EPO <DP n="20"> --> conversion information 582 from the conversion information group 182 on the basis of the function block 400 executed by the communication setting unit 160 and the specified device information 260. For example, when the repeater unit 200 connected to the CPU unit 100 interprets the command of company A and the communication setting unit 160 executes the instruction of the function block A, the conversion information specifying unit 180 specifies conversion information aa.</p>
<p id="p0102" num="0102">The communication setting unit 160 performs exchange of a command with the repeater unit 200 on the basis of the conversion information 582 specified by the conversion information specifying unit 180 to execute the instruction indicated by the function block 400.</p>
<p id="p0103" num="0103">The fixed-cycle task execution unit 140 executes the task at a fixed cycle, and the task includes a process of acquiring an execution situation of the instruction of the communication setting unit 160. That is, the fixed-cycle task execution unit 140 monitors execution of the instruction that is performed by the communication setting unit 160.</p>
<p id="p0104" num="0104">The setting information storage unit 220 of the repeater unit 200 stores information on the communication setting. While commands are exchanged between the repeater unit 200 and the CPU unit 100, the information on the communication settings (setting information 222) stored in the setting information storage unit 220 is modified.</p>
<p id="p0105" num="0105">The setting information updating unit 240 of the repeater unit 200 performs command exchange with the communication setting unit 160, and stores the setting information 222 in the setting information storage unit 220 while exchanging commands.</p>
<p id="p0106" num="0106">At the manufacturing site 2, devices such as the field device group 40 are mainly controlled by the CPU unit 100. In embodiment 1, the CPU unit 100 converts the instructions into a command that can be exchanged with the repeater unit 200, which is a relay device, and then performs exchange of data with the repeater unit 200 to perform communication settings of the repeater unit 200. That is, the communication system 1 of embodiment 1 can change a state<!-- EPO <DP n="21"> --> of the repeater unit 200, which is a relay device that mediates communication, from the CPU unit 100 that is a control device that controls a device such as the field device group 40.</p>
<p id="p0107" num="0107">Therefore, a user working at the manufacturing site 2 can change the state of the repeater unit 200, which is a relay device, similarly when a device such as the field device group 40 is controlled, without specialized knowledge about security or communication. In embodiment 1, the CPU unit 100 can change the communication settings as a state of the relay device. Further, in embodiment 1, a method of executing a user program is adopted as a method of changing the state of the repeater unit 200 from the CPU unit 100.</p>
<heading id="h0019">&lt;G. Program example&gt;</heading>
<heading id="h0020">(G1. User program)</heading>
<p id="p0108" num="0108">An example of using the function block will be described with reference to <figref idref="f0007">Figs. 8</figref> and <figref idref="f0008">9</figref>. <figref idref="f0007">Figs. 8</figref> and <figref idref="f0008">9</figref> are diagrams illustrating an example of the user program 1066 incorporating the function block related to the communication setting.</p>
<p id="p0109" num="0109">The user program 1066 illustrated in <figref idref="f0007">Figs. 8</figref> and <figref idref="f0008">9</figref> is defined by a ladder program. This user program 1066 is defined to perform a setting of a VPN so that maintenance can be performed from the remote site 4 when an abnormality occurs at the manufacturing site 2 and the controller 10 is set to a maintenance mode.</p>
<p id="p0110" num="0110">The user program 1066 is defined by input elements IN1 to IN6, function blocks FB1 to FB3, a structured text ST, and output elements OUT1 to OUT5.</p>
<p id="p0111" num="0111">The function block FB1 is referred to as "RC_SetVPNServerSetting". The function block FB 1 indicates the instruction to write the VPN setting between the manufacturing site 2 and the remote site 4 to the repeater unit 200. The function block FB 1 includes input units 412A to 412K that receive input of setting conditions to be written to the repeater unit 200, and output units 414A to 414D for outputting a result of a writing process.</p>
<p id="p0112" num="0112"><!-- EPO <DP n="22"> --> The input units 412B to 412K indicate VPN setting conditions, and a VPN is defined according to the setting conditions input to input units 412B to 412K.</p>
<p id="p0113" num="0113">The input unit 412A indicated as "Execute" receives a setting for designating whether or not to execute the writing process. As an example, the input unit 412A receives an input of "True" (ON) or "False" (OFF). The writing process is not executed as long as "False" is input to the input unit 412A. In the example illustrated in <figref idref="f0007">Fig. 8</figref>, the writing process is executed when a value of an input element IN3 becomes "True" (ON).</p>
<p id="p0114" num="0114">The input unit 412B indicated as a "VPNServerAddress" receives an input for designating an IP address to be used as a VPN server. This IP address is one IP address or one of a plurality of IP addresses preset in the repeater unit 200. The CPU unit 100 specifies a target for communication settings according to the IP address input to the input unit 412B. In the example illustrated in <figref idref="f0007">Fig. 8</figref>, "192.168.1.254/24" is input to the input unit 412B, and the CPU unit 100 uses "192.168.1.254/24" in the IP addresses assigned to the repeater unit 200 as an address for the VPN server.</p>
<p id="p0115" num="0115">The input unit 412C indicated as "LoginID" receives an input of the user ID for performing the VPN setting. The input unit 412D indicated as "LoginPassword" receives an input of a password for performing the VPN setting. The user ID and password are information required at the time of remote access to the repeater unit 200.</p>
<p id="p0116" num="0116">The input unit 412E indicated as "VPNSeverConfigName" receives an input of a name of the VPN server which can be arbitrarily set.</p>
<p id="p0117" num="0117">The input unit 412F indicated as "VPNClient Address" receives an input for designating an IP address assigned to the repeater 4b that accesses the repeater unit 200 on a network outside a field network. In the example illustrated in <figref idref="f0007">Fig. 8</figref>, "20.0.0.1" is input to the input unit 412F, and the repeater unit 200 permits access from the repeater 4b to which the IP address of "20.0.0.1" is assigned.<!-- EPO <DP n="23"> --></p>
<p id="p0118" num="0118">The input unit 412G indicated as "PreSharedKey", receives an input for designating a pre-shared key for determining whether to allow remote access.</p>
<p id="p0119" num="0119">The input unit 412H indicated as "Authentication Algorithm" receives an input for designating an authentication algorithm that is used in the set VPN. As the authentication algorithm, for example, Message Digest Algorithm 5 (MD5), Secure Hash Algorithm (SHA)-1, and Hash-based Message Authentication Code (HMAC) are assumed.</p>
<p id="p0120" num="0120">The input unit 4121 indicated as "Encryption Algorithm" receives an input for designating an encryption algorithm that is used in the set VPN. As the encryption algorithm, for example, Data Encryption Standard (DES), 3DES, and Advanced Encryption Standard (AES) are assumed.</p>
<p id="p0121" num="0121">The input unit 412J indicated as "DestinationIPAddress" receives an input for designating an IP address of a device that accesses the set VPN. In the example illustrated in <figref idref="f0007">Fig. 8</figref>, "192.168.2.0" is input to the input unit 412J, and the repeater unit 200 permits access to the device to which "192.168.2.0" is assigned.</p>
<p id="p0122" num="0122">The input unit 412K indicated as "DestinationNetworkMask" receives an input for designating a netmask of the IP address input to the input unit 412J.</p>
<p id="p0123" num="0123">When the writing process is normally executed, a signal indicating normal end is output from the output unit 414A indicated as "Done". During the execution of the writing process, a signal indicating that the writing process is in progress is output from an output unit 414B indicated as "Busy". When the VPN setting is not written normally, a signal indicating abnormal end is output from an output unit 414C indicated as "Error". In this case, an error ID for identifying content of the error is further output from an output unit 414D indicated as "Error ID".</p>
<p id="p0124" num="0124"><!-- EPO <DP n="24"> --> The function block FB2 is referred to as "RC_ApplyVPNServerSetting". The function block FB2 indicates the instruction to enable the VPN setting written to the repeater unit 200. The function block FB2 includes input units 422A to 422E for receiving input for designating the VPN setting to be enabled, and output units 424A to 424D for outputting a result of performing the enabling process.</p>
<p id="p0125" num="0125">Information received by the input units 422B to 424E is information for specifying the VPN server to be enabled. Since detailed information received by each of the input units 422B to 424E is the same as the information received by the input units 412B to 414E, description thereof will be omitted. Further, since information output by the output units 424A to 424D is the same as the information output by the output units 414A to 414D, description thereof will be omitted.</p>
<p id="p0126" num="0126">The function block FB3 is referred to as "RC_GetVPNServerSetting". The function block FB3 indicates the instruction to read the VPN setting written to the repeater unit 200. The function block FB3 includes input units 432A to 432E for receiving an input for designating the VPN setting to be read, and output units 434A to 434J for outputting a result of the enabling process.</p>
<p id="p0127" num="0127">Since information received by the input units 432A to 434E is the same as the information received by the input units 412A to 414E, description thereof will be omitted. Further, since information output by the output units 434A to 434D is the same as the information output by the output units 414A to 414D, description thereof will be omitted. The information output by the output units 414E to 414J is a result of the VPN settings input to and specified by the input units 432A to 434E. With the output of the information from all of the output units 414E to 414J, a signal indicating normal end is output from the output unit 414A indicated as "Done".</p>
<p id="p0128" num="0128">The structured text ST is referred to as "RC_CheckVPNServerSetting". The structured text ST indicates an instruction for determining whether or not written information on the VPN<!-- EPO <DP n="25"> --> setting matches read information on the VPN setting. An instruction indicated by the structured text ST is set as a setting collation process. More specifically, in the structured text ST, when information input to the input units 412F to 412K of the function block FB1 matches information output from the output units 432E to 432J of the function block FB3, a value of a variable "CheckVPNDone" is set to "True" (ON), and when any one of pieces of the information does not match, the value of the variable "CheckVPNDone" is set to "False" (OFF).</p>
<p id="p0129" num="0129">Values of the input elements IN1 to IN6 change depending on assigned variables. More specifically, a variable "Status_Err" is assigned to the input element IN1. The variable "Status_Err" is a Boolean type, and an initial value thereof is "False" (= OFF). A value of the variable "Status_Err" changes to "True" (ON) on the basis of a state of the controller 10 becoming an error state. In other cases, the value of the variable "Status_Err" is "False" (OFF).</p>
<p id="p0130" num="0130">A variable "Mode_maintenance" is assigned to the input element IN2. The variable "Mode_maintenance" is a Boolean type, and an initial value thereof is "False" (= OFF). A value of the variable "Mode_maintenance" changes to "True" (ON) on the basis of the user operating the HMI 20 to change the controller 10 to a mode in which remote maintenance is executed. In other cases, the value of the variable "Mode_maintenance" is "False" (OFF). A trigger for changing to the mode in which remote maintenance is executed is not limited to the operation from the HMI 20, but may be an operation with respect to a switch (not illustrated) provided in the controller 10.</p>
<p id="p0131" num="0131">A variable "SetVPNFlag" is assigned to the input element IN3. The variable "SetVPNFlag" is a Boolean type, and an initial value thereof is "False" (= OFF). A value of the variable "SetVPNFlag" is associated with an output element OUT1. The value changes to "True" (ON) on the basis of "True" (ON) being output from the output element OUT1. In other cases, the value of the variable "SetVPNFlag" is "False" (OFF). The output element OUT1 outputs "True" (ON) when both the input element IN0 and the input element IN1 are "True" (ON), and outputs "False" (OFF) in other cases.</p>
<p id="p0132" num="0132"><!-- EPO <DP n="26"> --> A variable "SetVPNDone" is assigned to the input element IN4. The variable "SetVPNDone" is a Boolean type, and an initial value thereof is "False" (= OFF). A value of the variable "SetVPNDone" is associated with the output element OUT2. The value changes to "True" (ON) on the basis of "True" (ON) being output from the output element OUT2. In other cases, the value of the variable "SetVPNDone" is "False" (OFF). The output element OUT2 changes from "False" (= OFF) to "True" (ON) when the signal indicating the normal end is output from the output unit 414A of the function block FB1.</p>
<p id="p0133" num="0133">A variable "ApplyVPNDone" is assigned to the input element IN5. The variable "ApplyVPNDone" is a Boolean type, and an initial value thereof is "False" (= OFF). A value of the variable "ApplyVPNDone" is associated with the output element OUT3. The value changes to "True" (ON) on the basis of "True" (ON) being output from the output element OUT3. In other cases, the value of the variable "ApplyVPNDone" is "False" (OFF). The output element OUT3 changes from "False" (= OFF) to "True" (ON) when the signal indicating the normal end is output from the output unit 424A of the function block FB2.</p>
<p id="p0134" num="0134">A variable "GetVPNDone" is assigned to the input element IN6. The variable "GetVPNDone" is a Boolean type, and an initial value thereof is "False" (= OFF). A value of the variable "GetVPNDone" is associated with the output element OUT4. The value changes to "True" (ON) on the basis of "True" (ON) being output from the output element OUT4. In other cases, the value of the variable "GetVPNDone" is "False" (OFF). The output element OUT4 changes from "False" (= OFF) to "True" (ON) when the signal indicating the normal end is output from the output unit 434A of the function block FB3.</p>
<p id="p0135" num="0135">The variable "CheckVPNDone" is assigned to the output element OUT5. The variable "CheckVPNDone" becomes "True" (ON) when the written information on the VPN setting all matches the read information on the VPN setting in the structured text ST, and becomes "False" (OFF) when at least one piece of information does not match or when a program of the structured text ST is not executed.<!-- EPO <DP n="27"> --></p>
<heading id="h0021">(G2. Execution timing)</heading>
<p id="p0136" num="0136"><figref idref="f0009">Fig. 10</figref> is a diagram illustrating a timing at which the fixed-cycle task execution unit 140 and the communication setting unit 160 execute a process when the user program illustrated in <figref idref="f0007">Figs. 8</figref> and <figref idref="f0008">9</figref> is executed.</p>
<p id="p0137" num="0137">The fixed-cycle task execution unit 140 repeatedly executes the user program 1066 according to a control cycle of the controller 10. A series of processes that are executed by the fixed-cycle task execution unit 140 are always executed in one cycle for each control cycle T. The series of processes (referred to as a preferential process 142) that are executed by the fixed-cycle task execution unit 140 include an I/O refresh process 144.</p>
<p id="p0138" num="0138">In the I/O refresh process 144, the value of the variable is updated.</p>
<p id="p0139" num="0139">The fixed-cycle task execution unit 140 executes the I/O refresh process 144 to update the value of the variable, and determines whether or not an execution condition for a process related to the communication settings is fulfilled in a subsequent process. When the execution condition for the process related to the communication settings is fulfilled, the communication setting unit 160 executes the process related to the communication settings for which the execution condition is fulfilled after the execution of the preferential process 142 is completed. The communication setting unit 160 interrupts a process that is being executed when the next cycle is started, and then restarts the interrupted process when the execution of the preferential process 142 is completed again.</p>
<p id="p0140" num="0140">In the example illustrated in <figref idref="f0009">Fig. 10</figref>, it is assumed that an error signal is output at a timing t1 and the maintenance mode is set at a timing t2. Assuming that the control cycle T at the timing t2 in which the maintenance mode is set is a first cycle, the variable "SetVPNFlag" changes from "False" (= OFF) to "True" (ON) in the I/O refresh process 144 executed in a second cycle. Accordingly, an execution condition for the writing process indicated by the function block FB 1 of <figref idref="f0007">Fig. 8</figref> is fulfilled.</p>
<p id="p0141" num="0141">The writing process is a process that is executed by the communication setting unit 160.<!-- EPO <DP n="28"> --> The communication setting unit 160 starts the writing process from a timing t3 when the preferential process 142 of the second cycle is completed, and interrupts the writing process at a timing t4 when the third cycle starts. Thereafter, the interrupted writing process restarts from the timing t4 when the preferential process 142 of the third cycle is completed.</p>
<p id="p0142" num="0142">The communication setting unit 160 outputs a signal indicating that the process is being executed while the writing process is being executed, and outputs a signal indicating normal end when the process ends normally. In the example illustrated in <figref idref="f0009">Fig. 10</figref>, it is assumed that the writing process has ended at a timing t5.</p>
<p id="p0143" num="0143">When the writing process ends at the timing t5, the variable "SetVPNDone" changes from "False" (= OFF) to "True" (ON) in the I/O refresh process 144 that is executed in a (N+1)th cycle. Accordingly, an execution condition of the enabling process indicated by the function block FB2 in <figref idref="f0007">Fig. 8</figref> is fulfilled.</p>
<p id="p0144" num="0144">Thus, a process of the user program 1066 illustrated in <figref idref="f0007">Figs. 8</figref> and <figref idref="f0008">9</figref> proceeds in cooperation with the communication setting unit 160 and the fixed-cycle task execution unit 140. After the setting collation process indicated by the structured text ST is completed, the communication setting unit 160 does not perform the process until other execution conditions are fulfilled.</p>
<heading id="h0022">(G3. Exchange of commands between CPU unit and repeater unit)</heading>
<p id="p0145" num="0145">Specific command exchange that is performed between the communication setting unit 160 of the CPU unit 100 and the setting information updating unit 240 of the repeater unit 200 when the user program illustrated in <figref idref="f0007">Figs. 8</figref> and <figref idref="f0008">9</figref> is executed will be described. <figref idref="f0010">Fig. 11</figref> is a diagram illustrating exchange of commands between the communication setting unit 160 and the setting information updating unit 240. The writing process will be described as an example of communication settings process with reference to <figref idref="f0010">Fig. 11</figref>. In <figref idref="f0010">Fig. 11</figref>, description of interruption and restart of the process as illustrated in <figref idref="f0009">Fig. 10</figref> is omitted. Further, a step is abbreviated as "S] below.<!-- EPO <DP n="29"> --></p>
<p id="p0146" num="0146">As described above, the communication setting unit 160 converts the instruction indicated by the function block 400 to a command that can be exchanged with the repeater unit 200 on the basis of the conversion information 582 specified by the conversion information specifying unit 180, performs exchange of the instruction with the repeater unit 200, and executes the instruction indicated by the function block 400.</p>
<p id="p0147" num="0147">More specifically, when the execution condition for the writing process is fulfilled (S100), the communication setting unit 160 receives a command to execute the writing process from the fixed-cycle task execution unit 140 (S102). The communication setting unit 160 specifies the conversion information 582 corresponding to the received command, that is, a type of function block 400 to be executed (S104). More specifically, the communication setting unit 160 instructs the conversion information specifying unit 180 to specify the conversion information 582 and receives a result of the specifying from the conversion information specifying unit 180 to specify the conversion information 582.</p>
<p id="p0148" num="0148">The communication setting unit 160 interprets the instruction indicated by the function block FB1 depending on the conversion information 582 specified in S104, and determines content of a process such as a type of command and a processing procedure (S106).</p>
<p id="p0149" num="0149">The communication setting unit 160 performs command exchange with the repeater unit 200 depending on items determined in S106. In the example illustrated in <figref idref="f0010">Fig. 11</figref>, processes S108 to S128 are executed. The processes of S108 to S128 are examples, and the processes may differ depending on a model of the repeater unit 200, and commands (language) that are used at the time of exchange may also differ.</p>
<p id="p0150" num="0150">The communication setting unit 160, for example, performs confirmation of whether or not a newly set user name and password can be used on the setting information updating unit 240 (S108).</p>
<p id="p0151" num="0151"><!-- EPO <DP n="30"> --> The setting information updating unit 240 confirms whether or not the newly set user name and password can be used on the basis of the information stored in the setting information storage unit 220, and notifies the communication setting unit 160 of a result of the confirmation (S110).</p>
<p id="p0152" num="0152">The communication setting unit 160 determines whether or not there is an abnormality on the basis of the confirmation result notified from the setting information updating unit 240 (S112).</p>
<p id="p0153" num="0153">When there is an abnormality (YES in S 112), more specifically, when the newly set user name and password cannot be used, the communication setting unit 160 outputs a signal indicating abnormal end and the generated abnormality (S114). When there is no abnormality (NO in S 112), more specifically, when the newly set user name and password can be used, the communication setting unit 160 performs confirmation of whether or not a designated IP address can be used as the VPN server, on the setting information updating unit 240 (S116).</p>
<p id="p0154" num="0154">The setting information updating unit 240 confirms whether or not the designated IP address can be used as the VPN server on the basis of the information stored in the setting information storage unit 220 and information on a port assigned to the repeater unit 200, and notifies the communication setting unit 160 of a result of the confirmation (S118).</p>
<p id="p0155" num="0155">The communication setting unit 160 determines whether or not there is an abnormality on the basis of the confirmation result notified from the setting information updating unit 240 (S 120). When there is an abnormality (YES in S 120), more specifically, when a new IP address cannot be used, the communication setting unit 160 outputs a signal indicating abnormal end and the generated abnormality (S 122). When there is no abnormality (NO in S 120), more specifically, when the new IP address can be used, the communication setting unit 160 issues a command to write information related to the setting content to the setting information updating unit 240 (S124).</p>
<p id="p0156" num="0156">The setting information updating unit 240 stores the information related to the setting<!-- EPO <DP n="31"> --> content in the setting information storage unit 220, and notifies the communication setting unit 160 of the completion of the storage (S126).</p>
<p id="p0157" num="0157">The communication setting unit 160 outputs a signal indicating that the processing has ended normally (S 128). The fixed-cycle task execution unit 140 receives the fact that the process has normally ended and changes the output element OUT2 from "False" (= OFF) to "True" (ON).</p>
<p id="p0158" num="0158">Accordingly, the execution condition of the function block FB2 is fulfilled, and the next process is executed. In <figref idref="f0010">Fig. 11</figref>, a process after the function block FB2 is omitted.</p>
<p id="p0159" num="0159">Thus, the communication setting unit 160 defines, for example, a procedure of a process to be executed with the setting information updating unit 240 in order to issue one instruction (function block) selected by the user, and executes the process according to the defined procedure to perform the selected instruction.</p>
<heading id="h0023">&lt;H. Specific example of communication setting&gt;</heading>
<p id="p0160" num="0160"><figref idref="f0011">Fig. 12</figref> is an example of instructions prepared in the support device 30. An instruction to write a VPN setting to the repeater unit 200, an instruction to enable the VPN setting written to the repeater unit 200, and an instruction to read the VPN setting written to the repeater unit 200 in embodiment 1 will be described by way of example. It is assumed that the instructions illustrated in <figref idref="f0011">Fig. 12</figref> are instructions requiring data exchange with the repeater unit 200.</p>
<p id="p0161" num="0161">In <figref idref="f0011">Fig. 12</figref>, for each setting target, instructions assumed for the setting target are indicated by a "check mark". Further, for each setting target, parameters required for a setting in the setting target are shown in a setting parameter column.</p>
<p id="p0162" num="0162">Specifically, examples of items that can be set for the repeater unit 200 from the CPU unit 100 may include IP address, IP address routing (communication path), communication port, port mirroring, network address translation (NAT) or network address port translation (NAPT),<!-- EPO <DP n="32"> --> virtual LAN (VLAN), quality of service (Qos), user authentication, access control list (ACL), firewall setting, digital certificates, status, logs, and report notifications.</p>
<p id="p0163" num="0163">In setting content, Get, Set, Apply, GetList, Clear, and Enable/Disable are set. Get means to acquire information on setting items. Set means to write the information on the setting items. Apply means to reflect the information on the setting items. GetList means to acquire a list of information on the setting items. For example, when GetList instruction is executed, the information on the setting items can be acquired from all devices connected to the relay device, or all pieces of information on the setting items can be acquired. Clear means to erase the information on the setting items or return the information to an initial value. Enable/Disable means to enable/disable the set items.</p>
<p id="p0164" num="0164">The parameters are information that is input or output when an instruction is executed. In a setting regarding the IP address, for example, an IP address, a network mask, a default gateway, a domain name system (DNS) server, and a host name are defined as parameters. Further, as instructions prepared for the IP address, for example, Get, Set, Apply, GetList, and Clear can be prepared.</p>
<p id="p0165" num="0165">In a setting regarding the IP address routing, for example, an IP router table is defined as a parameter. Further, as instructions provided for the IP address routing, for example, Get, Set, Apply, GetList, and Clear can be prepared.</p>
<p id="p0166" num="0166">In a setting regarding the communication port, a communication speed, a bidirectional communication (Duplex) scheme, and the like are defined as parameters. As instructions prepared for the communication port, for example, Get, Set, Apply, GetList, and Clear can be prepared.</p>
<p id="p0167" num="0167">In a setting regarding the port mirroring, for example, a mirroring port, and a monitor port are defined as parameters. As instructions prepared for the port mirroring, for example, Get, Set, Apply, GetList, Clear, and Enable/Disable can be prepared.<!-- EPO <DP n="33"> --></p>
<p id="p0168" num="0168">In a setting regarding the NAT or the NATP, for example, an IP address to be used, and a port translation table indicating a translation rule are defined as parameters. As instructions prepared for the NAT or NATP, for example, Get, Set, Apply, GetList, Clear, and Enable/Disable can be prepared.</p>
<p id="p0169" num="0169">In a setting regarding the VLAN, for example, a VLAN ID, a port number of the VLAN (VLAN Port Numer), and a port number set as an access port or a trunk port are defined as parameters. As the instructions prepared for the VLAN, for example, Get, Set, Apply, GetList, Clear, and Enable/Disable can be prepared.</p>
<p id="p0170" num="0170">In a setting regarding the QoS, for example, a priority when frames are transferred is defined as a parameter. As instructions prepared for the QoS, for example, Get, Set, Apply, GetList, Clear, and Enable/Disable can be prepared.</p>
<p id="p0171" num="0171">In a setting regarding the user authentication, for example, user information of the repeater unit 200 such as a user name or a password is defined as a parameter. As the instructions prepared for the user authentication, for example, Get, Set, Apply, GetList, Clear, and Enable/Disable can be prepared.</p>
<p id="p0172" num="0172">As instructions prepared for the ACL, for example, Get, Set, Apply, GetList, Clear, and Enable/Disable can be prepared.</p>
<p id="p0173" num="0173">As instructions prepared for the firewall setting, for example, Get, Set, Apply, GetList, Clear, and Enable/Disable can be prepared.</p>
<p id="p0174" num="0174">In a setting regarding the digital certificate, for example, a digital certificate of a network device is defined as a parameter. For example, the digital certificate is output. As instructions prepared for the digital certificate, for example, Get, Set, Apply, GetList, Clear, and Enable/Disable can be prepared.<!-- EPO <DP n="34"> --></p>
<p id="p0175" num="0175">In a setting regarding the status, for example, a status of the repeater unit 200 is defined as a parameter. For example, the status of the repeater unit 200 is output. As instructions prepared for the status, for example, Get, Apply, GetList, and Enable/Disable can be prepared.</p>
<p id="p0176" num="0176">In a setting regarding the log, for example, a log of the repeater unit 200 is defined as a parameter. For example, the log of the repeater unit 200 is output. As instructions prepared for the log, for example, Apply, GetList, Clear and Enable/Disable can be prepared.</p>
<p id="p0177" num="0177">In a setting regarding the report notification, for example, an address which is information on a notification destination of a log is defined as a parameter. As instruction prepared for the report notification, for example, Get, Set, Apply, GetList, Clear, and Enable/Disable can be prepared.</p>
<heading id="h0024">&lt;I. Modification example&gt;</heading>
<heading id="h0025">(Modification example 1)</heading>
<p id="p0178" num="0178">In embodiment 1, the communication system 1 includes the repeater unit 200 and the CPU unit 100. The configuration of the communication system 1 is not limited to the configuration illustrated in <figref idref="f0001">Fig. 1</figref>. <figref idref="f0012">Fig. 13</figref> is a diagram illustrating a modification example of the communication system. In embodiment 1, the relay device is assumed to be a repeater unit 200 that constitutes one controller 10 together with the CPU unit 100 that is a control device. It is not necessary for the relay device to constitute the controller 10, and the relay device may be, for example, a relay device 200a such as a router, as illustrated in <figref idref="f0012">Fig. 13</figref>. A controller 10a in <figref idref="f0012">Fig. 13</figref> has a configuration in which the repeater unit 200 is not included.</p>
<p id="p0179" num="0179">Further, a controller including a CPU that constitutes a function of the control device and a CPU that constitutes a function of the relay device may constitute the communication system. Further, a multi-core CPU including a processor core that constitutes the function of the control device and a processor core that constitutes the function of the relay device may be mounted in the controller to constitute the communication system.<!-- EPO <DP n="35"> --></p>
<heading id="h0026">(Modification example 2)</heading>
<p id="p0180" num="0180">In embodiment 1, the communication system 1 includes the HMI 20, but may not include the HMI. For example, although an execution condition for the communication settings is fulfilled on the basis of a signal output from the HMI 20, an input unit may be provided in the CPU unit 100 and the execution condition may be fulfilled on the basis of an investigation received by the input unit. Further, the execution condition for the communication settings may be fulfilled on the basis of the state of the controller 10 or a signal output from the field network regardless of an operation of the user. When the communication settings is changed, there is concern that communication is interrupted which has a great influence on the manufacturing site 2 and, thus, the execution condition for the communication settings may be fulfilled according to the operation of the user.</p>
<heading id="h0027">(Modification example 3)</heading>
<p id="p0181" num="0181">In embodiment 1, the CPU unit 100 includes the conversion information 582 according to the model and the instruction of the repeater unit 200. Instructions may be prepared for each model of the repeater unit 200 without the conversion information 582. In this case, a user program including the instructions according to the repeater unit 200 connected to the CPU unit 100 may be installed in the CPU unit 100 from the support device 30, or the user program may be prepared for each model of the repeater unit 200, all the user programs may be installed in the CPU unit 100, and the user program may be executed depending on the type of connected repeater unit 200.</p>
<p id="p0182" num="0182">Further, the CPU unit 100 acquires the model of the repeater unit 200, the device information 260 of the repeater unit 200 and specifies the conversion information 582 on the basis of the device information 260, but the user may be caused to perform designation of the model of the repeater unit 200. For example, the HMI 20 may be caused to display a screen for requesting specifying of the model, and the conversion information 582 may be specified on the basis of an input to the HMI 20.<!-- EPO <DP n="36"> --></p>
<heading id="h0028">[Embodiment 2]</heading>
<p id="p0183" num="0183">In embodiment 1, the relay device is a device that mediates communication between a network of the remote site 4 and the CPU unit 100. The relay device may be a switch that mediates each controller in the manufacturing site 2 and a controller that generally manages those controllers. <figref idref="f0013">Fig. 14</figref> is a diagram illustrating a schematic configuration of a control device of embodiment 2.</p>
<p id="p0184" num="0184">A communication system 1a includes a relay device 200b that is an Ethernet switch, a host controller 100b that manages one or a plurality of lines of the manufacturing site 2, and devices 41a to 41c that are controllers that manage one manufacturing line that is connected to the host controller 100b via the relay device 200b. The host controller 100b is an example of the control device of the present invention. The devices 41a to 41c are examples of devices connected to the control device via the relay device. The relay device 200b is an example of the relay device of the present invention.</p>
<p id="p0185" num="0185">The relay device 200b includes a plurality of ports 210a to 210d. The number of ports included in the relay device 200b is not limited to four, and may be equal to or smaller than three or may be equal to or greater than five.</p>
<p id="p0186" num="0186">The host controller 100b is connected to the port 210a. A device 41a which is a controller that manages a line for product A is connected to the port 210b. A field device group 40a necessary for manufacture of product A is connected to the device 41a. A device 41b which is a controller for managing a line for product B is connected to the port 210c. A field device group 40b necessary for manufacture of product B is connected to the device 41b. A device 41c which is a controller for managing a line for product C is connected to a port 210d. A field device group 40c necessary for manufacture of product C is connected to the device 41c.</p>
<p id="p0187" num="0187">The host controller 100b (1) disconnects communication with one or a plurality of selected devices (link off), (2) connects communication with the one or a plurality of selected devices (link on), and (3) stores a user program 1066a having a configuration in which three<!-- EPO <DP n="37"> --> instructions to confirm a connected communication are combined in the storage 106. Further, the storage 106 stores recipes 1068a to 1068c including a condition for operating the field device group for each of the field device groups 40a to 40c. The recipe is data including conditions such as a production procedure, a production variety, and parameters suitable for production. That is, the recipe 1068a includes a condition for operating the field device group 40a, and the condition includes a condition of a production procedure for manufacturing product A, a production variety, parameters suitable for production, or the like.</p>
<p id="p0188" num="0188">A user program 1066b is created by using, for example, the support device 30, and is installed in the host controller 100b from the support device 30. Further, the recipes 1068a to 1068c may be installed from the support device 30 or may be installed in the host controller 100b in a state of being stored in a storage medium such as a memory card.</p>
<p id="p0189" num="0189">The host controller 100b includes a communication setting unit 160b as in embodiment 1. The communication setting unit 160b performs exchange of a command with the relay device 200b when executing each instruction included in the user program 1066b.</p>
<p id="p0190" num="0190">The user program 1066b is programmed to be executed in order of instruction of (1) → update of recipe → instruction of (2) → instruction of (3). Here, the recipe is data including conditions such as a production procedure, a production variety, and parameters suitable for production.</p>
<p id="p0191" num="0191">That is, when an execution condition for the user program 1066b is fulfilled, the host controller 100b exchanges data with the relay device 200b to disconnect the communication with the port 210b, and then switches the recipe from a recipe for product A to a recipe for product C. After switching the recipe, the host controller 100b exchanges data with the relay device 200b to newly establish communication with the port 210d. The host controller 100b performs a test of whether or not communication with device C has been established, and regards the process as having been normally completed when the establishment of the communication is confirmed.</p>
<p id="p0192" num="0192"><!-- EPO <DP n="38"> --> Thus, it is possible to easily perform the setup change by using the relay device 200b having a communication switching function and connecting the device to each port in advance. Further, connecting the device to the relay device 200b in advance makes it unnecessary to set or eliminate lines connecting devices at the time of setup change, and it is possible to prevent the connection lines from deteriorating and to prevent a wrong connection from occurring.</p>
<heading id="h0029">§3 Appendix</heading>
<p id="p0193" num="0193">As described above, the first and second embodiments and modification examples include the following disclosures.</p>
<heading id="h0030">&lt;Configuration 1&gt;</heading>
<p id="p0194" num="0194">A control device (100, 100A, 100a, 100b) capable of communication with other devices (4a, 41A, 41B, 41C, 41a, 41b, 41c) via a relay device (200, 200A, 200a, 200b), the control device including:
<ul id="ul0003" list-style="none" compact="compact">
<li>a storage unit (106, 106A) configured to store a user program (1066, 1066A, 1066a) including at least one instruction (FB1, FB2, FB3) for performing communication settings regarding communication via the relay device; and</li>
<li>a communication setting unit (160, 160A, 160b) configured to perform transmission or reception of a command to or from the relay device on the basis of fulfillment of an execution condition for the instruction and perform the communication settings indicated by the instruction.</li>
</ul></p>
<heading id="h0031">&lt;Configuration 2&gt;</heading>
<p id="p0195" num="0195">The control device according to configuration 1,
<ul id="ul0004" list-style="none" compact="compact">
<li>wherein a protocol for the transmission or reception of the command to or from the relay device differs depending on a type of the relay device, and</li>
<li>the communication setting unit performs the transmission or reception of the command to or from the relay device according to the protocol corresponding to the type of the relay device.</li>
</ul></p>
<heading id="h0032">&lt;Configuration 3&gt;</heading><!-- EPO <DP n="39"> -->
<p id="p0196" num="0196">The control device according to configuration 2,
<ul id="ul0005" list-style="none" compact="compact">
<li>wherein the storage unit stores conversion information (582) including the protocol for each type of the relay device,</li>
<li>the control device further comprises</li>
<li>a conversion information specifying unit (180) configured to determine the type of the relay device on the basis of device information (260) included in the relay device and specify the conversion information on the basis of the type of the relay device, and</li>
<li>the communication setting unit performs the transmission or reception of the command to or from the relay device on the basis of the conversion information specified by the conversion information.</li>
</ul></p>
<heading id="h0033">&lt;Configuration 4&gt;</heading>
<p id="p0197" num="0197">The control device according to configuration 3,
<ul id="ul0006" list-style="none" compact="compact">
<li>wherein the conversion information is stored in the storage unit for each piece of content of the instruction,</li>
<li>the conversion information specifying unit specifies the conversion information on the basis of an instruction for which an execution condition is fulfilled and the type of the relay device.</li>
</ul></p>
<heading id="h0034">&lt;Configuration 5&gt;</heading>
<p id="p0198" num="0198">The control device according to any one of configurations 1 to 4,
<ul id="ul0007" list-style="none" compact="compact">
<li>wherein the user program includes an instruction related to the communication settings and a preferential instruction having a higher priority than the instruction,</li>
<li>the control device further comprises a fixed-cycle task execution unit (140) configured to repeatedly execute the preferential instruction at a fixed cycle, and</li>
<li>the communication setting unit issues the instruction related to the communication settings so as not to interfere with execution of the preferential instruction.</li>
</ul></p>
<heading id="h0035">&lt;Configuration 6&gt;</heading>
<p id="p0199" num="0199">The control device according to any one of configurations 1 to 5,<!-- EPO <DP n="40"> -->
<ul id="ul0008" list-style="none" compact="compact">
<li>wherein the control device is communicatively connected to a first apparatus (41a) configured to manage a first field device group and a second apparatus (41c) configured to manage a second field device group via the relay device,</li>
<li>the storage unit stores a first recipe (1068a) including a condition for moving the first field device group and a second recipe (1068c) including a condition for moving the second field device group, and</li>
<li>the user program includes an instruction for switching of a device serving as a connection destination and an instruction to switch the recipe according to the switching.</li>
</ul></p>
<heading id="h0036">&lt;Configuration 7&gt;</heading>
<p id="p0200" num="0200">A support device for supporting development of a user program for a control device (100, 100A, 100a, 100b) capable of communication with other devices (4a, 40A, 40B, 40C, 41a, 41b, 41c) via a relay device (200, 200A, 200a, 200b), the support device including:
<ul id="ul0009" list-style="none" compact="compact">
<li>a storage unit (106, 106A) configured to store at least one instruction (FB1, FB2, FB3) for performing communication settings regarding communication via the relay device; and</li>
<li>a control unit (31) configured to combine the at least one instruction stored in the storage unit and generate the user program,</li>
<li>wherein the control unit creates the user program in a format enabling the control device to transmit or receive a command to or from the relay device at the time of execution of the instruction.</li>
</ul></p>
<heading id="h0037">&lt;Configuration 8&gt;</heading>
<p id="p0201" num="0201">A communication system including:
<ul id="ul0010" list-style="none" compact="compact">
<li>a relay device (200, 200A, 200a, 200b); and</li>
<li>a control device (100, 100A, 100a, 100b) capable of communicating with other devices via the relay device,</li>
<li>wherein the control device includes</li>
<li>a storage unit (106, 106A) configured to store a user program (1066, 1066A, 1066a) including at least one instruction (FB1, FB2, FB3) for performing communication settings regarding communication via the relay device; and<!-- EPO <DP n="41"> --></li>
<li>a communication setting unit (160, 160A, 160b) configured to perform transmission or reception of a command to or from the relay device on the basis of fulfillment of an execution condition for the instruction and perform the communication settings indicated by the instruction.</li>
</ul></p>
<p id="p0202" num="0202">It should be considered that the embodiments disclosed this time are exemplary in all respects and not restrictive. The scope of the present invention is indicated by the claims, not the description, and is intended to include all changes within the meaning and scope equivalent to the claims. Further, the inventions described in the embodiments and the respective modification examples are intended to be implemented alone or in combination as much as possible.</p>
<heading id="h0038">[Reference Signs List]</heading>
<p id="p0203" num="0203">
<ul id="ul0011" list-style="none" compact="compact">
<li>1, 1a Communication system</li>
<li>2 Manufacturing site</li>
<li>4 Remote site</li>
<li>4a Computer</li>
<li>4b Repeater</li>
<li>10, 10a Controller</li>
<li>30, 30A Support device</li>
<li>31, 102 Processor</li>
<li>32, 104 Main memory</li>
<li>33 Input unit</li>
<li>34 Output unit</li>
<li>35, 106 Storage</li>
<li>36 Optical drive</li>
<li>36a Recording medium</li>
<li>38,120 Processor bus</li>
<li>40, 40a, 40b, 40c Field device group</li>
<li>41A, 41B, 41C, 41 Device</li>
<li>41a, 41b, 41c, C Device<!-- EPO <DP n="42"> --></li>
<li>42 Relay group</li>
<li>45 Servo driver</li>
<li>46 Servo motor</li>
<li>100 CPU unit</li>
<li>100b Host controller</li>
<li>100A Control device</li>
<li>106A Storage unit</li>
<li>108 Information network controller</li>
<li>110 Control network controller</li>
<li>112 Unit bus controller</li>
<li>114 Local bus controller</li>
<li>118 Memory card interface</li>
<li>118a Memory card</li>
<li>140 Fixed-cycle task execution unit</li>
<li>142 Preferential process</li>
<li>144 I/O refresh process</li>
<li>160, 160A, 160b Communication setting unit</li>
<li>180 Conversion information specifying unit</li>
<li>182 Conversion information group</li>
<li>200, 200A, 200b Relay device</li>
<li>210a, 210b, 210c, 210d Port</li>
<li>220 Setting information storage unit</li>
<li>222 Setting information</li>
<li>240 Setting information updating unit</li>
<li>260 Device information</li>
<li>300 Power supply unit</li>
<li>354 Support program</li>
<li>356 FB Library</li>
<li>358 Command library</li>
<li>400 Function block<!-- EPO <DP n="43"> --></li>
<li>541 Editor</li>
<li>542 Compiler</li>
<li>543 Debugger</li>
<li>544 GUI module</li>
<li>545 Simulator</li>
<li>550 Data storage</li>
<li>580, 580A, 580B Command group</li>
<li>582 Conversion information</li>
<li>642 Scheduler program</li>
<li>644 Sequence instruction program</li>
<li>646 Input and output processing program</li>
<li>648 Access Processing program</li>
<li>1064 System program</li>
<li>1066, 1066A, 1066a, 1066b User program</li>
<li>1068a, 1068b, 1068c Recipe</li>
</ul></p>
</description>
<claims id="claims01" lang="en"><!-- EPO <DP n="44"> -->
<claim id="c-en-0001" num="0001">
<claim-text>A control device capable of communication with other devices via a relay device, the control device comprising:
<claim-text>a storage unit configured to store a user program including at least one instruction for performing communication settings regarding communication via the relay device; and</claim-text>
<claim-text>a communication setting unit configured to perform transmission or reception of a command to or from the relay device based on fulfillment of an execution condition for the instruction and perform the communication settings indicated by the instruction.</claim-text></claim-text></claim>
<claim id="c-en-0002" num="0002">
<claim-text>The control device according to claim 1,
<claim-text>wherein a protocol for the transmission or reception of the command to or from the relay device differs depending on a type of the relay device, and</claim-text>
<claim-text>the communication setting unit performs the transmission or reception of the command to or from the relay device according to the protocol corresponding to the type of the relay device.</claim-text></claim-text></claim>
<claim id="c-en-0003" num="0003">
<claim-text>The control device according to claim 2,
<claim-text>wherein the storage unit stores conversion information including the protocol for each type of the relay device,</claim-text>
<claim-text>the control device further comprises a conversion information specifying unit configured to determine the type of the relay device based on device information included in the relay device and specify the conversion information based on the type of the relay device, and</claim-text>
<claim-text>the communication setting unit performs the transmission or reception of the command to or from the relay device based on the conversion information specified by the conversion information.</claim-text></claim-text></claim>
<claim id="c-en-0004" num="0004">
<claim-text>The control device according to claim 3,
<claim-text>wherein the conversion information is stored in the storage unit for each piece of content of the instruction, and</claim-text>
<claim-text>the conversion information specifying unit specifies the conversion information based on an instruction for which an execution condition is fulfilled and the type of the relay device.</claim-text></claim-text></claim>
<claim id="c-en-0005" num="0005">
<claim-text>The control device according to any one of claims 1 to 4,
<claim-text>wherein the user program includes an instruction related to the communication settings<!-- EPO <DP n="45"> --> and a preferential instruction having a higher priority than the instruction,</claim-text>
<claim-text>the control device further comprises a fixed-cycle task execution unit configured to repeatedly execute the preferential instruction at a fixed cycle, and</claim-text>
<claim-text>the communication setting unit issues the instruction related to the communication settings so as not to interfere with execution of the preferential instruction.</claim-text></claim-text></claim>
<claim id="c-en-0006" num="0006">
<claim-text>The control device according to any one of claims 1 to 5,
<claim-text>wherein the control device is communicatively connected to a first apparatus configured to manage a first field device group and a second apparatus configured to manage a second field device group via the relay device,</claim-text>
<claim-text>the storage unit stores a first recipe including a condition for moving the first field device group and a second recipe including a condition for moving the second field device group, and</claim-text>
<claim-text>the user program includes an instruction for switching of a device serving as a connection destination and an instruction to switch the recipe according to the switching.</claim-text></claim-text></claim>
<claim id="c-en-0007" num="0007">
<claim-text>A support device for supporting development of a user program for a control device capable of communication with other devices via a relay device, the support device comprising:
<claim-text>a storage unit configured to store at least one instruction for performing communication settings regarding communication via the relay device; and</claim-text>
<claim-text>a control unit configured to combine the at least one instruction stored in the storage unit and generate the user program,</claim-text>
<claim-text>wherein the control unit creates the user program in a format enabling the control device to transmit or receive a command to or from the relay device at a time of execution of the instruction.</claim-text></claim-text></claim>
<claim id="c-en-0008" num="0008">
<claim-text>A communication system comprising:
<claim-text>a relay device; and</claim-text>
<claim-text>a control device capable of communicating with other devices via the relay device,</claim-text>
<claim-text>wherein the control device includes</claim-text>
<claim-text>a storage unit configured to store a user program including at least one instruction for performing communication settings regarding communication via the relay device; and</claim-text>
<claim-text>a communication setting unit configured to perform transmission or reception of a<!-- EPO <DP n="46"> --> command to or from the relay device based on fulfillment of an execution condition for the instruction and perform the communication settings indicated by the instruction.</claim-text></claim-text></claim>
</claims>
<drawings id="draw" lang="en"><!-- EPO <DP n="47"> -->
<figure id="f0001" num="1"><img id="if0001" file="imgf0001.tif" wi="142" he="233" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="48"> -->
<figure id="f0002" num="2"><img id="if0002" file="imgf0002.tif" wi="156" he="230" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="49"> -->
<figure id="f0003" num="3"><img id="if0003" file="imgf0003.tif" wi="165" he="211" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="50"> -->
<figure id="f0004" num="4,5"><img id="if0004" file="imgf0004.tif" wi="146" he="233" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="51"> -->
<figure id="f0005" num="6"><img id="if0005" file="imgf0005.tif" wi="149" he="179" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="52"> -->
<figure id="f0006" num="7"><img id="if0006" file="imgf0006.tif" wi="160" he="218" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="53"> -->
<figure id="f0007" num="8"><img id="if0007" file="imgf0007.tif" wi="149" he="233" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="54"> -->
<figure id="f0008" num="9"><img id="if0008" file="imgf0008.tif" wi="155" he="230" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="55"> -->
<figure id="f0009" num="10"><img id="if0009" file="imgf0009.tif" wi="129" he="233" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="56"> -->
<figure id="f0010" num="11"><img id="if0010" file="imgf0010.tif" wi="151" he="226" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="57"> -->
<figure id="f0011" num="12"><img id="if0011" file="imgf0011.tif" wi="141" he="233" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="58"> -->
<figure id="f0012" num="13"><img id="if0012" file="imgf0012.tif" wi="122" he="223" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="59"> -->
<figure id="f0013" num="14"><img id="if0013" file="imgf0013.tif" wi="139" he="233" img-content="drawing" img-format="tif"/></figure>
</drawings>
<search-report-data id="srep" lang="en" srep-office="EP" date-produced=""><doc-page id="srep0001" file="srep0001.tif" wi="159" he="233" type="tif"/><doc-page id="srep0002" file="srep0002.tif" wi="159" he="233" type="tif"/></search-report-data>
<ep-reference-list id="ref-list">
<heading id="ref-h0001"><b>REFERENCES CITED IN THE DESCRIPTION</b></heading>
<p id="ref-p0001" num=""><i>This list of references cited by the applicant is for the reader's convenience only. It does not form part of the European patent document. Even though great care has been taken in compiling the references, errors or omissions cannot be excluded and the EPO disclaims all liability in this regard.</i></p>
<heading id="ref-h0002"><b>Patent documents cited in the description</b></heading>
<p id="ref-p0002" num="">
<ul id="ref-ul0001" list-style="bullet">
<li><patcit id="ref-pcit0001" dnum="JP6407494B"><document-id><country>JP</country><doc-number>6407494</doc-number><kind>B</kind></document-id></patcit><crossref idref="pcit0001">[0003]</crossref></li>
<li><patcit id="ref-pcit0002" dnum="WO2016157477A"><document-id><country>WO</country><doc-number>2016157477</doc-number><kind>A</kind></document-id></patcit><crossref idref="pcit0002">[0004]</crossref><crossref idref="pcit0004">[0005]</crossref></li>
<li><patcit id="ref-pcit0003" dnum="JP64074494B"><document-id><country>JP</country><doc-number>64074494</doc-number><kind>B</kind></document-id></patcit><crossref idref="pcit0003">[0005]</crossref></li>
</ul></p>
</ep-reference-list>
</ep-patent-document>
