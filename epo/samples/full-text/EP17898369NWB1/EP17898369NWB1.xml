<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE ep-patent-document PUBLIC "-//EPO//EP PATENT DOCUMENT 1.5.1//EN" "ep-patent-document-v1-5-1.dtd">
<!-- This XML data has been generated under the supervision of the European Patent Office -->
<ep-patent-document id="EP17898369B1" file="EP17898369NWB1.xml" lang="en" country="EP" doc-number="3590042" kind="B1" date-publ="20211006" status="n" dtd-version="ep-patent-document-v1-5-1">
<SDOBI lang="en"><B000><eptags><B001EP>ATBECHDEDKESFRGBGRITLILUNLSEMCPTIESILTLVFIROMKCYALTRBGCZEEHUPLSK..HRIS..MTNORS..SM..................</B001EP><B003EP>*</B003EP><B005EP>J</B005EP><B007EP>BDM Ver 2.0.12 (4th of August) -  2100000/0</B007EP></eptags></B000><B100><B110>3590042</B110><B120><B121>EUROPEAN PATENT SPECIFICATION</B121></B120><B130>B1</B130><B140><date>20211006</date></B140><B190>EP</B190></B100><B200><B210>17898369.8</B210><B220><date>20170301</date></B220><B240><B241><date>20191001</date></B241></B240><B250>en</B250><B251EP>en</B251EP><B260>en</B260></B200><B400><B405><date>20211006</date><bnum>202140</bnum></B405><B430><date>20200108</date><bnum>202002</bnum></B430><B450><date>20211006</date><bnum>202140</bnum></B450><B452EP><date>20210528</date></B452EP></B400><B500><B510EP><classification-ipcr sequence="1"><text>G06F  11/34        20060101AFI20200302BHEP        </text></classification-ipcr><classification-ipcr sequence="2"><text>G06F  11/30        20060101ALI20200302BHEP        </text></classification-ipcr><classification-ipcr sequence="3"><text>G06F  11/07        20060101ALI20200302BHEP        </text></classification-ipcr><classification-ipcr sequence="4"><text>H04L  12/26        20060101ALI20200302BHEP        </text></classification-ipcr><classification-ipcr sequence="5"><text>H04L  12/24        20060101ALI20200302BHEP        </text></classification-ipcr></B510EP><B520EP><classifications-cpc><classification-cpc sequence="1"><text>G06F  11/0751      20130101 LA20190607BHEP        </text></classification-cpc><classification-cpc sequence="2"><text>G06F2201/81        20130101 LA20190607BHEP        </text></classification-cpc><classification-cpc sequence="3"><text>H04L  41/145       20130101 LA20200225BHEP        </text></classification-cpc><classification-cpc sequence="4"><text>H04L  41/0622      20130101 LA20200225BHEP        </text></classification-cpc><classification-cpc sequence="5"><text>G06F  11/3452      20130101 LI20190607BHEP        </text></classification-cpc><classification-cpc sequence="6"><text>H04L  43/067       20130101 LA20200224BHEP        </text></classification-cpc><classification-cpc sequence="7"><text>G06F  11/3447      20130101 FI20190517BHEP        </text></classification-cpc><classification-cpc sequence="8"><text>H04L  41/142       20130101 LI20200225BHEP        </text></classification-cpc><classification-cpc sequence="9"><text>H04L  41/147       20130101 LA20200225BHEP        </text></classification-cpc></classifications-cpc></B520EP><B540><B541>de</B541><B542>PRÄDIKTIVER ANOMALIEDETEKTIONSRAHMEN</B542><B541>en</B541><B542>PREDICTIVE ANOMALY DETECTION FRAMEWORK</B542><B541>fr</B541><B542>CADRE DE DÉTECTION D'ANOMALIE PRÉDICTIVE</B542></B540><B560><B561><text>US-A1- 2010 027 432</text></B561><B561><text>US-A1- 2011 119 100</text></B561><B561><text>US-A1- 2014 006 330</text></B561><B561><text>US-A1- 2015 381 648</text></B561><B561><text>US-A1- 2016 088 006</text></B561><B561><text>US-A1- 2016 285 700</text></B561><B561><text>US-B1- 7 310 590</text></B561><B561><text>US-B1- 7 310 590</text></B561><B565EP><date>20200306</date></B565EP></B560></B500><B700><B720><B721><snm>CHANDA, Raghuveer</snm><adr><str>A 109 Sparkling Nest Apartment
Sparkling Nest Road
Garudachar Palya
Mahadevapura</str><city>Bengaluru
Karnataka 560048</city><ctry>IN</ctry></adr></B721><B721><snm>OJHA, Himanshu</snm><adr><str>MM D1 520 K/277
LDA Colony
Kanpur Road</str><city>Lucknow
Uttar Pradesh 226012</city><ctry>IN</ctry></adr></B721><B721><snm>SHAKIR, Abdul Hadi</snm><adr><str>Flat 4
Vidya Heritage Plaza
Doddanekundi</str><city>Bangalore
Karnataka 560037</city><ctry>IN</ctry></adr></B721><B721><snm>PRABANANTHAM, Subash</snm><adr><str>Building No: 45
Flat: 215
AECS Layout A Block
7th cross
AECS Layout Main Road
Kundalahalli</str><city>Bengaluru
Karnataka 560037</city><ctry>IN</ctry></adr></B721><B721><snm>VALAMJEE, Vipul</snm><adr><str>3J56
Kristal Agate and Jasper
Central Jail Road
Kasavanahalli</str><city>Bengaluru
Karnataka 560035</city><ctry>IN</ctry></adr></B721></B720><B730><B731><snm>Visa International Service Association</snm><iid>101304151</iid><irf>E2738.500(F).EP</irf><adr><str>P.O. Box 8999</str><city>San Francisco, California 94128</city><ctry>US</ctry></adr></B731></B730><B740><B741><snm>EIP</snm><iid>101401446</iid><adr><str>Fairfax House 
15 Fulwood Place</str><city>London WC1V 6HU</city><ctry>GB</ctry></adr></B741></B740></B700><B800><B840><ctry>AL</ctry><ctry>AT</ctry><ctry>BE</ctry><ctry>BG</ctry><ctry>CH</ctry><ctry>CY</ctry><ctry>CZ</ctry><ctry>DE</ctry><ctry>DK</ctry><ctry>EE</ctry><ctry>ES</ctry><ctry>FI</ctry><ctry>FR</ctry><ctry>GB</ctry><ctry>GR</ctry><ctry>HR</ctry><ctry>HU</ctry><ctry>IE</ctry><ctry>IS</ctry><ctry>IT</ctry><ctry>LI</ctry><ctry>LT</ctry><ctry>LU</ctry><ctry>LV</ctry><ctry>MC</ctry><ctry>MK</ctry><ctry>MT</ctry><ctry>NL</ctry><ctry>NO</ctry><ctry>PL</ctry><ctry>PT</ctry><ctry>RO</ctry><ctry>RS</ctry><ctry>SE</ctry><ctry>SI</ctry><ctry>SK</ctry><ctry>SM</ctry><ctry>TR</ctry></B840><B860><B861><dnum><anum>US2017020246</anum></dnum><date>20170301</date></B861><B862>en</B862></B860><B870><B871><dnum><pnum>WO2018160177</pnum></dnum><date>20180907</date><bnum>201836</bnum></B871></B870></B800></SDOBI>
<description id="desc" lang="en"><!-- EPO <DP n="1"> -->
<heading id="h0001"><b>BACKGROUND</b></heading>
<p id="p0001" num="0001">When a large amount of data that is gathered from multiple heterogeneous data sources is exposed to a sizable number of extract, load, transform (ETL) processes, there may be an increase in the probability of anomalies (i.e., errors) appearing in the data. To safeguard the data's integrity, it may be desirable to detect such anomalies in the data and take actions to address the detected anomalies. In many cases, data may be received in the form of a time series, where discrete data values are periodically received over time. In such cases, when a data value that deviates significantly from past data values (e.g., the data value is many times greater than past data values) is received, the deviation may either be (1) due to one or more problems that needs to be addressed (e.g., a database failure) or (2) due to one or more internal/external factors that do not need to be addressed (e.g., a holiday event causing increased/decreased usage of transportation or electronic resources). However, it may be time consuming and/or resource intensive to determine whether the former case is true or the latter case is true.</p>
<p id="p0002" num="0002">For instance, a monitoring service for a popular website may receive a total number of visits per hour every hour from servers stationed at geographically dispersed co-locations. If one of the co-locations happens to report an hourly visit total that is many times smaller than previously reported totals, it may be difficult to tell whether the low visitor count is due to a server malfunction or an external event (e.g., a natural disaster) without performing a detailed investigation.</p>
<p id="p0003" num="0003">Embodiments of the present invention address these problems and other problems individually and collectively.</p>
<p id="p0004" num="0004"><patcit id="pcit0001" dnum="US7310590B"><text>US 7,310,590</text></patcit> describes a method for detecting an anomaly in which application data is examined in time series to identify anomalies. Data points are predicted using multiple statistical model functions. The set of functions for predicting values can include different types of functions, the same function type configured with different constants, or a<!-- EPO <DP n="2"> --> combination of these. An anomaly occurs when an actual data point in the series differs significantly from the data point's expected value as generated by the functions. If enough functions detect an anomaly has occurred for a data point, an anomaly event is generated. In some embodiments, if an actual data point value is not within a threshold of the predicted data point value, a vote is cast towards an anomaly on behalf of the function. If enough votes are cast for a data point, the data point is identified as an anomaly.</p>
<p id="p0005" num="0005"><patcit id="pcit0002" dnum="US20110119100A"><text>US 2011/0119100</text></patcit> describes an analytics system for analysing website usage. The system is configured to identify events of potential interest in web analytics data by applying one or more statistical models to a time series. The model predicts one or more values for a future time period and the compares the predicted value with an actual value when available. If the difference between the actual and predicted values meets a predefined condition an event of potential interest is identified for the corresponding time period.</p>
<p id="p0006" num="0006"><patcit id="pcit0003" dnum="US20100027432A"><text>US 2010/0027432</text></patcit> describes a system for detecting anomalies in network traffic. The system forecasts a value for network traffic based on a Holt-Winters model that exhibits dual seasonality, such as daily and weekly seasonality. If a network traffic value falls outside of a forecast range, the system updates an outlier count. If the outlier count exceeds a threshold, the system identifies an anomaly.</p>
<heading id="h0002"><b>BRIEF SUMMARY</b></heading>
<p id="p0007" num="0007">Embodiments of the invention are directed to data monitoring. More specifically, embodiments of the invention are directed to techniques for detecting anomalous values in data streams using forecasting models.</p>
<p id="p0008" num="0008">For example, an organization can run a server computer that provides a service (i.e., a monitoring service). The monitoring service can periodically receive, as input, data values from a data stream. The data stream can comprise data values that are periodically provided by one or more client computers configured to be monitored by the monitoring service. Alternatively, the data stream can comprise data values that are being extracted and/or loaded from one or more data stores, data archives, and/or data files.<!-- EPO <DP n="3"> --></p>
<p id="p0009" num="0009">The data values correspond to one or more metrics that represent the client computers' operational status (e.g., the number of visits to a webpage per hour, the average hard drive temperature over time, the amount of bandwidth usage over time, and the number of people entering a building per day as measured by an electronic turnstile). As more data values are received over time, the monitoring service can expect newer data values of the data stream to follow one or more patterns, which may include trend patterns, seasonal patterns, and cyclical patterns.</p>
<p id="p0010" num="0010">However, if the latest new data value deviates significantly from historical data values, the server computer can use predictive modeling to determine whether the latest data value is (1) is likely to be anomalous (i.e., erroneous) and warrants further investigation or (2) is not likely to be anomalous but rather (a) is due to a new pattern that the server computer needs to adjust to or (b) is caused by one or more external events that are outside of the organization's control.</p>
<p id="p0011" num="0011">To differentiate anomalous data values from non-anomalous ones in a data stream, when the server computer receives a new data value of the data stream, a server computer can select one or more models with periodicities that match the time interval that the new data value corresponds to. Upon selecting the models, the server computer can generate a score for each of the selected models. To generate a score for a model, the the model can use historical data values of the data stream that match the model's periodicity (i.e., the model's sampling frequency) to generate a prediction value based on the matching historical data values. Upon determining the prediction value, the server computer can generate a score for the model based on the prediction value and the new data value.</p>
<p id="p0012" num="0012">Upon generating a score for each of the models, the server computer can generate a final score based on the scores. The server computer can determine a score threshold, e.g., based on the variance of the historical data values. Upon obtaining the final score and the score threshold, the server computer can determine whether the final score exceeds the score threshold. If the final score exceeds the score threshold, the new data value may likely be an anomaly that warrants further investigation. For an anomaly, the server computer may<!-- EPO <DP n="4"> --> cause an alert to be generated and sent to the appropriate personnel, the alert indicating that the new data value is likely to be anomalous. If the final score does not exceed the score threshold, then the new data value is not likely to be anomalous.</p>
<p id="p0013" num="0013">In some cases, the server computer may be able to capture, from one or more determined anomalies, a new pattern that is being followed by the data values of the data stream. In this regard, the server computer may create a new special model based on the new pattern and add the new model to the set of models available for generating predictions.</p>
<p id="p0014" num="0014">The present invention is defined in the appended independent claims to which reference should be made. Further features are set out in the dependent claims.</p>
<p id="p0015" num="0015">These and other embodiments of the invention are described in detail below. For example, embodiments are directed to systems and computer readable media associated with methods described herein.</p>
<heading id="h0003"><b>BRIEF DESCRIPTION OF THE DRAWINGS</b></heading>
<p id="p0016" num="0016">
<ul id="ul0001" list-style="none">
<li><figref idref="f0001">FIG. 1</figref> illustrates a high-level block diagram of an environment in accordance with embodiments.</li>
<li><figref idref="f0002">FIG. 2</figref> illustrates a block diagram of an anomaly detection system in accordance with embodiments.</li>
<li><figref idref="f0003">FIG. 3</figref> illustrates a block diagram of a prediction module in accordance with embodiments.</li>
<li><figref idref="f0004">FIG. 4</figref> illustrates a block diagram of a threshold calculation module in accordance with embodiments.</li>
<li><figref idref="f0005">FIG. 5</figref> illustrates a block diagram of a scoring module in accordance with embodiments.<!-- EPO <DP n="5"> --></li>
<li><figref idref="f0006">FIG. 6</figref> illustrates a block diagram of an anomaly detection module in accordance with embodiments.</li>
<li><figref idref="f0007">FIG. 7</figref> illustrates a flowchart showing operations for detecting anomalies in a data stream in accordance with embodiments.</li>
</ul></p>
<heading id="h0004"><b>TERMS</b></heading>
<p id="p0017" num="0017">Prior to discussing embodiments of the invention, a further description of some terms may be helpful in understanding embodiments of the invention.</p>
<p id="p0018" num="0018">A "server computer" may include any suitable computer that can provide communications to other computers and receive communications from other computers. A server computer may include a computer or cluster of computers. For instance, a server computer can be a mainframe, a minicomputer cluster, or a group of servers functioning as a unit. In one example, a server computer may be a database server coupled to a Web server. A server computer may be coupled to a database and may include any hardware, software, other logic, or combination of the preceding for servicing the requests from one or more client computers. A server computer may comprise one or more computational apparatuses and may use any of a variety of computing structures, arrangements, and compilations for servicing the requests from one or more client computers. Data transfer and other communications between components such as computers may occur via any suitable wired or wireless network, such as the Internet or private networks.</p>
<p id="p0019" num="0019">A "processor" may include hardware within a server computer (or other computing device) that carries out instructions embodied as code in a computer-readable medium. An exemplary processor may be a central processing unit (CPU). As used herein, a processor can include a single-core processor, a plurality of single-core processors, a multi-core processor, a plurality of multi-core processors, or any other suitable combination of hardware configured to perform arithmetical, logical, and/or input/output operations of a computing device.<!-- EPO <DP n="6"> --></p>
<heading id="h0005"><b>DETAILED DESCRIPTION</b></heading>
<p id="p0020" num="0020">, Embodiments can detect anomalous values in data streams using forecasting models. For example, an organization can run an anomaly detection framework that provides a service (i.e., a monitoring service). The monitoring service can periodically receive, as input, data values from a data stream. The data stream can comprise data values that are periodically provided by one or more client computers configured to be monitored by the monitoring service. Alternatively, the data stream can comprise data values that are being extracted and/or loaded from one or more data stores, data archives, and/or data files.</p>
<p id="p0021" num="0021">In some cases, the data values can correspond to one or more metrics that represent the client computers' operational status (e.g., the number of visits to a webpage per hour, the average hard drive temperature over time, the amount of bandwidth usage over time, the number of people entering a building per day, and the number of conversions per hour). As more data values are received over time, the monitoring service can expect newer data values of the data stream to follow one or more patterns, which may include trend patterns, seasonal patterns, and cyclical patterns. For instance, a first data stream that tracks a total number of visits to a website per day may provide data values that closely adhere to a positive linear trend because the website is growing in popularity at a consistent rate. A second data stream that tracks a total of visits at the same website per hour may provide data values that follow a path that has both a linear trend component and a seasonal component because the hourly visit totals decrease during night time hours but rebound during day time hours. A third data stream that tracks a total number of people entering a building between the hours of 12 AM and 4 AM each day, may provide data values that remain more or less constant over time because the number of people entering the building during these hours is generally zero.</p>
<p id="p0022" num="0022">However, if the latest new data value deviates significantly from historical data values, the detection framework can use predictive modeling to determine whether the latest data value is (1) is likely to be anomalous (i.e., erroneous) and warrants further investigation or (2) is not likely to be anomalous but rather (a) is due to a new pattern that the detection framework needs to adjust to or (b) is caused by one or more external events that are outside<!-- EPO <DP n="7"> --> of the organization's control. For example, if the first data stream provides a daily total of visits that is many times higher than normal, the detection framework may determine that because a new online feature is being rolled out by the website, the unexpectedly high visit count is not likely to be an anomaly that warrants investigation (e.g., a software failure). As another example, if the third data stream reports a non-zero number of people entering the building, the detection framework may determine that because nightly maintenance is occurring at the building, the unexpected non-zero number is not likely to be an anomaly that warrants investigation (e.g., a burglary).</p>
<p id="p0023" num="0023">To differentiate anomalous data values from non-anomalous ones in a data stream, when the detection framework receives a new data value of the data stream, the detection framework selects one or more models with periodicities that match the time interval that the new data value corresponds to. For example, if the sampling frequency is once per day (e.g., a daily total of visits) and the new data value corresponds to the first Monday of the month, the detection framework may select a weekly model that corresponds to the Monday of each week (i.e., the Monday model) and a monthly model that corresponds to the first Monday of each month (i.e., the first monthly Monday model). Additionally, if the new data value corresponds to a day that is associated with a special event (e.g., Christmas Day), the detection framework may further select a special model that corresponds to that event (e.g., the Christmas model).</p>
<p id="p0024" num="0024">Upon selecting the models, the detection framework generates a score for each of the selected models. To generate a score for a model, the detection framework feeds to the model one or more historical data values of the data stream that match the model's periodicity (i.e., the model's sampling frequency) and generates a prediction value based on the model and the matching historical data values. For example, the detection framework may feed all past Monday values to the Monday model and all past values that correspond to a first Monday of a month to the first monthly Monday model. The detection framework may then use the model to predict a next data value (i.e., a prediction value) based on the historical data values fed to the model. Upon determining the prediction value, the detection framework generates a score for the model based on the prediction value and the new data value. In<!-- EPO <DP n="8"> --> some embodiments, the score may be based on a difference between the prediction value and the new data value.</p>
<p id="p0025" num="0025">Upon generating a score for each of the models, the detection framework can generate a final score based on the scores. At some point, the detection framework can generate a score threshold based on the variance of the historical data values. Upon obtaining the final score and the score threshold, the detection framework determines whether the final score exceeds the score threshold. If the final score exceeds the score threshold, the new data value may likely be an anomaly that warrants further investigation. Hence, detection framework may cause an alert to be generated and sent to the appropriate personnel, the alert indicating that the new data value is likely to be anomalous. If the final score does not exceed the score threshold, then the new data value is not likely to be anomalous.</p>
<p id="p0026" num="0026">In some cases, the detection framework may be able to capture, from one or more determined anomalies, a new pattern that is being followed by the data values of the data stream. In this regard, the detection framework may create a new special model based on the new pattern and add the new model to the set of models available for generating predictions.</p>
<p id="p0027" num="0027">Hence, certain embodiments described here may enable the monitoring of a data streams that follow complicated and/or varying patterns rather than simple data streams that only change seasonally or linearly. In particular, the ability to select and combine models, where each model represents a different pattern being followed by the data stream, enables the detection framework to more accurately forecast new data values for data streams that are affected by complex combinations of different patterns. Additionally, the incorporation of internal event data and external event data into the detection framework's prediction modelling process further improves the detection framework's accuracy in a real world environment. Accordingly, the number of false positives produced by monitoring the data streams may be reduced.<!-- EPO <DP n="9"> --></p>
<p id="p0028" num="0028">Furthermore, certain embodiments may provide the ability to detect new patterns followed by the data stream or changes within the patterns followed by the data stream and incorporate new models into the system to account for the new patterns or the changed patterns. In doing so, such embodiments will be able to adapt to new patterns in a way that preserves it's accuracy despite circumstances that vary over time.</p>
<heading id="h0006"><b>I. SYSTEM FOR DETECTING ANOMALIES IN DATA STREAMS</b></heading>
<p id="p0029" num="0029">An exemplary system 100 for using predictive modeling to detect anomalies in data streams can be seen in <figref idref="f0001">FIG. 1</figref>. The system 100 includes a monitoring system 101, a communication network 120, and client computers 130-132. The monitoring system 101 includes a data stream interface 102, an anomaly detection server 104, an historical data store 106, an internal event data store 108, a reporting/command service 110, and a log 112. The monitoring system 101 may be operated by an organization (e.g., a company) for monitoring one or more data streams for anomalies, where the data streams are received from the client computers 130-132.</p>
<p id="p0030" num="0030"><figref idref="f0001">FIG. 1</figref> depicts the client computers 130-132 as being directly or indirectly monitored by the monitoring system 101, where the client computers 130-132 each periodically send new data values (i.e., new data values) to the monitoring system 101 via communication network 120. To provide the new data values to the monitoring system 101, each of the client computers 130-132 upload the new data values via the data stream interface 102. In turn, the data stream interface 102 may forward the data values in order of receipt to the anomaly detection server 104 as one or more data streams. Accordingly, each data stream may correspond to a time series, where each time series may follow one or more patterns including trend patterns, seasonal patterns, and/or cyclical patterns. In some embodiments, a data stream may be sourced from previously recorded data being extracted, loaded and/or transformed from one or more data stores, data archives, and/or data files.</p>
<p id="p0031" num="0031">Each time the anomaly detection server 104 receives a new data value from the data stream interface 102, the anomaly detection server 104 may determine whether the new data value is anomalous in view of existing patterns that are followed by the historical data values<!-- EPO <DP n="10"> --> of the data stream. If the anomaly detection server 104 determines that the new data value is anomalous, the anomaly detection server 104 may cause the reporting/command service 110 to generate and send out an alert.</p>
<p id="p0032" num="0032">The client computers 130-132 may correspond to server computers that are each communicatively coupled to the communication network 120 and are each configured to periodically transmit new data values to the monitoring system 101. In some embodiments, the client computers 130-132 may each be configured to format each new data value into a Hypertext Transfer Protocol (HTTP) request and transmit the HTTP requests to the monitoring system 101 over the communication network 120. The data values provided by the client computers 130-132 can be for various purposes and take various forms. In general, each value may represent a metric that is associated with a time interval that is unique within the data stream. For example, the data values provided by the client computers 130-132 may each correspond to a daily total of visits (e.g., electronic accesses by a user) for a particular day received by a particular client computer. Regardless of form, the client computers 130-132 may provide the new data values to the monitoring system 101 via the data stream interface 102 over the communication network 120.</p>
<p id="p0033" num="0033">The data stream interface 102 may correspond to one or more services, web interfaces, application programming interfaces (APIs), and/or other types of interfaces that can be accessed by client computers 130-132 to provide new data values over the communication network 120. In some embodiments, the data stream interface 102 may correspond to one or more Representational State Transfer (REST) APIs that can be invoked by the client computers 130-132 to upload the new data values to the monitoring system 101. The data stream interface 102 may be configured to periodically receive the new data values from the client computers 130-132 and forward each of the received data values to the anomaly detection server 104 as part of one or more data streams. In some embodiments, the data values received from all of the client computers 130-132 may be funneled into a single data stream. In other embodiments, a plurality of data streams may be provided by the data stream interface 102 to the anomaly detection server 104, where each of the plurality of<!-- EPO <DP n="11"> --> data streams includes data values from a different client computer or a different group of client computers.</p>
<p id="p0034" num="0034">The data stream interface 102 may forward, to the anomaly detection server 104, each received value in the order the data values were received. In some embodiments, the data stream interface 102 may be implemented by one or more processes executing on one or more server computers that are communicatively coupled to the communication network 120 and to the anomaly detection server 104. Although <figref idref="f0001">FIG. 1</figref> depicts the data stream interface 102 and the anomaly detection server 104 as separate components, this is not intended to be limiting. For instance, the data stream interface 102 may be incorporated into the anomaly detection server 104.</p>
<p id="p0035" num="0035">In some embodiments, data stream interface 102 may expose an input API and an output API that is accessible by clients (e.g., client computers 130-132) from across the communication network 120. A client may call the input API to submit a data stream for monitoring by the monitoring system 101. In particular, the input API may accept data values for the data stream and corresponding time intervals for each of the data values. The output API can accept, from a client, the number of future data values to predict for the data stream. For example, the client may use the output API to specify that the next three values of a data stream should be predicted.</p>
<p id="p0036" num="0036">The anomaly detection server 104 may be communicatively coupled to the data stream interface 102 so as to periodically receive values for one or more data streams. The anomaly detection server 104 may be configured to analyze each new data value received for each of the one or more data streams to determine whether the new data value is an anomaly using predictive modelling. In particular, when the anomaly detection server 104 receives, from the data stream interface 102, a new data value of a data stream that pertains to a particular time interval, the anomaly detection server 104 may feed historical data values of the data stream into one or more forecast models to generate one or more prediction values. The anomaly detection server 104 may then determine whether the new data value is an anomaly based on one or more comparisons between the new data value and the one or<!-- EPO <DP n="12"> --> more prediction values. In generating the one or more prediction values and making the one or more comparisons, the anomaly detection server 104 may take into account internal event data obtained from internal event data store 108, external event data obtained from sources external to the organization via communication network 120, and feedback data obtained from the log 112. For example, if a difference in a prediction value and a data value corresponds to a detected event, the difference may not be identified as an anomaly. Or equivalently, the prediction value can be adjusted based on the event. If the new data value is determined to be anomalous, the anomaly detection server 104 may cause the reporting/command service 110 to generate and send out an alert and/or a command.</p>
<p id="p0037" num="0037">The anomaly detection server 104 may be implemented by one or more processes that execute on one or more server computers. The hardware and software components of the anomaly detection server 104, according to some embodiments, are discussed in further detail below with reference to <figref idref="f0002 f0003 f0004 f0005 f0006">FIGs. 2-6</figref>.</p>
<p id="p0038" num="0038">The anomaly detection server 104 may be communicatively coupled to the historical data store 106. The historical data store 106 may correspond to one or more databases, files, and/or data structures in memory that are configured to store historical data values of one or more data streams that are being received by the data stream interface 102. The data stream interface 102 may be configured to store received data values to the historical data store 106 as historical data values. Thus, when the anomaly detection server 104 attempts to predict a data value for a data stream, the anomaly detection server 104 may access the historical data store 106 for historical data values. Although <figref idref="f0001">FIG. 1</figref> depicts the data stream interface 102 and the historical data store 106 as separate components, this is not intended to be limiting. For instance, the historical data store 106 may be incorporated into the data stream interface 102 or the anomaly detection server 104.</p>
<p id="p0039" num="0039">The anomaly detection server 104 may be communicatively coupled to the internal event data store 108. The internal event data store 108 may correspond to one or more data bases, files, and/or data structures in memory that are configured to store data of events that are occurring within the organization (i.e., internal events). For example, the internal event<!-- EPO <DP n="13"> --> data store 108 may correspond to one or more, system logs, maintenance logs, and internal process monitors (e.g., internally maintained tools used to monitor internal processes) that store information about the state of software processes executing on server computers within the organization and/or maintenance logs that store information about the status of hardware within the organization. When the anomaly detection server 104 attempts to predict a data value for a data stream, the anomaly detection server 104 may access the internal event data store 108 for internal event data. Internal event data may be stored into the internal event data store 108 by one or more other server computers that are operated by the organization including any of the other elements depicted in <figref idref="f0001">FIG. 1</figref>. For example, when a hard drive failure occurs within the organization, data pertaining to the hard drive failure may be provided to the internal event data store 108 so that the anomaly detection server 104 may take the hard drive failure into account when generating a prediction value. In some embodiments, the internal event data store 108 may be incorporated into the anomaly detection server 104 or the historical data store 106.</p>
<p id="p0040" num="0040">The anomaly detection server 104 may be communicatively coupled to the communication network 120. The communication network 120 can be of various types and can include one or more communication networks. Examples of the communication networks 120-122 include, without restriction, the Internet, a wide area network (WAN), a local area network (LAN), an Ethernet network, a public or private network, a wired network, a wireless network, and the like, and combinations thereof. Different communication protocols may be used to facilitate the communications including both wired and wireless protocols such as IEEE 802.XX suite of protocols, TCP/IP, IPX, SAN, AppleTalk, Bluetooth, and other protocols. In general, the communication network 120 may include any communication network or infrastructure that facilitates communications between computing devices.</p>
<p id="p0041" num="0041">While in operation, the anomaly detection server 104 may consider external event data retrieved from sources (e.g., weather reports, social media feeds, news sites, and/or Rich Site Summary feeds) that are external to the organization via communication network 120. For example, in the event of a major regional earthquake, various social media feeds, government sites, and other websites may provide data pertaining to the disaster. Data from<!-- EPO <DP n="14"> --> these sources may be obtained by or provided to the anomaly detection server 104 so that the anomaly detection server 104 can take the disaster into account when generating prediction values. Although not shown in <figref idref="f0001">FIG. 1</figref>, in some embodiments, a separate component or service may be responsible for collecting external event data from external sources and providing the external event data to the anomaly detection server 104.</p>
<p id="p0042" num="0042">The anomaly detection server 104 may be communicatively coupled to the reporting/command service 110, which may be implemented by one or more processes executing on one or more server computers. The reporting/command service 110 may be configured to generate and send out alerts and/or commands on behalf of one or more clients including the anomaly detection server 104. Accordingly, when the anomaly detection server 104 determines that a value of a data stream is likely to be anomalous, the anomaly detection server 104 may generate a message comprising information about the anomaly and send the message to the reporting/command service 110. Upon receiving an message, the reporting/command service 110 persist the message in the log 112. The reporting/command service 110 may then generate one or more alerts containing the information and transmit the one or more alerts to appropriate personnel. In some embodiments, the reporting/command service may display the one or more alerts through one or more graphical monitoring applications (e.g., Grafana).</p>
<p id="p0043" num="0043">Additionally, the reporting/command service 110 may generate one or more messages containing one or more commands from the anomaly detection server 104 (e.g., command messages) and transmit the command messages to one or more other computing devices (e.g., routers, other server computers, client computers including client computers 130-132), where the command messages cause the one or more other computing devices to perform one or more actions based on the anomaly. Examples of actions may include halting/starting/restarting one or more software processes and/or restarting the one or more other computing devices. For instance, if the anomaly suggests that more software processes (e.g., web server processes) are needed to handle high traffic load to a website, the command message may include commands to start additional software processes.<!-- EPO <DP n="15"> --></p>
<heading id="h0007"><b>II. ANOMALY DETECTION SERVER AND SUBSYSTEMS</b></heading>
<p id="p0044" num="0044"><figref idref="f0002">FIGS. 2</figref>, <figref idref="f0003">3</figref>, <figref idref="f0004">4</figref>, <figref idref="f0005">5</figref>, and <figref idref="f0006">6</figref> show block diagrams illustrating anomaly detection server 104 and components thereof in various levels of detail. In particular, <figref idref="f0002">FIG. 2</figref> illustrates a high level block diagram of the anomaly detection server 104 in accordance with embodiments. <figref idref="f0003">FIG. 3</figref> illustrates a block diagram of a prediction module in accordance with embodiments. <figref idref="f0004">FIG. 4</figref> illustrates a block diagram of a threshold calculation module in accordance with embodiments. <figref idref="f0005">FIG. 5</figref> illustrates a block diagram of a scoring module in accordance with embodiments. <figref idref="f0006">FIG. 6</figref> illustrates a block diagram of an anomaly detection module in accordance with embodiments.</p>
<heading id="h0008"><b><i>A. Detection Server</i></b></heading>
<p id="p0045" num="0045"><figref idref="f0002">FIG. 2</figref> illustrates a block diagram of the anomaly detection server 104 including an exemplary server computer 202 in accordance with embodiments. The server computer 202 is illustrated as comprising a plurality of hardware and software modules (204-228). However, it should be appreciated that this is provided for illustration purposes only, and each of the modules and associated functionality may be provided and/or performed by the same or different components. That is, the server computer 202 may perform some of the relevant functions and steps described herein with reference to the anomaly detection server 104 through the use of any suitable combination of software instructions and/or hardware configurations. It should be noted that although <figref idref="f0002">FIG. 2</figref> (and other systems described herein) illustrates all of the modules located on a single device, the disclosure is not meant to be so limited. Moreover, a system for implementing the functionality described herein may have additional components or less then all of these components. Additionally, some modules may be located on other devices such as a remote server or other local devices that are functionally connected to the server computer component(s). In some cases, the software modules may be located on a virtual machine or a container.</p>
<p id="p0046" num="0046">The server computer 202 is shown as comprising a processor 204, system memory 206 (which may comprise any combination of volatile and/or non-volatile memory such as, for example, buffer memory, RAM, DRAM, ROM, flash, or any other suitable memory device),<!-- EPO <DP n="16"> --> and an external communication interface 208. Moreover, one or more of the modules 210-220 may be disposed within one or more of the components of the system memory 206, or may be disposed externally. As was noted above, the software and hardware modules shown in <figref idref="f0002">FIG. 2</figref> (and other systems described herein) are provided for illustration purposes only, and the configurations are not intended to be limiting. The processor 204, system memory 206 and/or external communication interface 208 may be used in conjunction with any of the modules described below to provide a desired functionality. Some exemplary modules and related functionality may be as follows:</p>
<p id="p0047" num="0047">A communication module 210 may be configured or programmed to perform some or all of the functionality associated with receiving, sending, and generating electronic messages for transmission through the anomaly detection server 104 to or from any of the entities shown in <figref idref="f0002">FIG. 2</figref>. When an electronic message is received by the server computer 202 via the external communication interface 208, it may be passed to the communication module 210. The communication module 210 may identify and parse the relevant data based on a particular messaging protocol used in the anomaly detection server 104. As examples, the received information may comprise new data values of a data stream, historical data values of an internal event data, external event data and feedback data, and/or any other information that the anomaly detection server 104 may utilize in predicting values or detecting anomalies. The communication module 210 may then transmit any received information to an appropriate module within the server computer 202 (e.g., via a data bus line 228). The communication module 210 may also receive information from one or more of the modules in the server computer 202 and generate an electronic message in an appropriate data format in conformance with a transmission protocol used in the anomaly detection server 104 so that the message may be sent to one or more entities within system 100 (e.g., to the reporting/command service 110). The electronic message may then be passed to the external communication interface 208 for transmission. The electronic message may, for example, comprise a message (e.g., to be transmitted to the reporting/command service 110) or any other suitable electronic message used in the context of anomaly detection.<!-- EPO <DP n="17"> --></p>
<p id="p0048" num="0048">In embodiments where one or more data stores depicted in <figref idref="f0001">FIG. 1</figref> correspond to databases (e.g., historical data store 106, internal event data store 108, and log 112), a database module 212 may be programmed or configured to perform some or all of the functionality associated with retrieving information from the databases. In this regard, the database module 212 may receive requests from one or more of the modules of the server computer 202 for information that may be stored in one or more of the databases. The database module 212 may then determine and query an appropriate database.</p>
<p id="p0049" num="0049">The database module 212 may also be programmed or configured to provide some or all of the functionality associated with maintaining and updating the databases (e.g., historical data store 106, log 112). In this regard, the database module 212 may receive information from one or more of the modules described herein. Such information may then be stored in the appropriate location in the databases using any suitable storage process. For example, in some embodiments, the anomaly detection server 104 may be responsible for storing new data values received from the data stream interface 102 into the historical data store 106. In such embodiments, the database module 212 may receive information comprising one or more new data values from the communication module 210. The database module 212 may then cause the information to be stored into a database that corresponds to the historical data store 106.</p>
<p id="p0050" num="0050">A notification/command module 214 may be programmed and/or configured to perform functionality associated with generating and transmitting messages to a reporting/command service (e.g., reporting/command service 110). If the scoring module 220 determines that a value for data stream is anomalous, the scoring module 220 may cause the notification/command module 214 to generate a message that encapsulates information about the anomaly. In some embodiments, the encapsulated information may include the data value, the associated prediction value predicted by the prediction module 216, the models selected for predicting the prediction value, the score based on the prediction value and the data value, the associated score threshold, internal events and external events that were considered, and other information that may be helpful for diagnosing the cause of the<!-- EPO <DP n="18"> --> anomalous value. The notification/command module 214 may transmit the message to the reporting/command service 110.</p>
<p id="p0051" num="0051">A prediction module 216 may be programmed and/or configured to perform functionality associated with generating prediction values to compare with the data values of a data stream. More specifically, when a value for a data stream is received by the communication module 210 from the data stream interface 102, the prediction module 216 may be caused to generate one or more prediction values for the time interval that corresponds to the received value based on historical data values of the data stream and one or more selected models. The steps performed by the prediction module 216 for generating prediction values are discussed in further detail with respect to <figref idref="f0003">FIG. 3</figref>.</p>
<p id="p0052" num="0052">A threshold calculation module 218 may be programmed and/or configured to perform functionality associated with calculating a score threshold. More specifically, when a value for a data stream is received by the communication module 210 from the data stream interface 102, the threshold calculation module 218 may be caused to generate a score threshold for the data value based on the historical data values of the data stream. In some embodiments, a score threshold may not be generated for each value of a data stream that is received. Rather, a score threshold that was generated for an earlier value of a data stream may be re-used for one or more subsequent values of the data stream. The steps performed by the threshold calculation module 218 are discussed in further detail with respect to <figref idref="f0004">FIG. 4</figref>.</p>
<p id="p0053" num="0053">A scoring module 220 may be programmed and/or configured to perform functionality associated with generating a final score based on a value of a data stream and the prediction values associated with the data value. More specifically, when the prediction module 216 generates prediction values for a value of a data stream, the prediction module 216 may forward the data value and the prediction values to the scoring module 220. Upon receiving the data value and the prediction values, the scoring module 220 may generate a final score based on the data value and the prediction values. The steps performed by the scoring module 220 are discussed in further detail with respect to <figref idref="f0005">FIG. 5</figref>.<!-- EPO <DP n="19"> --></p>
<p id="p0054" num="0054">An anomaly detection module 222 may be programmed and/or configured to perform functionality associated with determining whether a value of a data stream is anomalous based on the data value's final score and the score threshold. In particular, upon receiving the score threshold from the threshold calculation module 218 and the data value's final score from the scoring module 220, the anomaly detection module 222 may determine whether the final score exceeds the score threshold. If the final score exceeds the score threshold, the data value is considered likely to be anomalous and the anomaly detection module 222 may cause an alert to be generated and sent out. The steps performed by the anomaly detection module 222 are discussed in further detail with respect to <figref idref="f0006">FIG. 6</figref>.</p>
<p id="p0055" num="0055">A pattern capture module 224 may be programmed and/or configured to perform functionality associated with detecting patterns within the data stream and creating new models to capture the detected patterns. In some situations, one or more anomalies that are detected by the anomaly detection module 222 may be indicative of a new pattern that is being followed by the data stream. For example, if the organization institutes a periodic maintenance schedule, where one or more servers within the organization are taken offline for maintenance, data values within the data stream that originated from the servers that are taken down may be anomalous. In this case, the pattern capture module 224 may recognize from the characteristics of the anomalies (e.g., the anomalies appear bi-monthly, the anomalies originate from the same servers, the anomalous values are always zero) and other information (e.g., internal event data point to servers being taken offline) that the anomalies correspond to a periodic event that occurs contemporaneously with the time intervals associated with the anomalies. The pattern capture module 224 may then create a new model whose periodicity matches the detected periodic event and store the new model into the prediction module 216. As a result, the anomaly detection server 104 is able to quickly adapt to new trends that are followed by the data stream.</p>
<p id="p0056" num="0056">In some embodiments, the anomaly detection server 104 may provide an interface that enables a human operator to manually add new models to the anomaly detection server 104.<!-- EPO <DP n="20"> --></p>
<heading id="h0009"><i>B. Prediction Module</i></heading>
<p id="p0057" num="0057"><figref idref="f0003">FIG. 3</figref> illustrates a block diagram of the components comprised by the prediction module 216 in accordance with embodiments. The prediction module 216 is illustrated as comprising a plurality of subsystems (304-306). However, it should be appreciated that this is provided for illustration purposes only, and each of the sub-systems and associated functionality may be provided and/or performed by the same or different components.</p>
<heading id="h0010"><b>1. Model manager</b></heading>
<p id="p0058" num="0058">Generally, a forecast model can be used to predict a next value in a data stream based on the historical data values of the data stream. In this regard, a model manager 304 may be programmed and/or configured to perform functionality associated with selecting forecast model(s) for a data stream and evaluating the models to generate the one or more prediction values. When the anomaly detection server 104 receives a value for a data stream, the model manager 304 may select one or more forecast models from the model store 306. For a particular data stream, the model manager 304 may have a number of models to choose from, e.g., certain models may be identified as being suitable to a particular stream. As an example, a model can be a Holt-Winters triple exponential forecasting model with a unique periodicity (i.e., a unique combination of a period length and period start). If the data stream contains values that each correspond to a day, examples of models that could be chosen may include a weekly model (i.e., a model with a weekly periodicity) for each day of the week, a monthly model (i.e., a model with a monthly periodicity) for each day of the month, and a yearly model (i.e., a model with a periodicity of 365 days) for each day of the year. In some embodiments, the model manager may further maintain special models that correspond to special events that occur periodically, examples of which may include holiday events, the end of fiscal quarters, and pay days.</p>
<p id="p0059" num="0059">In general, when a value of a data stream that corresponds to a particular time interval (e.g., a particular day of the year) is received by the anomaly detection server 104, the model manager 304 may select one or more models whose periodicities match the time interval. For example, if the anomaly detection server 104 receives a value of a data stream<!-- EPO <DP n="21"> --> that corresponds to Tuesday, March 5, the model manager 304 may select the daily model, a weekly model that corresponds to the Tuesday of each week, a monthly model that corresponds to the fifth day of each month, and another monthly model that corresponds to the first Tuesday of each month. In another example, if the anomaly detection server 104 receives a value of a data stream that corresponds to a Christmas Day that takes place on a Sunday, the model manager 304 may select the daily model, a weekly model that corresponds to the Sunday of each week, a monthly model that corresponds to the 25<sup>th</sup> day of each month, another monthly model that corresponds to the last Sunday of each month, and a special model that corresponds to the Christmas Day of each year.</p>
<p id="p0060" num="0060">For each of the one or more selected forecast models, a set of historical data values of the data stream that match the periodicity of the forecast model may be retrieved from the historical data store 106. As examples, historical data values that correspond to each day may be retrieved for the daily model, historical data values that correspond to each Tuesday may be retrieved for the weekly model that corresponds to the Tuesday of each week, and historical data values that correspond to each Christmas Day may be retrieved for the special model that corresponds to Christmas Day. Next, each matching set of historical data values are fed to their corresponding models.</p>
<p id="p0061" num="0061">To account for complex combinations of patterns that may be followed by the data stream, each of the selected models may correspond to a Holt-Winters triple exponential forecasting model. Because each data stream corresponds to a time series, a data stream may follow one or more patterns, examples of which may include trend patterns, seasonal patterns, and cyclical patterns. A trend pattern may represent a long-term increase or decrease in the data values of the data stream. Trend patterns may be linear or non-linear. Seasonal patterns may represent how the data values experiences regular and predictable changes that repeat over a period of time (i.e., the period of the seasonal pattern) that is generally less than a year (e.g., a day, a week, a month). In other words, the period of a seasonal pattern is generally fixed in length. A cyclical pattern represents rises and falls by the data values of the data stream that are not of a fixed period.<!-- EPO <DP n="22"> --></p>
<p id="p0062" num="0062">A component form representation of a Holt-Winters triple exponential forecasting model may include a forecast equation, a smoothing equation for a level component ℓ<i><sub>t</sub></i> (i.e., the level smoothing equation, which evaluates to an estimate of the level/y-intercept of a regression line formed by the time series at time t), a smoothing equation for a trend component <i>b<sub>t</sub></i> (i.e., the trend smoothing equation, which evaluates to an estimate of the trend/slope of the regression line formed by the time series at time <i>t</i>), and a smoothing equation for a seasonal component s<i><sub>t</sub></i> (i.e., the seasonal smoothing equation), and three smoothing parameters <i>α</i>, <i>β</i><sup>∗</sup> and γ. The term <i>m</i> is used to denote the period of seasonality.</p>
<p id="p0063" num="0063">The forecast equation, the level smoothing equation, the trend smoothing equation, and the seasonal smoothing equation can correspond to the following equations, respectively: <maths id="math0001" num=""><math display="block"><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mi>t</mi><mo>+</mo><mi>h</mi><mo>|</mo><mi>t</mi></mrow></msub><mo>=</mo><msub><mi mathvariant="script">l</mi><mi>t</mi></msub><mo>+</mo><msub><mi mathvariant="italic">hb</mi><mi>t</mi></msub><mo>+</mo><msub><mi>s</mi><mrow><mi>t</mi><mo>−</mo><mi>m</mi><mo>+</mo><msubsup><mi>h</mi><mi>m</mi><mo>+</mo></msubsup></mrow></msub></math><img id="ib0001" file="imgb0001.tif" wi="53" he="6" img-content="math" img-format="tif"/></maths> <maths id="math0002" num=""><math display="block"><msub><mi mathvariant="script">l</mi><mi>t</mi></msub><mo>=</mo><mi>α</mi><mfenced separators=""><msub><mi>y</mi><mi>t</mi></msub><mo>−</mo><msub><mi>s</mi><mrow><mi>t</mi><mo>−</mo><mi>m</mi></mrow></msub></mfenced><mo>+</mo><mfenced separators=""><mn>1</mn><mo>−</mo><mi>α</mi></mfenced><mfenced separators=""><msub><mi mathvariant="script">l</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>b</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mfenced></math><img id="ib0002" file="imgb0002.tif" wi="77" he="5" img-content="math" img-format="tif"/></maths> <maths id="math0003" num=""><math display="block"><msub><mi>b</mi><mi>t</mi></msub><mo>=</mo><mi>β</mi><mo>*</mo><mfenced separators=""><msub><mi mathvariant="script">l</mi><mi>t</mi></msub><mo>−</mo><msub><mi mathvariant="script">l</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mfenced><mo>+</mo><mfenced separators=""><mn>1</mn><mo>−</mo><mi>β</mi><mo>*</mo></mfenced><msub><mi>b</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></math><img id="ib0003" file="imgb0003.tif" wi="63" he="5" img-content="math" img-format="tif"/></maths> <maths id="math0004" num=""><math display="block"><msub><mi>s</mi><mi>t</mi></msub><mo>=</mo><mi>γ</mi><mfenced separators=""><msub><mi>y</mi><mi>t</mi></msub><mo>−</mo><msub><mi mathvariant="script">l</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>b</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mfenced><mo>+</mo><mfenced separators=""><mn>1</mn><mo>−</mo><mi>γ</mi></mfenced><msub><mi>s</mi><mrow><mi>t</mi><mo>−</mo><mi>m</mi></mrow></msub></math><img id="ib0004" file="imgb0004.tif" wi="72" he="5" img-content="math" img-format="tif"/></maths> where <maths id="math0005" num=""><math display="inline"><msubsup><mi>h</mi><mi>m</mi><mo>+</mo></msubsup><mo>=</mo><mrow><mo>⌊</mo><mrow><mfenced separators=""><mi>h</mi><mo>−</mo><mn>1</mn></mfenced><mi>mod</mi><mspace width="1ex"/><mi>m</mi></mrow><mo>⌋</mo></mrow><mo>+</mo><mn>1</mn></math><img id="ib0005" file="imgb0005.tif" wi="46" he="6" img-content="math" img-format="tif" inline="yes"/></maths> , 0 ≤ <i>α</i> ≤ 1, 0 ≤ <i>β</i><sup>∗</sup> ≤ 1, 0 ≤ γ ≤ 1, <i>h is</i> the number of time intervals ahead in the time series that the model is trying to forecast (e.g., one time interval ahead), and m is the number of periods within a year (e.g., for a monthly model, m = 12). As can be seen above, the level smoothing equation represents a weighted sum of the seasonally adjusted observation (y<i><sub>t</sub></i> - s<sub>t-m</sub>) and the non-seasonal forecast (ℓ<i><sub>t-1</sub></i> + <i>b<sub>t-1</sub></i>) for time <i>t</i>. The trend smoothing equation represents a weighted sum of the estimated slope at time <i>t</i> based on ℓ<sub>t</sub> - ℓ<sub>t-1</sub> and <i>b</i><sub><i>t</i>-1</sub>, the estimate of the slope at <i>t</i> - 1. The seasonal smoothing equation represents a weighted sum of the current seasonal index, (<i>y<sub>t</sub></i> - ℓ<sub><i>t</i>-1</sub>, - <i>b</i><sub><i>t</i>-1</sub>), and the seasonal index of the same season last during the last cycle (e.g., during the previous year). In this regard, the smoothing parameters <i>α</i>, <i>β</i><sup>∗</sup> and γ may be manually or automatically chosen by the model manager 304. Further details about Holt-Winters triple exponential forecasting models can be found in <i>Time series Forecasting using Holt-Winters Exponential Smoothing.</i> Retrieved from<br/>
https://labs.omniti.com/people/jesus/papers/holtwinters.pdf.<!-- EPO <DP n="23"> --></p>
<p id="p0064" num="0064">By evaluating the forecast equation of a model using the data value and the historical data values, the model manager 304 can obtain the prediction value specific to the model and the time interval of the data value. Upon obtaining a prediction value from each of the selected models, the one or more prediction values may be provided to the scoring module 220.</p>
<heading id="h0011"><b>2. Model store</b></heading>
<p id="p0065" num="0065">The model store 306 may correspond to one or more databases, files, and/or data structures in memory that are configured to store the models, which may include one or more models and one or more special models for use by the model manager 304. The standard models may correspond to models with a periodicity/sampling frequency equal to a commonly used time unit (e.g., hour, day, week, or month). Examples of standard models may include, without limitation, a model that corresponds to each hour, a model that corresponds to the hours of 9 AM to 12 PM each day, a model that corresponds to each entire day, a model that corresponds to each Thursday of the week, a model that corresponds to each entire week, a model that corresponds to the 6<sup>th</sup> day of each month, a model that corresponds to the second Friday of each month, a model that corresponds to each entire month, and a model that corresponds to the summer months (e.g., the months of June, July, and August) of each year.</p>
<p id="p0066" num="0066">Special models may correspond to models that are created in response to the pattern capture module 224 detecting a pattern within a data stream, where the pattern's frequency does not match a commonly used time unit. Examples of special models may include a model that corresponds to a holiday, a model that corresponds to periodic maintenance that performed on servers within the organization (e.g., where the maintenance is performed every 6 weeks), a model that corresponds to a periodic stress testing (e.g., simulated high-traffic conditions) that is performed against the servers within the organization (e.g., where the stress testing is performed every four months), a model that corresponds to each end of a fiscal quarter, a model that corresponds to each payday (e.g., where payday occurs biweekly), a model that corresponds to each start of the organization's winter holiday break, and other models that correspond to periodic events that affect the performance and/or<!-- EPO <DP n="24"> --> operation of the servers within the organization. In this regard, when the pattern capture module 224 detects a pattern in the data stream and creates a new model to capture that pattern, the pattern capture module 224 may store the new model within the model store 306.</p>
<heading id="h0012"><b><i>C. Threshold Calculation</i></b></heading>
<p id="p0067" num="0067"><figref idref="f0004">FIG. 4</figref> illustrates a block diagram of the components comprised by the threshold calculation module 218 in accordance with embodiments. The threshold calculation module 218 is illustrated as comprising a plurality of subsystems (402-404). However, it should be appreciated that this is provided for illustration purposes only, and each of the sub-systems and associated functionality may be provided and/or performed by the same or different components.</p>
<p id="p0068" num="0068">Although the data values of a data stream are expected to more or less adhere to a one or more patterns, a certain amount of fluctuation may be tolerated or even expected. In this regard, the threshold calculation module 218 may provide a score threshold that represents how much variance in the data values is tolerable. Accordingly, a value is not considered likely to be anomalous so long as the data value's final score falls within the score threshold.</p>
<p id="p0069" num="0069">A variance calculator 402 may be programmed and/or configured to perform functionality associated with determining a variance based on the historical data values of a data stream. The variance calculator 402 may calculate the variance (e.g., a standard deviation) of the historical data values of the data stream. As an example, the variance may be equal to the average of the squared differences of each of the historical data values from the mean of the historical data values. Thus, if the historical data values fluctuate wildly within the data stream, the variance may be larger. On the other hand, the variance may be smaller if the historical data values stay more or less constant.</p>
<p id="p0070" num="0070">In some embodiments, a variance improver 404 may be programmed and/or configured to perform functionality associated with improving the variance based on internal event data, external event data, and feedback data. When the variance improver 404<!-- EPO <DP n="25"> --> receives a variance that is calculated by the variance calculator 402, the variance improver 404 may retrieve internal event data from the internal event data store 108, external event data from various external sites and sources through the communication network 120, and feedback data from the log 112. The retrieved data may be used to adjust and/or improve the variance to obtain the score threshold.</p>
<p id="p0071" num="0071">In some embodiments, feedback data, which may correspond to historical alerts that were caused to be sent by the anomaly detection server 104, may be used to adjust the variance. For example, if the variance improver 404 determines from the historical alerts that alerts are sent too often, the variance improver 404 may increase the score threshold so that larger differences between the data value and the prediction values are tolerated by the anomaly detection server 104.</p>
<heading id="h0013"><i>D. Determination</i> of <i>Scores</i></heading>
<p id="p0072" num="0072"><figref idref="f0005">FIG. 5</figref> illustrates a block diagram of the components comprised by the scoring module 220 in accordance with embodiments. The scoring module 220 is illustrated as comprising a plurality of subsystems (502-506). However, it should be appreciated that this is provided for illustration purposes only, and each of the sub-systems and associated functionality may be provided and/or performed by the same or different components.</p>
<p id="p0073" num="0073">A score generator 502 may be programmed and/or configured to perform functionality associated with generating a score for each selected forecast model that is associated with the new data value. Upon the receipt of the new data value, score generator 502 may obtain the data value from the communication module 210. Upon the generation of a prediction value for each of the selected models by the prediction module 216, the score generator 502 may obtain the prediction values from the prediction module. The score generator 502 then generates a score for each of the selected models based on the data value and the prediction value produced by the model. In particular generating a score based on a value and a prediction value may involve calculating a difference between the data value and the prediction value. In this regard, the higher the score, the more likely the score exceeds the score threshold and the more likely the data value is anomalous.<!-- EPO <DP n="26"> --></p>
<p id="p0074" num="0074">In some embodiments, a score normalizer 504 may be programmed and/or configured to perform functionality associated with normalizing scores associated with each selected forecast model that is associated with the new data value. In particular, the score normalizer 504 may obtain the scores generated for each of the selected models from the score generator 502. The score normalizer 504 may also retrieve internal event data from the internal event data store 108, external event data from various external sites and sources through the communication network 120, and feedback data from the log 112. The retrieved data may be used to adjust, filter and/or normalize the scores. For example, in embodiments where the final score is determined by calculating a weighted average of the scores, if the retrieved data suggests that the accuracy of a particular model is lower for the current prediction, a weight that is applied to the score produced by the particular model may be adjusted (e.g., lowered) to adjust the impact of the particular model on the final score.</p>
<p id="p0075" num="0075">In another example, feedback data, which may correspond to historical alerts that were sent by the anomaly detection server 104, may be used to normalize the scores. In this regard, if the score normalizer 504 determines from the historical alerts that alerts are sent too often, the score normalizer 504 may lower weights are applied to the scores to increase the chance that the final score will not exceed the score threshold.</p>
<p id="p0076" num="0076">A final score determiner 506 may be programmed and/or configured to perform functionality associated with generating a final score from one or more scores associated with each selected forecast model that is associated with the new data value. In particular, the final score determiner 506 may obtain one or more scores from score generator 502. The final score determiner 506 may then generate a final score based on the one or more scores. Generating the final score based on the one or more scores may be done in multiple ways. Examples may include selecting the lowest score out of the one or more scores, calculating a weighted average of the one or more scores, selecting the mode of the one or more scores, and selecting the highest score out of the one or more scores.</p>
<p id="p0077" num="0077">It should be noted that special models may be especially effective in embodiments that select the lowest score out of the one or more scores to obtain the final score. In such<!-- EPO <DP n="27"> --> embodiments, if at least one of the selected models generates a prediction value that does not deviate significantly from the new data value, the new data value is not considered likely to be anomalous. For example, if the new data value corresponds to a time interval that is Christmas Day, the new data value may deviate significantly from all of the prediction values except for the prediction value generated by the special model that corresponds to all Christmas Days. As a result, the score produced for the special model may be chosen as the final score and the new data value may not be considered likely to be anomalous.</p>
<heading id="h0014"><b><i>E. Detection of Anomaly</i></b></heading>
<p id="p0078" num="0078"><figref idref="f0006">FIG. 6</figref> illustrates a block diagram of the component(s) comprised by the anomaly detection module 222 in accordance with embodiments. The anomaly detection module 222 is illustrated as comprising the subsystem 602. However, it should be appreciated that this is provided for illustration purposes only, and each of the sub-systems and associated functionality may be provided and/or performed by the same or different components.</p>
<p id="p0079" num="0079">A threshold comparator 602 may be programmed and/or configured to perform functionality associated with determining whether a final score exceeds a score threshold. In particular, the threshold comparator 602 may obtain a final score from the scoring module 220 and a score threshold from the threshold calculation module 218. The threshold comparator 602 may then determine whether the data value is anomalous by determining whether the final score exceeds the score threshold. If the data value is determined to be anomalous, the threshold comparator may cause the notification/command module 214 to generate and send an message to the reporting/command service 110. In some embodiments, upon determining a likely anomaly, the threshold comparator 602 may send the anomalous data value to the pattern capture module 224. In turn, the pattern capture module 224 may determine whether the anomalous data value is an isolated event or related to a new pattern that is being followed by the data stream.</p>
<p id="p0080" num="0080">It should be noted, that because the accuracy of forecast models may be dependent upon the integrity of the historical data values, new data values that are determined to be anomalous may not be added to the historical data values. In some cases, new data values<!-- EPO <DP n="28"> --> may be affected by internal events, i.e., non-periodic or unexpected events that occurred within the organization. For example, a database failure, a misconfiguration, a job failure, a system failure, a power outage, or a network connection failure may cause one or more new data values to have a value of zero. In some cases, new data values may be affected by external events, i.e., non-periodic or unexpected events that are external to the organization. For example, a market crash, a weather-related event, or a natural disaster may cause one or more new data values to be unexpectedly low or unexpectedly high.</p>
<p id="p0081" num="0081">To keep anomalous data values from affecting the historical data values, whenever the anomaly detection server 104 determines that a new data value is anomalous, the anomaly detection server 104 may cause a prediction value that corresponds to the new data value to be added to the historical data values in place of the new data value. For example, if the daily visit total of the latest day for a web server is zero due to a hard drive failure, the predicted daily visit total for the latest day will be added to the historical data values in place of the daily visit total.</p>
<heading id="h0015">III. <b>DETECTING ANOMALIES IN A DATA STREAM</b></heading>
<p id="p0082" num="0082"><figref idref="f0007">FIG. 7</figref> illustrates a flowchart illustrating an exemplary method 700 for detecting anomalies in a data stream in accordance with embodiments. The steps of method 700 may be performed by the anomaly detection server 104.</p>
<p id="p0083" num="0083">At step 702, an anomaly detection server receives a new data value (i.e., a data value) of a data stream, where the data stream provides a series of data values including the data value and one or more past data values (i.e., historical data values). In this regard, the data value may correspond to the current time interval and each of the historical data values may correspond to a past time interval (i.e., a historical time interval). For example, each day, the anomaly detection server may be configured to receive from a web server, a daily total of visits to a website that is hosted by the web server. Accordingly, the historical data values may correspond to all of the daily visit totals that the web server sent to the anomaly detection server in the past, where each of the historical data values corresponds to a particular day in the past. The new data value that was just received in the data stream may correspond to the<!-- EPO <DP n="29"> --> latest daily visit total that corresponds to the current time interval, which is the current day. In another example, each day, the anomaly detection server may be configured to receive from a server associated with a merchant, an amount of revenue earned by the merchant on that day (i.e., a daily revenue total). Accordingly, the historical data values may correspond to all of the daily revenue totals that the merchant server sent to the anomaly detection server in the past. The new data value that was just received in the data stream may correspond to the amount of revenue earned by the merchant over the most recent day.</p>
<p id="p0084" num="0084">At step 704, the anomaly detection server selects a plurality of models from a model store (e.g., model store 306) based on the time interval that the data value corresponds to. It should be noted that each model of the selected plurality of models may have a different (i.e., unique) periodicity. For example, if the current time interval corresponds to the second Tuesday of February, the anomaly detection server selects models whose periodicity matches that of the second Tuesday of February. Accordingly, the anomaly detection server may select a yearly model that corresponds to each day of the year, a weekly model that corresponds to the Tuesday of each week, a first monthly model that corresponds to the second Tuesday of each month, and a second monthly model that corresponds to the 14<sup>th</sup> day of each month.</p>
<p id="p0085" num="0085">At step 706, the anomaly detection server generates a plurality of scores for the plurality of selected models by feeding the historical data values to each of the models. In particular, for each of the plurality of models, the anomaly detection server may feed, to the model, historical data values that match the periodicity of the model. For example, the yearly model may receive all daily total visits for each day of the year, the weekly model may receive the daily total visits for all Tuesdays, the first monthly model may receive the daily total visits for all second Tuesdays of the month, and the second monthly model may receive the daily total visits for all 14<sup>th</sup> days of the month.</p>
<p id="p0086" num="0086">Next, for each of the plurality of models, the anomaly detection server may generate a prediction value from the model and then generate a score for the model based on the prediction value and the data value. For example, the anomaly detection server may<!-- EPO <DP n="30"> --> generate four different predictions of the daily visit total for the current day, one prediction using the yearly model, another prediction using the weekly model, another prediction using the first monthly model, and another prediction using the second monthly model. The anomaly detection server may then compare each of the four predictions with the latest daily visit total to generate four different scores. In particular, each score may correspond to a difference between the latest daily visit total and one of the predicted daily visit totals.</p>
<p id="p0087" num="0087">At step 708, the anomaly detection server generates a final score based on the plurality of scores. For example, the anomaly detection server may select the lowest score as the final score. In this regard, so long as at least one of the models makes a close prediction, the latest daily visit total will not be found to be anomalous. On the other hand, if the latest daily visit total bucks the predictions of all of the models, then the latest daily visit total will be found to be anomalous.</p>
<p id="p0088" num="0088">At step 710, the anomaly detection server generates a score threshold. In this regard, the anomaly detection server may calculate the variance of at least a subset of the historical data values. The anomaly detection server may then adjust the variance based on one or more internal events, one or more external events, and one or more historical alerts and other feedback data to obtain the score threshold. For example, if the number of visits to the website fluctuates significantly from day to day, the score threshold may be larger. On the other hand, if the number of visits to the website stays more or less constant from day to day, the score threshold may be narrower.</p>
<p id="p0089" num="0089">At step 712, the anomaly detection server determines whether the final score exceeds the score threshold. For example, if the final score generated based on the latest daily visit total exceeds the score threshold generated in step 710, the latest daily visit total is likely to be anomalous and the organization may find it worthwhile to investigate the cause of the likely anomaly.</p>
<p id="p0090" num="0090">At step 714, in response to determining that the final score exceeds the score threshold, the anomaly detection server generates a notification (i.e., an alert) indicating that the data value is an anomaly. The alert may sent to appropriate personnel within the<!-- EPO <DP n="31"> --> organization, which may cause the personnel to investigate the anomaly. For example, if the latest daily revenue total seems to be anomalous based on a final score exceeding a score threshold, an audit process may be started with respect to the merchant.</p>
<p id="p0091" num="0091">In some embodiments, the anomaly detection server may attempt to determine whether the anomaly is part of a new pattern that is being followed by the data stream. If the a new pattern is detected, the anomaly detection server may create a new special model that captures the new pattern and add it to the set of patterns that can be used to generate prediction values for future data values. For example, in response to determining that the latest daily visit total is anomalous, the anomaly detection server may attempt to determine whether this anomaly is actually part of a larger pattern that is affecting the daily number of visits to the website. In this regard, the anomaly detection server may determine that a past daily visit total that corresponds to the 14<sup>th</sup> day of February of the previous year was also found to be anomalous. Eventually, the anomaly detection server may determine a previously undetected annual pattern that causes site traffic to surge every February 14<sup>th</sup>. As a result, the anomaly detection server may generate a special model with an annual periodicity that corresponds the February 14<sup>th</sup> of each year and add the special model to the model store.</p>
<heading id="h0016"><b>IV. COMPUTER APPARATUS</b></heading>
<p id="p0092" num="0092">The various participants and elements described herein with reference to <figref idref="f0001 f0002 f0003 f0004 f0005 f0006 f0007">FIGS. 1-7</figref> may operate one or more computer apparatuses to facilitate the functions described herein. Any of the elements in <figref idref="f0001 f0002 f0003 f0004 f0005 f0006 f0007">FIGS. 1-7</figref>, including any servers or databases, may use any suitable number of subsystems to facilitate the functions described herein.</p>
<p id="p0093" num="0093">Examples of such subsystems or components are interconnected via a system bus. Additional subsystems such as a printer, keyboard, fixed disk (or other memory comprising computer readable media), monitor, which is coupled to a display adapter, and others are shown. Peripherals and input/output (I/O) devices, which couple to I/O controller (which can be a processor or other suitable controller), can be connected to the computer system by any number of means known in the art, such as a serial port. For instance, serial port or an external interface can be used to connect computer apparatus to a wide area network such as<!-- EPO <DP n="32"> --> the Internet, a mouse input device, or a scanner. The interconnection via system bus allows a central processor to communicate with each subsystem and to control the execution of instructions from a system memory or fixed disk, as well as the exchange of information between subsystems. System memory and/or fixed disk may embody a computer readable medium.</p>
<p id="p0094" num="0094">Further, while the present invention has been described using a particular combination of hardware and software in the form of control logic and programming code and instructions, it should be recognized that other combinations of hardware and software are also within the scope of the present invention. The present invention may be implemented only in hardware, or only in software, or using combinations thereof.</p>
<p id="p0095" num="0095">Any of the software components or functions described in this application, may be implemented as software code to be executed by a processor using any suitable computer language such as, for example, Java, C++ or Perl using, for example, conventional or objectoriented techniques. The software code may be stored as a series of instructions, or commands on a computer readable medium, such as a random access memory (RAM), a read only memory (ROM), a magnetic medium such as a hard-drive or a floppy disk, or an optical medium such as a CD-ROM. Any such computer readable medium may reside on or within a single computational apparatus, and may be present on or within different computational apparatuses within a system or network.</p>
<p id="p0096" num="0096">The above description is illustrative and is not restrictive. Many variations of the invention will become apparent to those skilled in the art upon review of the disclosure. The scope of the invention should, therefore, be determined not with reference to the above description, but instead should be determined with reference to the pending claims.</p>
<p id="p0097" num="0097">Any of the methods described herein may be totally or partially performed with a computer system including one or more processors, which can be configured to perform the steps. Thus, embodiments can be directed to computer systems configured to perform the steps of any of the methods described herein, potentially with different components<!-- EPO <DP n="33"> --> performing a respective steps or a respective group of steps. Although presented as numbered steps, steps of methods herein can be performed at a same time or in a different order. Additionally, portions of these steps may be used with portions of other steps from other methods. Also, all or portions of a step may be optional. Additionally, any of the steps of any of the methods can be performed with modules, units, circuits, or other means for performing these steps.</p>
</description>
<claims id="claims01" lang="en"><!-- EPO <DP n="34"> -->
<claim id="c-en-01-0001" num="0001">
<claim-text>A method comprising performing, by a computer system (101):
<claim-text>receiving (702), by a server computer (104) from one or more client computers (132), a data value of a data stream that represents the client computer's operational status, the data stream providing a series of data values over time, the series of data values comprising the data value and one or more historical data values that were received in the data stream prior to the data value, wherein the data value represents a metric that is associated with a time interval that is unique within the data stream and each of the one or more historical data values that represent a metric that is associated with a historical time interval;</claim-text>
<claim-text>selecting (704), by the server computer (104), a plurality of models based on the time interval, wherein each of the plurality of models has a different periodicity;</claim-text>
<claim-text>for each model of the plurality of models, generating (706), by the server computer (104), a score of a plurality of scores based on the model, wherein generating the score comprises:
<claim-text>predicting, by the server computer (104), a prediction value based on the model, wherein predicting the prediction value comprises feeding, to the model, one or more matching historical data values that match a periodicity of the model; and</claim-text>
<claim-text>generating, by the server computer (104), the score based on the prediction value and the data value;</claim-text></claim-text>
<claim-text>generating (708), by the server computer (104), a final score based on the plurality of scores generated from each of the plurality of models;</claim-text>
<claim-text>generating (710), by the server computer (104), a score threshold;</claim-text>
<claim-text>determining (712), by the server computer (104), whether the final score exceeds the score threshold; and</claim-text>
<claim-text>responsive to determining that the final score exceeds the score threshold, generating (714), by the server computer (104), a notification that indicates that the data value is an anomaly and sending the notification to a reporting/command service to cause the reporting/command service to transmit a command message configured to<!-- EPO <DP n="35"> --> cause the one or more client computers to halt, restart or start one or more software processes.</claim-text></claim-text></claim>
<claim id="c-en-01-0002" num="0002">
<claim-text>The method of claim 1, wherein prior to generating the plurality of scores from each of the plurality of models, the method further comprises filtering out a first historical data value of the one or more historical data values based on one or more internal or external events that are contemporaneous with a first historical time interval that corresponds to the first historical data value.</claim-text></claim>
<claim id="c-en-01-0003" num="0003">
<claim-text>The method of claim 2, wherein one or more internal events are determined based on:
<claim-text>one or more system logs; or</claim-text>
<claim-text>one or more an internal process monitors.</claim-text></claim-text></claim>
<claim id="c-en-01-0004" num="0004">
<claim-text>The method of claim 2, wherein one or more external events are determined based on one or more Rich Site Summary feeds.</claim-text></claim>
<claim id="c-en-01-0005" num="0005">
<claim-text>The method of claim 1, wherein generating the prediction value based on the model further comprises:
<claim-text>estimating, based on the one or more matching historical data values, a level that corresponds to the time interval;</claim-text>
<claim-text>estimating, based on the one or more matching historical data values, a trend that corresponds to the time interval; and</claim-text>
<claim-text>generating the prediction value based on the estimated level and the estimated trend.</claim-text></claim-text></claim>
<claim id="c-en-01-0006" num="0006">
<claim-text>The method of claim 1, wherein the plurality of models comprises:
<claim-text>a first model with a daily periodicity;<!-- EPO <DP n="36"> --></claim-text>
<claim-text>a second model with a weekly periodicity; or</claim-text>
<claim-text>a third model with a monthly periodicity</claim-text></claim-text></claim>
<claim id="c-en-01-0007" num="0007">
<claim-text>The method of claim 1, further comprising:
<claim-text>determining that a periodic event that occurs contemporaneously with the time interval caused the data value to be anomalous;</claim-text>
<claim-text>generating a new model based on the periodic event; and</claim-text>
<claim-text>adding the new model to the plurality of models.</claim-text></claim-text></claim>
<claim id="c-en-01-0008" num="0008">
<claim-text>The method of claim 7, wherein the new model is used for predicting a subsequent prediction value.</claim-text></claim>
<claim id="c-en-01-0009" num="0009">
<claim-text>The method of claim 7, wherein the periodic event affects how much traffic the one or more client computers (132) receive while the periodic event is occurring.</claim-text></claim>
<claim id="c-en-01-0010" num="0010">
<claim-text>The method of claim 1, wherein generating the score based on the prediction value and the data value comprises calculating a difference between the prediction value and the data value.</claim-text></claim>
<claim id="c-en-01-0011" num="0011">
<claim-text>The method of claim 1, further comprising normalizing the plurality of scores based on one or more events,<br/>
wherein the one or more events comprise:
<claim-text>a software error;</claim-text>
<claim-text>a hardware failure;</claim-text>
<claim-text>a configuration error;</claim-text>
<claim-text>a power failure;</claim-text>
<claim-text>a network disconnection;<!-- EPO <DP n="37"> --></claim-text>
<claim-text>a database crash;</claim-text>
<claim-text>a weather event; or</claim-text>
<claim-text>a natural disaster.</claim-text></claim-text></claim>
<claim id="c-en-01-0012" num="0012">
<claim-text>The method of claim 1, wherein generating the final score based on the plurality of scores generated from each of the plurality of models comprises:
<claim-text>selecting a lowest score from the plurality of scores;</claim-text>
<claim-text>calculating a weighted average of the plurality of scores; or</claim-text>
<claim-text>selecting a highest score from the plurality of scores.</claim-text></claim-text></claim>
<claim id="c-en-01-0013" num="0013">
<claim-text>The method of claim 1, wherein generating the score threshold comprises:
<claim-text>calculating the score threshold based on a variance of at least a subset of the one or more historical data values; and</claim-text>
<claim-text>adjusting the score threshold based on one or more internal events, one or more external events or one or more historical alerts that were caused to be sent by the server.</claim-text></claim-text></claim>
<claim id="c-en-01-0014" num="0014">
<claim-text>A server computer (104) comprising:
<claim-text>a processor; and</claim-text>
<claim-text>a computer-readable medium coupled to the processor, the computer-readable medium including code that, when executed by the processor, causes the server to perform the method according to one of the claims 1 to 13.</claim-text></claim-text></claim>
</claims>
<claims id="claims02" lang="de"><!-- EPO <DP n="38"> -->
<claim id="c-de-01-0001" num="0001">
<claim-text>Verfahren, das das Durchführen durch ein<br/>
Computersystem (101) umfasst von:
<claim-text>Empfangen (702) eines Datenwerts eines Datenstroms durch einen Server-Computer (104) von einem oder mehreren Client-Computern (132), der den Betriebsstatus des Client-Computers repräsentiert, wobei der Datenstrom über die Zeit hinweg eine Reihe von Datenwerten bereitstellt, wobei die Reihe von Datenwerten den Datenwert und einen oder mehrere historische Datenwerte umfasst, die im Datenstrom vor dem Datenwert empfangen wurden, wobei der Datenwert eine Metrik darstellt, die mit einem Zeitintervall verknüpft ist, das innerhalb des Datenstroms und jedes des einen oder der mehreren historischen Datenwerte einzigartig ist, die eine Metrik repräsentieren, die mit einem historischen Zeitintervall verknüpft ist;</claim-text>
<claim-text>Auswählen (704) einer Vielzahl von Modellen basierend auf dem Zeitintervall durch den Server-Computer (104), wobei jedes der Vielzahl von Modellen eine unterschiedliche Periodizität aufweist;</claim-text>
<claim-text>Erzeugen (706) eines Scores einer Vielzahl von Scores basierend auf dem Modell für jedes Modell der Vielzahl von Modellen durch den Server-Computer (104), wobei das Erzeugen des Scores umfasst:
<claim-text>Vorhersagen eines Vorhersagewerts basierend auf dem Modell durch den Server-Computer (104), wobei das Vorhersagen des Vorhersagewerts das Eingeben eines oder mehrerer übereinstimmender historischer Datenwerte, die mit einer Periodizität des Modells übereinstimmen, in das Modell umfasst; und</claim-text>
<claim-text>Erzeugen des Scores basierend auf dem Vorhersagewert und dem Datenwert durch den Server-Computer (104);</claim-text></claim-text>
<claim-text>Erzeugen (708) eines End-Scores basierend auf der<!-- EPO <DP n="39"> --> Vielzahl von Scores, die von jedem der Vielzahl von Modellen erzeugt werden, durch den Server-Computer (104);</claim-text>
<claim-text>Erzeugen (710) eines Score-Schwellenwerts durch den Server-Computer (104);</claim-text>
<claim-text>Bestimmen (712) durch den Server-Computer (104), ob der End-Score<br/>
den Score-Schwellenwert überschreitet; und</claim-text>
<claim-text>in Reaktion auf das Bestimmen, dass der End-Score den Score-Schwellenwert überschreitet, Erzeugen (714) einer Benachrichtigung durch den Server-Computer (104), die anzeigt, dass der Datenwert eine Anomalie ist, und Senden der Benachrichtigung an einen Berichterstattungs-/Befehlsdienst, um den Berichterstattungs-/Befehlsdienst zu veranlassen, eine Befehlsnachricht zu senden, die konfiguriert ist, um den einen oder die mehreren Client-Computer zu veranlassen, einen oder mehrere Softwareprozesse anzuhalten, neu zu starten oder zu starten.</claim-text></claim-text></claim>
<claim id="c-de-01-0002" num="0002">
<claim-text>Verfahren nach Anspruch 1, wobei das Verfahren vor dem Erzeugen der Vielzahl von Scores anhand jedes der Vielzahl von Modellen ferner das Herausfiltern eines ersten historischen Datenwerts des einen oder der mehreren historischen Datenwerte basierend auf einem oder mehreren internen oder externen Ereignissen umfasst, die gleichzeitig mit einem ersten historischen Zeitintervall stattfinden, das dem ersten historischen Datenwert entspricht.</claim-text></claim>
<claim id="c-de-01-0003" num="0003">
<claim-text>Verfahren nach Anspruch 2, wobei ein oder mehrere interne Ereignisse bestimmt werden basierend auf:
<claim-text>einem oder mehreren Systemprotokollen; oder</claim-text>
<claim-text>einem oder mehreren internen Prozessmonitoren.</claim-text></claim-text></claim>
<claim id="c-de-01-0004" num="0004">
<claim-text>Verfahren nach Anspruch 2, wobei ein oder mehrere externe Ereignisse basierend auf einem oder mehreren Rich-Site-Summary-Feeds bestimmt werden.</claim-text></claim>
<claim id="c-de-01-0005" num="0005">
<claim-text>Verfahren nach Anspruch 1, wobei das Erzeugen des<!-- EPO <DP n="40"> --> Vorhersagewerts basierend auf dem Modell ferner umfasst:
<claim-text>Schätzen eines Niveaus, das dem Zeitintervall entspricht, basierend auf dem einen oder den mehreren übereinstimmenden historischen Datenwerten;</claim-text>
<claim-text>Schätzen eines Trends, der dem Zeitintervall entspricht, basierend auf dem einen oder den mehreren übereinstimmenden historischen Datenwerten; und</claim-text>
<claim-text>Erzeugen des Vorhersagewerts basierend auf dem geschätzten Niveau und dem geschätzten Trend.</claim-text></claim-text></claim>
<claim id="c-de-01-0006" num="0006">
<claim-text>Verfahren nach Anspruch 1, wobei die Vielzahl von Modellen umfasst: ein erstes Modell mit einer täglichen Periodizität;
<claim-text>ein zweites Modell mit einer</claim-text>
<claim-text>wöchentlichen Periodizität; oder</claim-text>
<claim-text>ein drittes Modell mit einer</claim-text>
<claim-text>monatlichen Periodizität.</claim-text></claim-text></claim>
<claim id="c-de-01-0007" num="0007">
<claim-text>Verfahren nach Anspruch 1, ferner umfassend:
<claim-text>Bestimmen, dass ein periodisches Ereignis, das gleichzeitig mit dem Zeitintervall auftritt, den Datenwert veranlasst, anomal zu sein;</claim-text>
<claim-text>Erzeugen eines neuen Modells basierend auf dem periodischen Ereignis; und Hinzufügen des neuen Modells zu der Vielzahl von Modellen.</claim-text></claim-text></claim>
<claim id="c-de-01-0008" num="0008">
<claim-text>Verfahren nach Anspruch 7, wobei das neue Modell zum Vorhersagen eines nachfolgenden Vorhersagewerts verwendet wird.</claim-text></claim>
<claim id="c-de-01-0009" num="0009">
<claim-text>Verfahren nach Anspruch 7, wobei das periodische Ereignis beeinflusst, wie viel Verkehr der eine oder die mehreren Client-Computer (132) empfangen, während das periodische Ereignis auftritt.</claim-text></claim>
<claim id="c-de-01-0010" num="0010">
<claim-text>Verfahren nach Anspruch 1, wobei das Erzeugen des Scores basierend auf dem Vorhersagewert und dem Datenwert das<!-- EPO <DP n="41"> --> Berechnen einer Differenz zwischen dem Vorhersagewert und dem Datenwert umfasst.</claim-text></claim>
<claim id="c-de-01-0011" num="0011">
<claim-text>Verfahren nach Anspruch 1, das ferner das Normalisieren der Vielzahl von Scores basierend auf einem oder mehreren Ereignissen umfasst,<br/>
wobei das eine oder die mehreren Ereignisse umfassen:
<claim-text>einen Softwarefehler;</claim-text>
<claim-text>einen Hardwareausfall;</claim-text>
<claim-text>einen Konfigurationsfehler;</claim-text>
<claim-text>einen Stromausfall;</claim-text>
<claim-text>eine Netzwerktrennung;</claim-text>
<claim-text>einen<br/>
Datenbankcrash;</claim-text>
<claim-text>ein<br/>
Wetterereignis; oder</claim-text>
<claim-text>eine<br/>
Naturkatastrophe.</claim-text></claim-text></claim>
<claim id="c-de-01-0012" num="0012">
<claim-text>Verfahren nach Anspruch 1, wobei das Erzeugen des End-Scores basierend auf der Vielzahl von Scores, die von jedem der Vielzahl von Modellen erzeugt werden, umfasst:
<claim-text>Auswählen eines niedrigsten Scores aus der Vielzahl von Scores;</claim-text>
<claim-text>Berechnen eines gewichteten Durchschnitts der Vielzahl von Scores; oder</claim-text>
<claim-text>Auswählen eines höchsten Scores aus der Vielzahl von Scores.</claim-text></claim-text></claim>
<claim id="c-de-01-0013" num="0013">
<claim-text>Verfahren nach Anspruch 1, wobei das Erzeugen des Score-Schwellenwerts<br/>
umfasst:
<claim-text>Berechnen des Score-Schwellenwerts basierend auf einer Varianz von zumindest einer Teilmenge des einen oder der mehreren<!-- EPO <DP n="42"> --> historischen Datenwerte; und</claim-text>
<claim-text>Anpassen des Score-Schwellenwerts basierend auf einem oder mehreren internen Ereignissen, einem oder mehreren externen Ereignissen oder einem oder mehreren historischen Warnungen, die der Server zu senden veranlasst wurde.</claim-text></claim-text></claim>
<claim id="c-de-01-0014" num="0014">
<claim-text>Server-Computer (104), umfassend:
<claim-text>einen Prozessor; und</claim-text>
<claim-text>ein mit dem Prozessor gekoppeltes computerlesbares Medium, wobei das computerlesbare Medium einen Code beinhaltet, der, wenn er durch den Prozessor ausgeführt wird, den Server veranlasst, das Verfahren nach einem der Ansprüche 1 bis 13 auszuführen.</claim-text></claim-text></claim>
</claims>
<claims id="claims03" lang="fr"><!-- EPO <DP n="43"> -->
<claim id="c-fr-01-0001" num="0001">
<claim-text>Procédé comprenant la réalisation, par un système informatique (101), des opérations suivantes :
<claim-text>la réception (702), par un ordinateur serveur (104), en provenance d'un ou plusieurs ordinateurs clients (132), d'une valeur de données d'un flux de données qui représente l'état opérationnel de l'ordinateur client, le flux de données fournissant une série de valeurs de données dans le temps, la série de valeurs de données comprenant la valeur de données et une ou plusieurs valeurs de données historiques qui ont été reçues dans le flux de données avant la valeur de données, ladite valeur de données représentant une métrique qui est associée à un intervalle de temps qui est unique dans le flux de données et chacune desdites une ou plusieurs valeurs de données historiques représentant une métrique qui est associée à un intervalle de temps historique ;</claim-text>
<claim-text>la sélection (704), par l'ordinateur serveur (104), d'une pluralité de modèles compte tenu de l'intervalle de temps, chacun des modèles de ladite pluralité de modèles ayant une périodicité différente ;</claim-text>
<claim-text>pour chaque modèle de la pluralité de modèles, la génération (706), par l'ordinateur serveur (104), d'un score parmi une pluralité de scores compte tenu du modèle, ladite génération du score comprenant :
<claim-text>la prédiction, par l'ordinateur serveur (104), d'une valeur de prédiction compte tenu du modèle, ladite prédiction de la valeur de prédiction comprenant l'introduction, dans le modèle, d'une ou plusieurs valeurs de données historiques concordantes qui concordent avec une périodicité du modèle, et</claim-text>
<claim-text>la génération, par l'ordinateur serveur<!-- EPO <DP n="44"> --> (104), du score compte tenu de la valeur de prédiction et de la valeur de données ;</claim-text></claim-text>
<claim-text>la génération (708), par l'ordinateur serveur (104), d'un score final compte tenu de la pluralité de scores générés à partir de chacun des modèles de ladite pluralité de modèles ;</claim-text>
<claim-text>la génération (710), par l'ordinateur serveur (104), d'un seuil de score ;</claim-text>
<claim-text>la détermination (712), par l'ordinateur serveur (104), du fait ou non que le score final dépasse le seuil de score ; et</claim-text>
<claim-text>en réaction à la détermination du fait que le score final dépasse le seuil de score, la génération (714), par l'ordinateur serveur (104), d'une notification qui indique que la valeur de données est une anomalie et l'envoi de la notification à un service de signalement/d'ordre afin d'amener le service de signalement/d'ordre à transmettre un message d'ordre conçu pour amener les un ou plusieurs ordinateurs clients à cesser, relancer ou lancer un ou plusieurs processus logiciels.</claim-text></claim-text></claim>
<claim id="c-fr-01-0002" num="0002">
<claim-text>Procédé selon la revendication 1, dans lequel, avant la génération de la pluralité de scores à partir de chacun des modèles de la pluralité de modèles, le procédé comprend en outre l'élimination par filtrage d'une première valeur de données historiques parmi les une ou plusieurs valeurs de données historiques compte tenu d'un ou plusieurs événements internes ou externes qui sont simultanés avec un premier intervalle de temps historique qui correspond à la première valeur de données historiques.</claim-text></claim>
<claim id="c-fr-01-0003" num="0003">
<claim-text>Procédé selon la revendication 2, dans lequel un ou plusieurs événements internes sont déterminés compte tenu de :
<claim-text>un ou plusieurs journaux système ; ou<!-- EPO <DP n="45"> --></claim-text>
<claim-text>un ou plusieurs moniteurs de processus internes.</claim-text></claim-text></claim>
<claim id="c-fr-01-0004" num="0004">
<claim-text>Procédé selon la revendication 2, dans lequel un ou plusieurs événements externes sont déterminés compte tenu d'un ou plusieurs flux RSS.</claim-text></claim>
<claim id="c-fr-01-0005" num="0005">
<claim-text>Procédé selon la revendication 1, dans lequel la génération de la valeur de prédiction compte tenu du modèle comprend en outre :
<claim-text>l'estimation, compte tenu des une ou plusieurs valeurs de données historiques concordantes, d'un niveau qui correspond à l'intervalle de temps ;</claim-text>
<claim-text>l'estimation, compte tenu des une ou plusieurs valeurs de données historiques concordantes, d'une tendance qui correspond à l'intervalle de temps ; et</claim-text>
<claim-text>la génération de la valeur de prédiction compte tenu du niveau estimé et de la tendance estimée.</claim-text></claim-text></claim>
<claim id="c-fr-01-0006" num="0006">
<claim-text>Procédé selon la revendication 1, dans lequel la pluralité de modèles comprend : un premier modèle à périodicité quotidienne ;
<claim-text>un deuxième modèle à</claim-text>
<claim-text>périodicité hebdomadaire ; ou</claim-text>
<claim-text>un troisième modèle à</claim-text>
<claim-text>périodicité mensuelle.</claim-text></claim-text></claim>
<claim id="c-fr-01-0007" num="0007">
<claim-text>Procédé selon la revendication 1, comprenant<br/>
en outre :
<claim-text>la détermination du fait qu'un événement périodique qui se produit simultanément avec l'intervalle de temps a amené l'anomalie de la valeur de données ;</claim-text>
<claim-text>la génération d'un nouveau modèle compte tenu de l'événement périodique ; et l'ajout du nouveau modèle à la pluralité de modèles.</claim-text></claim-text></claim>
<claim id="c-fr-01-0008" num="0008">
<claim-text>Procédé selon la revendication 7, dans lequel<!-- EPO <DP n="46"> --> le nouveau modèle est utilisé pour prédire une valeur de prédiction subséquente.</claim-text></claim>
<claim id="c-fr-01-0009" num="0009">
<claim-text>Procédé selon la revendication 7, dans lequel l'événement périodique affecte la quantité de trafic que les un ou plusieurs ordinateurs clients (132) reçoivent pendant que l'événement périodique se produit.</claim-text></claim>
<claim id="c-fr-01-0010" num="0010">
<claim-text>Procédé selon la revendication 1, dans lequel la génération du score compte tenu de la valeur de prédiction et de la valeur de données comprend le calcul d'une différence entre la valeur de prédiction et la valeur de données.</claim-text></claim>
<claim id="c-fr-01-0011" num="0011">
<claim-text>Procédé selon la revendication 1, comprenant en outre la normalisation de la pluralité de scores compte tenu d'un ou plusieurs événements,<br/>
lesdits un ou plusieurs événements comprenant :
<claim-text>une erreur logicielle ;</claim-text>
<claim-text>une défaillance matérielle ;</claim-text>
<claim-text>une erreur de configuration ;</claim-text>
<claim-text>une panne d'alimentation ;</claim-text>
<claim-text>une déconnexion de réseau ;</claim-text>
<claim-text>un plantage de<br/>
base de données ;</claim-text>
<claim-text>un événement<br/>
météorologique ; ou</claim-text>
<claim-text>une<br/>
catastrophe naturelle.</claim-text></claim-text></claim>
<claim id="c-fr-01-0012" num="0012">
<claim-text>Procédé selon la revendication 1, dans lequel la génération du score final compte tenu de la pluralité de scores générés à partir de chacun des modèles de la pluralité de modèles comprend :
<claim-text>la sélection d'un score le plus bas parmi la<!-- EPO <DP n="47"> --> pluralité de scores ;</claim-text>
<claim-text>le calcul d'une moyenne pondérée de la pluralité de scores ; ou</claim-text>
<claim-text>la sélection d'un score le plus élevé parmi la pluralité de scores.</claim-text></claim-text></claim>
<claim id="c-fr-01-0013" num="0013">
<claim-text>Procédé selon la revendication 1, dans lequel la génération du seuil de score comprend :
<claim-text>le calcul du seuil de score compte tenu d'une variance d'au moins un sous-ensemble des une ou plusieurs valeurs de données historiques ; et</claim-text>
<claim-text>l'ajustement du seuil de score compte tenu d'un ou plusieurs événements internes, d'un ou plusieurs événements externes ou d'une ou plusieurs alertes historiques qui ont été amenées à être envoyées par le serveur.</claim-text></claim-text></claim>
<claim id="c-fr-01-0014" num="0014">
<claim-text>Ordinateur serveur (104) comprenant :
<claim-text>un processeur ; et</claim-text>
<claim-text>un support lisible par ordinateur couplé au processeur, le support lisible par ordinateur comportant un code qui, lorsqu'il est exécuté par le processeur, amène le serveur à réaliser le procédé selon l'une quelconque des revendications 1 à 13.</claim-text></claim-text></claim>
</claims>
<drawings id="draw" lang="en"><!-- EPO <DP n="48"> -->
<figure id="f0001" num="1"><img id="if0001" file="imgf0001.tif" wi="161" he="229" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="49"> -->
<figure id="f0002" num="2"><img id="if0002" file="imgf0002.tif" wi="159" he="224" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="50"> -->
<figure id="f0003" num="3"><img id="if0003" file="imgf0003.tif" wi="158" he="178" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="51"> -->
<figure id="f0004" num="4"><img id="if0004" file="imgf0004.tif" wi="158" he="193" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="52"> -->
<figure id="f0005" num="5"><img id="if0005" file="imgf0005.tif" wi="158" he="221" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="53"> -->
<figure id="f0006" num="6"><img id="if0006" file="imgf0006.tif" wi="158" he="148" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="54"> -->
<figure id="f0007" num="7"><img id="if0007" file="imgf0007.tif" wi="140" he="227" img-content="drawing" img-format="tif"/></figure>
</drawings>
<ep-reference-list id="ref-list">
<heading id="ref-h0001"><b>REFERENCES CITED IN THE DESCRIPTION</b></heading>
<p id="ref-p0001" num=""><i>This list of references cited by the applicant is for the reader's convenience only. It does not form part of the European patent document. Even though great care has been taken in compiling the references, errors or omissions cannot be excluded and the EPO disclaims all liability in this regard.</i></p>
<heading id="ref-h0002"><b>Patent documents cited in the description</b></heading>
<p id="ref-p0002" num="">
<ul id="ref-ul0001" list-style="bullet">
<li><patcit id="ref-pcit0001" dnum="US7310590B"><document-id><country>US</country><doc-number>7310590</doc-number><kind>B</kind></document-id></patcit><crossref idref="pcit0001">[0004]</crossref></li>
<li><patcit id="ref-pcit0002" dnum="US20110119100A"><document-id><country>US</country><doc-number>20110119100</doc-number><kind>A</kind></document-id></patcit><crossref idref="pcit0002">[0005]</crossref></li>
<li><patcit id="ref-pcit0003" dnum="US20100027432A"><document-id><country>US</country><doc-number>20100027432</doc-number><kind>A</kind></document-id></patcit><crossref idref="pcit0003">[0006]</crossref></li>
</ul></p>
</ep-reference-list>
</ep-patent-document>
