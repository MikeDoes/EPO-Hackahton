<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE ep-patent-document PUBLIC "-//EPO//EP PATENT DOCUMENT 1.5.1//EN" "ep-patent-document-v1-5-1.dtd">
<!-- This XML data has been generated under the supervision of the European Patent Office -->
<ep-patent-document id="EP19895185A1" file="EP19895185NWA1.xml" lang="en" country="EP" doc-number="3890324" kind="A1" date-publ="20211006" status="n" dtd-version="ep-patent-document-v1-5-1">
<SDOBI lang="en"><B000><eptags><B001EP>ATBECHDEDKESFRGBGRITLILUNLSEMCPTIESILTLVFIROMKCYALTRBGCZEEHUPLSKBAHRIS..MTNORSMESMMAKHTNMD..........</B001EP><B005EP>J</B005EP><B007EP>BDM Ver 2.0.12 (4th of August) -  1100000/0</B007EP></eptags></B000><B100><B110>3890324</B110><B120><B121>EUROPEAN PATENT APPLICATION</B121><B121EP>published in accordance with Art. 153(4) EPC</B121EP></B120><B130>A1</B130><B140><date>20211006</date></B140><B190>EP</B190></B100><B200><B210>19895185.7</B210><B220><date>20191129</date></B220><B240><B241><date>20210630</date></B241></B240><B250>zh</B250><B251EP>en</B251EP><B260>en</B260></B200><B300><B310>201811538662</B310><B320><date>20181213</date></B320><B330><ctry>CN</ctry></B330></B300><B400><B405><date>20211006</date><bnum>202140</bnum></B405><B430><date>20211006</date><bnum>202140</bnum></B430></B400><B500><B510EP><classification-ipcr sequence="1"><text>H04N  19/184       20140101AFI20200619BHEP        </text></classification-ipcr></B510EP><B520EP><classifications-cpc><classification-cpc sequence="1"><text>H04N  19/503       20141101 LI20200710BCEP        </text></classification-cpc><classification-cpc sequence="2"><text>H04N  19/91        20141101 LI20200710BCEP        </text></classification-cpc><classification-cpc sequence="3"><text>H04N  19/44        20141101 LI20200710BCEP        </text></classification-cpc><classification-cpc sequence="4"><text>H04N  19/42        20141101 LI20200710BCEP        </text></classification-cpc><classification-cpc sequence="5"><text>H04N  19/119       20141101 LI20200710BCEP        </text></classification-cpc><classification-cpc sequence="6"><text>H04N  19/184       20141101 LI20200710BCEP        </text></classification-cpc></classifications-cpc></B520EP><B540><B541>de</B541><B542>VERFAHREN UND VORRICHTUNG ZUR CODIERUNG UND DECODIERUNG VON PUNKTWOLKEN</B542><B541>en</B541><B542>POINT CLOUD ENCODING AND DECODING METHOD AND DEVICE</B542><B541>fr</B541><B542>PROCÉDÉ ET DISPOSITIF DE CODAGE ET DE DÉCODAGE DE NUAGES DE POINTS</B542></B540><B590><B598>5</B598></B590></B500><B700><B710><B711><snm>Huawei Technologies Co., Ltd.</snm><iid>101903059</iid><irf>P57915/EP</irf><adr><str>Huawei Administration Building, 
Bantian, Longgang District</str><city>Shenzhen Guangdong 518129</city><ctry>CN</ctry></adr></B711></B710><B720><B721><snm>ZHANG, Dejun</snm><adr><str>Huawei Administration Building, Bantian, Longgang 
District</str><city>Shenzhen, Guangdong 518129</city><ctry>CN</ctry></adr></B721><B721><snm>CAI, Kangying</snm><adr><str>Huawei Administration Building, Bantian, Longgang 
District</str><city>Shenzhen, Guangdong 518129</city><ctry>CN</ctry></adr></B721></B720><B740><B741><snm>Körber, Martin Hans</snm><iid>101424958</iid><adr><str>Mitscherlich PartmbB 
Patent- und Rechtsanwälte 
Sonnenstrasse 33</str><city>80331 München</city><ctry>DE</ctry></adr></B741></B740></B700><B800><B840><ctry>AL</ctry><ctry>AT</ctry><ctry>BE</ctry><ctry>BG</ctry><ctry>CH</ctry><ctry>CY</ctry><ctry>CZ</ctry><ctry>DE</ctry><ctry>DK</ctry><ctry>EE</ctry><ctry>ES</ctry><ctry>FI</ctry><ctry>FR</ctry><ctry>GB</ctry><ctry>GR</ctry><ctry>HR</ctry><ctry>HU</ctry><ctry>IE</ctry><ctry>IS</ctry><ctry>IT</ctry><ctry>LI</ctry><ctry>LT</ctry><ctry>LU</ctry><ctry>LV</ctry><ctry>MC</ctry><ctry>MK</ctry><ctry>MT</ctry><ctry>NL</ctry><ctry>NO</ctry><ctry>PL</ctry><ctry>PT</ctry><ctry>RO</ctry><ctry>RS</ctry><ctry>SE</ctry><ctry>SI</ctry><ctry>SK</ctry><ctry>SM</ctry><ctry>TR</ctry></B840><B844EP><B845EP><ctry>BA</ctry></B845EP><B845EP><ctry>ME</ctry></B845EP></B844EP><B848EP><B849EP><ctry>KH</ctry></B849EP><B849EP><ctry>MA</ctry></B849EP><B849EP><ctry>MD</ctry></B849EP><B849EP><ctry>TN</ctry></B849EP></B848EP><B860><B861><dnum><anum>CN2019122216</anum></dnum><date>20191129</date></B861><B862>zh</B862></B860><B870><B871><dnum><pnum>WO2020119487</pnum></dnum><date>20200618</date><bnum>202025</bnum></B871></B870></B800></SDOBI>
<abstract id="abst" lang="en">
<p id="pa01" num="0001">Point cloud encoding and decoding methods are provided. The point cloud encoding method includes: obtaining subgroup information of N frames of point clouds, where the subgroup information includes a quantity M of subgroups into which the N frames of point clouds are divided and/or a quantity of frames of point clouds included in each of one or more subgroups among the M subgroups; and writing the subgroup information of the N frames of point clouds into a bitstream The point cloud decoding method includes: receiving a bitstream; parsing the bitstream to obtain subgroup information, where the subgroup information includes a quantity M of subgroups into which N frames of point clouds are divided and/or a quantity of frames of point clouds included in each of one or more subgroups among the M subgroups; and decoding the N frames of point clouds based on the subgroup information. Using embodiments of this application helps improve encoding and decoding efficiency of point cloud data.<img id="iaf01" file="imgaf001.tif" wi="99" he="73" img-content="drawing" img-format="tif"/></p>
</abstract>
<description id="desc" lang="en"><!-- EPO <DP n="1"> -->
<p id="p0001" num="0001">This application claims priority to <patcit id="pcit0001" dnum="CN201811538662" dnum-type="L"><text>Chinese Patent Application No. 201811538662.9</text></patcit>, filed with the China National Intellectual Property Administration on December 13, 2018 and entitled "POINT CLOUD ENCODING AND DECODING METHOD AND APPARATUS", which is incorporated herein by reference in its entirety.</p>
<heading id="h0001"><b>TECHNICAL FIELD</b></heading>
<p id="p0002" num="0002">This application relates to the point cloud field, and in particular, to a point cloud encoding method and apparatus, and a point cloud decoding method and apparatus.</p>
<heading id="h0002"><b>BACKGROUND</b></heading>
<p id="p0003" num="0003">With continuous development of a 3D sensor(for example, a 3D scanner) technology, it is increasingly convenient to collect point cloud data, and the point cloud data is collected on an increasingly large scale. Therefore, how to effectively code the point cloud data is an urgent problem to be resolved.</p>
<p id="p0004" num="0004">In existing point cloud encoding and decoding processes, when a signal is processed and coded based on a fixed frame length, because correlation of patches in a plurality of consecutive frames of point clouds is not considered, spatial consistency ofpatches having a matching relationship cannot be effectively ensured. As a result, video coding performance and patch auxiliary information coding performance are degraded.</p>
<heading id="h0003"><b>SUMMARY</b></heading>
<p id="p0005" num="0005">Embodiments of this application provide a point cloud encoding method and apparatus, and a point cloud decoding method and apparatus, to help improve coding efficiency of point cloud data.</p>
<p id="p0006" num="0006">According to a first aspect, an embodiment of this application provides a point cloud encoding method, including:<br/>
obtaining subgroup information of N frames of point clouds, where the subgroup information includes a quantity M of subgroups into which the N frames of point clouds are divided and/or a quantity of frames of point clouds included in each of one or more subgroups among the M subgroups; writing the subgroup information of the N frames of point clouds into a bitstream; and encoding the N frames of point clouds based on the subgroup<!-- EPO <DP n="2"> --> information of the N frames of point clouds.</p>
<p id="p0007" num="0007">The M subgroups are obtained by grouping the N frames of point clouds in an adaptive grouping manner. Specifically, the method further includes: pre-dividing a plurality of frames of point clouds in the N frames of point clouds to obtain a pre-divided subgroup; and determining the pre-divided subgroup is to be one of the M subgroups based on characteristic information of the pre-divided subgroup, where the characteristic information is used to represent a size of an occupancy map of a point cloud in the pre-divided subgroup.</p>
<p id="p0008" num="0008">In an embodiment, the encoding the N frames of point clouds based on the subgroup information of the N frames of point clouds specifically includes: the subgroup information of the N frames of point clouds is used to decode auxiliary information of the patch in the N frames of point clouds; and then the N frames of point clouds are encoded based on the auxiliary information of the patch in the N frames of point clouds.</p>
<p id="p0009" num="0009">In a possible embodiment, the writing the subgroup information of the N frames of point clouds into a bitstream includes: writing N<sub>0</sub>, N<sub>1</sub>, ..., N<sub>M-1</sub>, and/or M into the bitstream, where M is greater than or equal to 1; or writing (M-1) values in values of N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> and M into the bitstream, where M is greater than or equal to 1, N<sub>m</sub> represents a quantity of frames of point clouds in an i<sup>th</sup> subgroup of theM subgroups, and m = 0, 1, ..., and M-1.</p>
<p id="p0010" num="0010">The writing N<sub>0</sub>, N<sub>1</sub>,..., N<sub>M-1</sub>, and/orM into the bitstream includes:<br/>
writing only M into the bitstream, where M = 1 in this case, that is, N frames of point clouds are divided into one group; writing N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> into the bitstream, where M is greater than or equal to 1; or writing N<sub>0</sub>, N<sub>1</sub>, ..., N<sub>M-1</sub>, and M into the bitstream, where M is greater than or equal to 1.</p>
<p id="p0011" num="0011">In a possible embodiment, the writing the subgroup information of the N frames of point clouds into a bitstream further includes:<br/>
writing T frames in N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> and/orT into the bitstream, where T is greater than 0 and less than M-1.</p>
<p id="p0012" num="0012">T frames in N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> may each mean a quantity of frames of point clouds included in each of T consecutive subgroups in terms of a division order among the M subgroups.</p>
<p id="p0013" num="0013">It should be noted herein that one or more of N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> can be written into the bitstream by using a fixed-length encoding scheme or a variable-length encoding scheme. The fixed-length encoding scheme specifically means that encoding is performed by using a fixed quantity of bits. The variable-length encoding scheme includes but is not limited to an arithmetic encoding scheme and an exponential Columbus encoding scheme.</p>
<p id="p0014" num="0014">In a possible embodiment, the writing the subgroup information of the N frames of point clouds into a bitstream includes: generating one or more bit strings based on a quantity of frames of point clouds in one or more<!-- EPO <DP n="3"> --> subgroups among the M subgroups, where a length of an s<sup>th</sup> bit string in the one or more bit strings is a quantity of frames of point clouds included in an s<sup>th</sup> subgroup of the one or more subgroups; and writing the one or more bit strings into the bitstream In this manner, for theN frames of point clouds, a bit string (that is, M bit strings) including N bits may be finally obtained, and the N bits can be encoded by using N bits, or encoded by using an arithmetic encoding scheme.</p>
<p id="p0015" num="0015">In a possible embodiment, the one or more subgroups include an (s-1)<sup>th</sup> subgroup and an s<sup>th</sup> subgroup, and a value of a bit in a bit string corresponding to the (s-1)<sup>th</sup> subgroup is different from a value of a bit in a bit string corresponding to the s<sup>th</sup> subgroup. For example, the value of the bit in the bit string corresponding to the (s-1)<sup>th</sup> subgroup is a first identifier, and the value of the bit in the bit string corresponding to the s<sup>th</sup> subgroup is a second identifier. A value of a bit in a bit string corresponding to an (s+1)<sup>th</sup> subgroup may be a first identifier or a third identifier, and the third identifier is different from both the first identifier and the second identifier.</p>
<p id="p0016" num="0016">Optionally, the first identifier may be 0 or 1, the second identifier may be 0 or 1, and the first identifier is different from the second identifier.</p>
<p id="p0017" num="0017">In a possible embodiment, values of bits in a bit string corresponding to each of the one or more subgroups are the same. It should be noted that, that values of bits in a bit string corresponding to each subgroup are the same means that values of all bits in the bit string corresponding to each subgroup are the same.</p>
<p id="p0018" num="0018">It should be noted herein that one subgroup corresponds to one bit string, and one bit of the bit string represents a frame of point cloud in one subgroup. Therefore, a quantity of frames of point clouds included in the subgroup corresponding to the bit string can be determined based on a quantity of bits in the bit string (that is, a length of the bit string). For a bit string corresponding to one subgroup, values of all bits in the bit string are the same, and values of bits in two bit strings respectively corresponding to two adjacent subgroups in terms of a division order are different. Therefore, quantities of frames of point clouds respectively included in two adjacent subgroups in terms of a division order can be distinguished.</p>
<p id="p0019" num="0019">In a possible embodiment, the encoding method further includes: writing rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in a current subgroup into the bitstream</p>
<p id="p0020" num="0020">The rotation angle information includes a specific rotation angle value or a rotation angle index For example, if a rotation angle value of a patch is 0, it indicates that the patch does not rotate. If the rotation angle value of the patch is 20, it indicates that the patch rotates by 20 degrees. For another example, if a rotation angle index of a patch is 0, it indicates that the patch does not rotate. If the rotation angle index of the patch is 1, it indicates that the patch rotates by 15 degrees. If the rotation angle index of the patch is 2, it indicates that the patch rotates by 30 degrees.</p>
<p id="p0021" num="0021">The rotation angle information can be written into the bits tream by using a fixed-length encoding scheme<!-- EPO <DP n="4"> --> or a variable-length encoding scheme.</p>
<p id="p0022" num="0022">It should be noted that the one or more matched patches in the patch set of the first frame of point cloud in the current subgroup are patches for which a matched patch is found in a patch set of a reference frame of the first frame of point cloud in the current subgroup. The reference frame of the first frame of point cloud in the current subgroup may be a point cloud in a previous subgroup of the current subgroup.</p>
<p id="p0023" num="0023">The one or more matched patches in the patch set of the first frame of point cloud in the current subgroup are patches for which a matched patch is found in a patch set of a reference frame of the first frame of point cloud in the current subgroup.</p>
<p id="p0024" num="0024">According to a second aspect, an embodiment of this application provides a point cloud decoding method, including:<br/>
receiving a bitstream; parsing the bitstream to obtain subgroup information, where the subgroup information includes a quantity M of subgroups into which N frames of point clouds are divided and/or a quantity of frames of point clouds included in each of one or more subgroups among the M subgroups; and decoding the N frames of point clouds based on the subgroup information.</p>
<p id="p0025" num="0025">The decoding the N frames of point clouds based on the subgroup information includes: obtaining auxiliary information of a patch in the N frames of point clouds based on the subgroup information, and reconstructing the N frames of point clouds based on the auxiliary information of the patch in the N frames of point clouds.</p>
<p id="p0026" num="0026">In a possible embodiment, the parsing the bitstream to obtain subgroup information includes: parsing the bitstream to obtain a quantity of frames of point clouds in each of the M subgroups and/orM, where M is greater than or equal to 1; or parsing the bitstream to obtain M and a quantity of frames of point clouds in each of M-1 subgroups, where M is greaterthan orequal to 1.</p>
<p id="p0027" num="0027">The parsing the bitstream to obtain a quantity of frames of point clouds in each of the M subgroups and/orM includes:<br/>
parsing the bitstream to obtain only M, where M = 1 in this case; parsing the bitstream to obtain only N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub>, where M is greater than or equal to 1; or parsing the bitstream to first obtain M, and then obtain N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> based on M, where M is greater than or equal to 1 in this case; N<sub>m</sub> represents a quantity of frames of point clouds in an m<sup>th</sup> subgroup of the M subgroups, and m = 0, 1, ..., and M-1.</p>
<p id="p0028" num="0028">It should be noted that M = 1 means that the N frames of point clouds are divided into one subgroup, and the subgroup includes the N frames of point clouds. Therefore, a decoder side can deduce, according to M = 1, that an encoder side divides the N frames of point clouds into one subgroup, where the subgroup includes the N frames of point clouds. Further, the decoderside can decode the N frames of point clouds based on M and N.<!-- EPO <DP n="5"> --></p>
<p id="p0029" num="0029">In a possible embodiment, the decoding the N frames of point clouds based on the subgroup information includes:<br/>
determining a quantity of frames of point clouds in a target subgroup based on N and a quantity of frames of point clouds in each of M-1 subgroups, where the target subgroup is a subgroup other than theM-1 subgroups in the M subgroups, and M is greater than or equal to 1; and decoding the N frames of point clouds based on a quantity of frames of point clouds included in each of theM subgroups.</p>
<p id="p0030" num="0030">In a possible embodiment, some of the N frames of point clouds are grouped adaptively, and the other frames of point clouds are grouped based on a fixed frame length. Therefore, the bitstream can be parsed to obtain T frames in N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> and/or T. T frames in N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> each mean a quantity of frames of point clouds included in each of T consecutive subgroups in terms of a division order among the M subgroups. After the bitstream is parsed to obtain T frames in N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> and/orT, a quantity P of frames of point clouds other than point clouds included in the T subgroups in the M subgroups is obtained based on N and T frames in N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub>. Because the P frames of point clouds are grouped based on a fixed frame length, a quantity of subgroups into which the P frames ofpoint clouds are divided is determined based on P and the fixed frame length, that is, P/fixed frame length. Further, M and a quantity of frames of point clouds included in each of the M subgroups are determined, where M = T + P/fixed frame length.</p>
<p id="p0031" num="0031">In a possible embodiment, the parsing the bitstream to obtain subgroup information includes: parsing the bitstream to obtain one or more bit strings, where a length of an s<sup>th</sup> bit string in the one or more bit strings is a quantity of frames ofpoint clouds included in an s<sup>th</sup> subgroup of the one or more subgroups; and one ormore subgroups correspond to one or more bit strings.</p>
<p id="p0032" num="0032">In a possible embodiment, the decoding the N frames of point clouds based on the subgroup information includes: obtaining a quantity of frames of point clouds included in each of one or more subgroups based on a length of each of one or more bit strings; determining a quantity of frames ofpoint clouds included in each of the M subgroups, where the M subgroups include one or more subgroups; and decoding the N frames of point clouds based on the quantity of frames of point clouds included in each of the M subgroups.</p>
<p id="p0033" num="0033">When a plurality of bit strings are M bit strings, the quantity of frames of point clouds included in each of the M subgroups can be determined based on a length of each of the plurality of bit strings (that is, the M bit strings).</p>
<p id="p0034" num="0034">When the plurality of bit strings are M-1 bit strings, a quantity of frames of point clouds included in each of the M-1 subgroups can be determined based on a length of each of the M-1 bit strings. Then, a quantity of frames of point clouds included in the target subgroup is determined based on N and the quantity of frames of point clouds included in each of the M-1 subgroups, where the M-1 subgroups correspond to the M-1 bit strings, and the<!-- EPO <DP n="6"> --> target subgroup is a subgroup other than the M-1 subgroups in the M subgroups.</p>
<p id="p0035" num="0035">When the plurality of bit strings are T bit strings, where T is greater than 0 and less than M-1, a quantity of frames of point clouds included in each of the T subgroups can be determined based on a length of each of the T bit strings, and the T bit strings correspond to the T subgroups. Then, a quantity P of frames of point clouds other than point clouds included in the T subgroups can be determined based on N and the quantity of frames of point clouds included in each of the T subgroups. Because the P frames of point clouds are grouped based on a fixed frame length, a quantity of subgroups into which the P frames of point clouds are divided is determined based on P and the fixed frame length, that is, P/fixed frame length. Further, M and a quantity of frames of point clouds included in each of the M subgroups are determined, where M = T + P/fixed frame length.</p>
<p id="p0036" num="0036">In a possible embodiment, the one or more subgroups include an (s-1)<sup>th</sup> subgroup and an s<sup>th</sup> subgroup, and a value of a bit in a bit string corresponding to the (s-1)<sup>th</sup> subgroup is different from a value of a bit in a bit string corresponding to the s<sup>th</sup> subgroup.</p>
<p id="p0037" num="0037">In a possible embodiment, values of bits in a bit string corresponding to each of the one or more subgroups are the same. That values of bits in a bit string corresponding to each subgroup are the same means that values of all bits in the bit string corresponding to each subgroup are the same.</p>
<p id="p0038" num="0038">It should be noted that, a value of a bit in a bit string corresponding to an m<sup>th</sup> subgroup is a first identifier; when a zeroth bit in the m<sup>th</sup> subgroup is a first identifier, a value of an n<sup>th</sup> bit is a first identifier, and a value of an (n+1)<sup>th</sup> bit is not a first identifier, a quantity of frames in the m<sup>th</sup> subgroup is determined to be n+1. The first identifier is, for example, 0 or 1.</p>
<p id="p0039" num="0039">In a possible embodiment, the method further includes: parsing the bitstream to obtain rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in a current subgroup; and determining rotation angle information of a matched patch in a patch set of a non-first frame of point cloud in the current subgroup based on the rotation angle information of the one or more matched patches in the patch set of the first frame of point cloud.</p>
<p id="p0040" num="0040">The one or more matched patches in the patch set of the first frame of point cloud in the current subgroup are patches for which a matched patch is found in a patch set of a reference frame of the first frame of point cloud in the current subgroup. The reference frame of the first frame of point cloud in the current subgroup may be a point cloud in a previous subgroup of the current subgroup.</p>
<p id="p0041" num="0041">The non-first frame of point cloud in the current subgroup is a point cloud other than the first frame in the current subgroup. The matched patch in the patch set of the non-first frame of point cloud in the current subgroup is a patch that is in the patch set of the non-first frame of point cloud in the current subgroup and that has a matching<!-- EPO <DP n="7"> --> relationship with the one or more matched patches in the patch set of the first frame of point cloud.</p>
<p id="p0042" num="0042">The rotation angle information includes a specific rotation angle value or a rotation angle index For example, if a rotation angle value of a patch is 0, it indicates that the patch does not rotate. If the rotation angle value of the patch is 20, it indicates that the patch rotates by 20 degrees. For another example, if a rotation angle index of a patch is 0, it indicates that the patch does not rotate. If the rotation angle index of the patch is 1, it indicates that the patch rotates by 15 degrees. If the rotation angle index of the patch is 2, it indicates that the patch rotates by 30 degrees.</p>
<p id="p0043" num="0043">It can be learned that, in the solution of this embodiment of this application, subgroup information of N frames of point clouds obtained by grouping the N frames of point clouds in an adaptive grouping manner is written into a bitstream, and the subgroup information is obtained by decoding at a decoder side. In the adaptive grouping manner, correlation of patches among a plurality of consecutive frames of point clouds is fully considered. This fully ensures spatial consistency of patches having a matching relationship, and improves coding efficiency of point clouds. The subgroup information obtained through adaptive grouping is used to guide the decoder side in correctly decoding the point cloud data.</p>
<p id="p0044" num="0044">According to a third aspect, an embodiment of this application provides another point cloud encoding method, including:<br/>
obtaining rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in a current subgroup; and writing the rotation angle information of the one or more matched patches in the patch set of the first frame of point cloud in the current subgroup into a bitstream</p>
<p id="p0045" num="0045">The current subgroup is obtained by grouping the N frames of point clouds in an adaptive grouping manner.</p>
<p id="p0046" num="0046">A non-first frame of point cloud in the current subgroup is a point cloud other than the first frame in the current subgroup. The one or more matched patches in the patch set of the first frame of point cloud in the current subgroup are patches for which a matched patch is found in a patch set of a reference frame of the first frame of point cloud in the current subgroup. The reference frame of the first frame of point cloud in the current subgroup may be a point cloud in a previous subgroup of the current subgroup.</p>
<p id="p0047" num="0047">It should be noted that the rotation angle information of the one or more matched patches in the patch set of the first frame of point cloud in the current subgroup can be written into the bits tream by using a fixed-length encoding scheme or a variable-length encoding scheme. The fixed-length encoding scheme includes but is not limited to a fixed-bit encoding scheme, and the variable-length encoding scheme includes but is not limited to an arithmetic encoding scheme and an exponential Columbus encoding scheme.</p>
<p id="p0048" num="0048">The rotation angle information includes a specific rotation angle value or a rotation angle index For<!-- EPO <DP n="8"> --> example, if a rotation angle value of a patch is 0, it indicates that the patch does not rotate. If the rotation angle value of the patch is 20, it indicates that the patch rotates by 20 degrees. For another example, if a rotation angle index of a patch is 0, it indicates that the patch does not rotate. If the rotation angle index of the patch is 1, it indicates that the patch rotates by 15 degrees. If the rotation angle index of the patch is 2, it indicates that the patch rotates by 30 degrees.</p>
<p id="p0049" num="0049">According to a fourth aspect, an embodiment of this application provides anotherpoint cloud decoding method, including:<br/>
receiving a bitstream; parsing the bitstream to obtain rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in a current subgroup; and determining rotation angle information of a matched patch in a patch set of a non-first frame of point cloud in the current subgroup basedon the rotation angle information of the one or more matched patches in the patch set of the first frame of point cloud, where rotation angle information of a matched patch in a point cloud in the current subgroup is used to decode the point cloud in the current subgroup.</p>
<p id="p0050" num="0050">The one or more matched patches in the patch set of the first frame of point cloud in the current subgroup are patches for which a matched patch is found in a patch set of a reference frame of the first frame of point cloud in the current subgroup. The reference frame of the first frame of point cloud in the current subgroup may be a point cloud in a previous subgroup of the current subgroup.</p>
<p id="p0051" num="0051">A non-first frame of point cloud in the current subgroup is a point cloud other than the first frame in the current subgroup. The matched patch in the patch set of the non-first frame of point cloud in the current subgroup is a patch that is in the patch set of the non-first frame of point cloud in the current subgroup and that has a matching relationship with the one or more matched patches in the patch set of the first frame of point cloud.</p>
<p id="p0052" num="0052">It should be noted that decoding the current subgroup includes but is not limited to the rotation angle information of the matched patch in the point cloud in the current subgroup, and may further include rotation angle information of a non-matched patch in a point cloud in the current subgroup.</p>
<p id="p0053" num="0053">The rotation angle information includes a specific rotation angle value or a rotation angle index For example, if a rotation angle value of a patch is 0, it indicates that the patch does not rotate. If the rotation angle value of the patch is 20, it indicates that the patch rotates by 20 degrees. For another example, if a rotation angle index of a patch is 0, it indicates that the patch does not rotate. If the rotation angle index of the patch is 1, it indicates that the patch rotates by 15 degrees. If the rotation angle index of the patch is 2, it indicates that the patch rotates by 30 degrees.</p>
<p id="p0054" num="0054">It should be noted that the bitstream can be decoded by using a fixed-length decoding scheme or a variable-length decoding scheme to obtain the rotation angle information of the one or more matched patches. The fixed-length decoding scheme includes but is not limited to a fixed-bit decoding scheme, and the variable-length<!-- EPO <DP n="9"> --> decoding scheme includes but is not limited to an arithmetic decoding scheme and an exponential Columbus decoding scheme.</p>
<p id="p0055" num="0055">According to a fifth aspect, an embodiment of this application provides another point cloud encoding method, including:<br/>
determining indication information, where the indication information is used to indicate whether to encode a point cloud according to a target encoding method, and the target encoding method includes some or all steps of the point cloud encoding method according to the first aspect or the point cloud encoding method according to the third aspect; and writing the indication information into a bitstream</p>
<p id="p0056" num="0056">According to a sixth aspect, an embodiment of this application provides anotherpoint cloud decoding method, including:<br/>
parsing a bitstream to obtain indication information, where the indication information is used to indicate whether to decode a point cloud according to a target decoding method, and the target decoding method includes some or all steps of the point cloud encoding method according to the second aspect or the point cloud encoding method according to the fourth aspect; and when the indication information is used to indicate to decode the point cloud according to the target decoding method, decoding the point cloud according to the target decoding method.</p>
<p id="p0057" num="0057">According to a seventh aspect, an embodiment of this application provides a point cloud encoding apparatus, including:<br/>
an obtaining unit, configured to obtain subgroup information of N frames of point clouds, where the subgroup information includes a quantity M of subgroups into which the N frames of point clouds are divided and/or a quantity of frames of point clouds included in each of one or more subgroups among the M subgroups; and an encoding unit, configured to write the subgroup information of the N frames of point clouds into a bitstream, where the encoding unit is further configured to encode the N frames of point clouds based on the subgroup information.</p>
<p id="p0058" num="0058">In a possible embodiment, the encoding apparatus further includes:<br/>
a grouping unit, configured to divide the N frames of point clouds into M subgroups, where the dividing the N frames of point clouds into M subgroups includes: pre-dividing a plurality of frames of point clouds in the N frames of point clouds to obtain a pre-divided subgroup; and determining the pre-divided subgroup to be one of the M subgroups based on characteristic information of the pre-divided subgroup, where the characteristic information is used to represent a size of an occupancy map of a point cloud in the pre-divided subgroup.</p>
<p id="p0059" num="0059">In a possible embodiment, in terms of writing the subgroup information of the N frames of point clouds into a bitstream, the encoding unit is specifically configured to: write N<sub>0</sub>, N<sub>1</sub>, ..., N<sub>M-1</sub>, and/or M into the bitstream, where M is greater than or equal to 1; or write (M-1) values in values of N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> and M into the bitstream,<!-- EPO <DP n="10"> --> where M is greater than or equal to 1, N<sub>m</sub> represents a quantity of frames of point clouds in an m<sup>th</sup> subgroup of the M subgroups, and m = 0, 1, ..., and M-1.</p>
<p id="p0060" num="0060">In a possible embodiment, in terms of writing the subgroup information of the N frames of point clouds into a bitstream, the encoding unit is specifically configured to: generate one or more bit strings based on a quantity of frames of point clouds in one or more subgroups among the M subgroups, where a length of an s<sup>th</sup> bit string in the one or more bit strings is a quantity of frames of point clouds included in an s<sup>th</sup> subgroup of the one or more subgroups; and write the one or more bit strings into the bitstream</p>
<p id="p0061" num="0061">In a possible embodiment, the one or more subgroups include an (s-1)<sup>th</sup> subgroup and an s<sup>th</sup> subgroup, and a value of a bit in a bit string corresponding to the (s-1)<sup>th</sup> subgroup is different from a value of a bit in a bit string corresponding to the s<sup>th</sup> subgroup.</p>
<p id="p0062" num="0062">In a possible embodiment, values of bits in a bit string corresponding to each of the one or more subgroups are the same.</p>
<p id="p0063" num="0063">In a possible embodiment, the encoding unit is further configured to: write rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in a current subgroup into the bitstream.</p>
<p id="p0064" num="0064">According to an eighth aspect, an embodiment of this application provides a point cloud decoding apparatus, including:<br/>
a receiving unit, configured to receive a bitstream; a parsing unit, configured to parse the bitstream to obtain subgroup information, where the subgroup information includes a quantity M of subgroups into which N frames of point clouds are divided and/or a quantity of frames of point clouds included in each of one or more subgroups among the M subgroups; and a decoding unit, configured to decode the N frames of point clouds based on the subgroup information.</p>
<p id="p0065" num="0065">In a possible embodiment, the parsing unit is specifically configured to: parse the bitstream to obtain a quantity of frames of point clouds in each of the M subgroups and/or M, where M is greater than or equal to 1; or parse the bitstream to obtain M and a quantity of frames of point clouds in each of M-1 subgroups, where M is greater than or equal to 1.</p>
<p id="p0066" num="0066">In a possible embodiment, the decoding unit is specifically configured to: determine a quantity of frames of point clouds in a target subgroup based on N and a quantity of frames of point clouds in each of M-1 subgroups, where the target subgroup is a subgroup other than the M-1 subgroups in the M subgroups, and M is greater than or equal to 1; and decode the N frames of point clouds based on a quantity of frames of point clouds included in each of the M subgroups.</p>
<p id="p0067" num="0067">In a possible embodiment, the parsing unit is specifically configured to parse the bitstream to obtain one<!-- EPO <DP n="11"> --> or more bit strings, where a length of an s<sup>th</sup> bit string in the one or more bit strings is a quantity of frames of point clouds included in an s<sup>th</sup> subgroup of the one or more subgroups; and one or more subgroups correspond to one or more bit strings.</p>
<p id="p0068" num="0068">In a possible embodiment, the decoding unit is specifically configured to: obtain a quantity of frames of point clouds included in each of one or more subgroups based on a length of each of one or more bit strings; determine a quantity of frames of point clouds included in each of the M subgroups, where the M subgroups include one or more subgroups; and decode the N frames of point clouds based on the quantity of frames of point clouds included in each of the M subgroups.</p>
<p id="p0069" num="0069">In a possible embodiment, the one or more subgroups include an (s-1)<sup>th</sup> subgroup and an s<sup>th</sup> subgroup, and a value of a bit in a bit string corresponding to the (s-1)<sup>th</sup> subgroup is different from a value of a bit in a bit string corresponding to the s<sup>th</sup> subgroup.</p>
<p id="p0070" num="0070">In a possible embodiment, values of bits in a bit string corresponding to each of the one or more subgroups are the same.</p>
<p id="p0071" num="0071">In a possible embodiment, the parsing unit is further configured to: parse the bitstream to obtain rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in a current subgroup; and determine rotation angle information of a matched patch in a patch set of a non-first frame of point cloud in the current subgroup based on the rotation angle information of the one or more matched patches in the patch set of the first frame of point cloud.</p>
<p id="p0072" num="0072">According to a ninth aspect, an embodiment of this application provides another point cloud encoding apparatus, including:
<ul id="ul0001" list-style="none" compact="compact">
<li>an obtaining unit, configured to obtain rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in a current subgroup; and</li>
<li>an encoding unit, configured to write the rotation angle information of the one or more matched patches in the patch set of the first frame of point cloud in the current subgroup into the bitstream</li>
</ul></p>
<p id="p0073" num="0073">According to a tenth aspect, an embodiment of this application provides another point cloud decoding apparatus, including:
<ul id="ul0002" list-style="none" compact="compact">
<li>a receiving unit, configured to receive a bitstream;</li>
<li>a decoding unit, configured to parse the bitstream to obtain rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in a current subgroup; and</li>
<li>a determining unit, configured to determine rotation angle information of a matched patch in a patch set of a non-first frame of point cloud in the current subgroup based on the rotation angle information of the one or more<!-- EPO <DP n="12"> --> matched patches in the patch set of the first frame of point cloud, where</li>
<li>rotation angle information of a matched patch in a point cloud in the current subgroup is used to decode the point cloud in the current subgroup.</li>
</ul></p>
<p id="p0074" num="0074">According to an eleventh aspect, an embodiment of this application provides another point cloud encoding apparatus, including: a determining unit, configured to determine indication information, where the indication information is used to indicate whether to encode a point cloud according to a target encoding method, and the target encoding method includes some or all steps of the point cloud encoding method according to the first aspect or the point cloud encoding method according to the third aspect; and<br/>
an encoding unit, configured to write the indication information into a bitstream</p>
<p id="p0075" num="0075">According to a twelfth aspect, an embodiment of this application provides anotherpoint cloud decoding apparatus, including:<br/>
a parsing unit, configured to parse a bitstream to obtain indication information, where the indication information is used to indicate whether to decode a point cloud according to a target decoding method, and the target decoding method includes some or all steps of the point cloud encoding method according to the second aspect or the point cloud encoding method according to the fourth aspect; and a decoding unit, configured to: when the indication information is used to indicate to decode the point cloud according to the target decoding method, decode the point cloud according to the target decoding method.</p>
<p id="p0076" num="0076">According to a thirteenth aspect, a coding apparatus is provided, including a memory and a processor where the memory is configured to store program code; the processor is configured to invoke the program code, to perform any point cloud coding method according to the first aspect and possible designs of the first aspect, or the second aspect and possible designs of the second aspect.</p>
<p id="p0077" num="0077">According to a fourteenth aspect, an encoding apparatus is provided, including a memory and a processor, where the memory is configured to store program code; and the processor is configured to invoke the program code, to perform the point cloud encoding method according to the third aspect.</p>
<p id="p0078" num="0078">According to a fifteenth aspect, a decoding apparatus is provided, including a memory and a processor where the memory is configured to store program code; and the processor is configured to invoke the program code, to perform the point cloud encoding method according to the fourth aspect.</p>
<p id="p0079" num="0079">This application further provides a computer-readable storage medium, where the computer-readable storage medium includes program code; and when the program code is run on a computer, the computer is enabled to perform any point cloud coding method according to the first aspect and possible designs of the first aspect, or the second aspect and possible designs of the second aspect.<!-- EPO <DP n="13"> --></p>
<p id="p0080" num="0080">This application further provides a computer-readable storage medium, where the computer-readable storage medium includes program code; and when the program code is run on a computer, the computer is enabled to perform the point cloud encoding method according to the third aspect.</p>
<p id="p0081" num="0081">This application further provides a computer-readable storage medium, where the computer-readable storage medium includes program code; and when the program code is run on a computer, the computer is enabled to perform the point cloud encoding method according to the fourth aspect.</p>
<p id="p0082" num="0082">It may be understood that for beneficial effects of any codec, processing apparatus, codec apparatus, and computer-readable storage medium provided above, refer to beneficial effects of the method embodiments according to the foregoing corresponding aspects. Details are not described again.</p>
<p id="p0083" num="0083">These aspects or other aspects of the present invention are clearer and easier to understand in description of the following embodiments.</p>
<heading id="h0004"><b>BRIEF DESCRIPTION OF DRAWINGS</b></heading>
<p id="p0084" num="0084">To describe the technical solutions in the embodiments of the present invention or in the prior art more clearly, the following briefly describes the accompanying drawings used for describing the embodiments or the prior art. It is clear that the accompanying drawings in the following descriptions show merely some embodiments of the present invention, and a person of ordinary skill in the art may derive other drawings from these accompanying drawings without creative efforts.
<ul id="ul0003" list-style="none" compact="compact">
<li><figref idref="f0001">FIG. 1</figref> is a schematic block diagram of an example point cloud coding systemthat is applicable to an embodiment of this application;</li>
<li><figref idref="f0002">FIG. 2</figref> is a schematic block diagram of an example encoderthat is applicable to an embodiment of this application;</li>
<li><figref idref="f0003">FIG. 3</figref> is a schematic diagram of a point cloud, a patch in the point cloud, and an occupancy map of the point cloud that are applicable to an embodiment of this application;</li>
<li><figref idref="f0004">FIG. 4</figref> is a schematic block diagram of an example decoder that is applicable to an embodiment of this application;</li>
<li><figref idref="f0005">FIG. 5</figref> is a schematic flowchart of a point cloud encoding method according to this application;</li>
<li><figref idref="f0006">FIG. 6</figref> is a schematic diagram of a correspondence between a sliding window, a step size, and a pre-divided subgroup according to an embodiment of this application;</li>
<li><figref idref="f0007">FIG. 7</figref> is a schematic flowchart of a method for determining a subgroup according to an embodiment of<!-- EPO <DP n="14"> --> this application;</li>
<li><figref idref="f0008">FIG. 8A</figref> is a schematic diagram of a process of determining a subgroup according to an embodiment of this application;</li>
<li><figref idref="f0008">FIG. 8B</figref> is a schematic diagram of another process of determining a subgroup according to an embodiment of this application;</li>
<li><figref idref="f0009">FIG. 9A</figref> and <figref idref="f0010">FIG. 9B</figref> are a schematic flowchart of another method for determining a subgroup according to an embodiment of this application;</li>
<li><figref idref="f0011">FIG. 10</figref> is a schematic diagram of a process of a method for determining a subgroup according to an embodiment of this application;</li>
<li><figref idref="f0012">FIG. 11A</figref> is a schematic diagram of a process ofa method for determining a subgroup based on <figref idref="f0011">FIG. 10</figref> according to an embodiment of this application;</li>
<li><figref idref="f0013">FIG. 11B</figref> is a schematic diagram of another process of a method for determining a subgroup based on <figref idref="f0011">FIG. 10</figref> according to an embodiment of this application;</li>
<li><figref idref="f0014">FIG. 12</figref> is a schematic diagram of a relationship between a dichotomy and a pre-divided subgroup according to an embodiment of this application;</li>
<li><figref idref="f0015">FIG. 13</figref> is a schematic flowchart of another method for determining a subgroup according to an embodiment of this application;</li>
<li><figref idref="f0016">FIG. 14</figref> is a schematic flowchart of another method for determining a subgroup according to an embodiment of this application;</li>
<li><figref idref="f0016">FIG. 15</figref> is a schematic flowchart of a point cloud decoding method according to this application;</li>
<li><figref idref="f0017">FIG. 16</figref> is a schematic structural diagram of a point cloud encoding apparatus according to this application;</li>
<li><figref idref="f0017">FIG. 17</figref> is a schematic structural diagram of a point cloud decoding apparatus according to this application;</li>
<li><figref idref="f0018">FIG. 18</figref> is a schematic structural diagram of a point cloud encoding apparatus according to this application;</li>
<li><figref idref="f0018">FIG. 19</figref> is a schematic structural diagram of a point cloud decoding apparatus according to this application;</li>
<li><figref idref="f0019">FIG. 20</figref> is a schematic structural diagram of a point cloud encoding apparatus according to this application;</li>
<li><figref idref="f0019">FIG. 21</figref> is a schematic structural diagram of a point cloud decoding apparatus according to this<!-- EPO <DP n="15"> --> application; and</li>
<li><figref idref="f0020">FIG. 22</figref> is a schematic block diagram of an implementation of a coding apparatus according to an embodiment of this application.</li>
</ul></p>
<heading id="h0005"><b>DESCRIPTION OF EMBODIMENTS</b></heading>
<p id="p0085" num="0085">The term" at least one (type)" in the embodiments of this application includes one (type) or more (types). "A plurality of (types)" means two (types) or more than two (types). For example, at least one of A, B, and C includes the following cases: Only A exists, only B exists, both A and B exist, both A and C exist, both B and C exist, and A, B, and C exist. The term "and/or" in the embodiments of this application describes only an association relationship for describing associated objects and represents that three relationships may exist. For example, A and/or B may represent the following three cases: Only A exists, both A and B exist, and only B exists. The term character "/" in the embodiments of this application usually represents an "or" relationship between associated objects. The character "/" in a formula represents a division operation. For example, A/B represents that Ais divided by B. In the embodiments of this application, the terms "first", "second", and the like are intended to distinguish between different objects but do not indicate a particular order of the different objects</p>
<p id="p0086" num="0086"><figref idref="f0001">FIG. 1</figref> is a schematic block diagram of an example point cloud coding system1 that is applicable to an embodiment of this application. The term "point cloud coding" or "coding" may usually be point cloud encoding or point cloud decoding. An encoder 100 in the point cloud coding system 1 may encode a to-be-encoded point cloud according to any point cloud encoding method provided in this application. A decoder 200 in the point cloud coding system1 may decode a to-be-decoded point cloud according to a point cloud decoding method that is provided in this application and that corresponds to a point cloud encoding method used by the encoder.</p>
<p id="p0087" num="0087">As shown in <figref idref="f0001">FIG. 1</figref>, the point cloud coding system 1 includes a source apparatus 10 and a destination apparatus 20. The source apparatus 10 generates encoded point cloud data. Therefore, the source apparatus 10 may be referred to as a point cloud encoding apparatus. The destination apparatus 20 may decode the encoded point cloud data generated by the source apparatus 10. Therefore, the destination apparatus 20 may be referred to as a point cloud decoding apparatus. Various implementation solutions of the source apparatus 10, the destination apparatus 20, or both the source apparatus 10 and the destination apparatus 20 may include one or more processors and a memory coupled to the one or more processors. The memory may include but is not limited to a random access memory (random access memory, RAM), a read-only memory (read-only memory, ROM), an electrically erasable programmable read-only memory (electrically eras able programmable read-only memory, EEPROM), a flash memory,<!-- EPO <DP n="16"> --> or any other medium that can be used to store desired program code in a form of an instruction or a data structure that can be accessed by a computer, as described in this specification.</p>
<p id="p0088" num="0088">The source apparatus 10 and the destination apparatus 20 may include various apparatuses, including a desktop computer, a mobile computing apparatus, a notebook(for example, laptop) computer, a tablet computer, a set top box, a handheld telephone set such as a "smart" phone, a television set, a camera, a display apparatus, a digital media player, a video game console, an in-vehicle computer, and a similar apparatus.</p>
<p id="p0089" num="0089">The destination apparatus 20 may receive the encoded point cloud data from the source apparatus 10 over a link 30. The link 30 may include one or more media or apparatuses that can transfer the encoded point cloud data from the source apparatus 10 to the destination apparatus 20. In an example, the link 30 may include one or more communications media that enable the source apparatus 10 to directly send the encoded point cloud data to the destination apparatus 20 in real time. In this example, the source apparatus 10 may modulate the encoded point cloud data according to a communication standard (for example, a wireless communication protocol), and may send modulated point cloud data to the destination apparatus 20. The one or more communications media may include a wireless and/or wired communications medium, for example, a radio frequency (radio frequency, RF) spectrum or one or more physical transmission lines. The one or more communications media may constitute a part of a packet-based network, and the packet-based network is, for example, a local area network, a wide area network, or a global network (for example, the internet). The one or more communications media may include a router, a switch, a base station, or anotherdevice facilitating communication from the source apparatus 10 to the destination apparatus 20.</p>
<p id="p0090" num="0090">In another example, the encoded data may be output to a storage apparatus 40 through an output interface 140. Similarly, the encoded point cloud data may be accessed from the storage apparatus 40 through an input interface 240. The storage apparatus 40 may include any one of a plurality of distributed data storage media or locally accessible data storage media, for example, a hard disk drive, a Blu-ray disc, a digital versatile disc (digital versatile disc, DVD), a compact disc read-only memory (compact disc read-only memory, CD-ROM), a flash memory, a volatile or nonvolatile memory, or any other appropriate digital storage medium configured to store the encoded point cloud data.</p>
<p id="p0091" num="0091">In another example, the storage apparatus 40 may correspond to a file server or another intermediate storage apparatus that can store the encoded point cloud data generated by the source apparatus 10. The destination apparatus 20 may access the stored pointcloud data through streaming transmission or downloading from the storage apparatus 40. The file server may be any type of server that can store the encoded point cloud data and send the encoded point cloud data to the destination apparatus 20. An example of the file server includes a network server (for example, used for a website), a file transfer protocol (file transfer protocol, FTP) server, a network attached storage (network attached storage, NAS) apparatus, or a local disk drive. The destination apparatus 20 may access the encoded<!-- EPO <DP n="17"> --> point cloud data through any standard data connection (including an internet connection). The standard data connection may include a radio channel (for example, a Wi-Fi connection), a wired connection (for example, a digital subscriber line (digital subscriber line, DSL) or a cable modem), or a combination thereof that is suitable for accessing the encoded point cloud data stored in the file server. Transmission of the encoded point cloud data from the storage apparatus 40 may be streaming transmission, downloading transmission, or a combination thereof.</p>
<p id="p0092" num="0092">The point cloud coding system 1 described in <figref idref="f0001">FIG. 1</figref> is merely an example, and technologies in this application are applicable to a point cloud coding (for example, point cloud encoding or point cloud decoding) apparatus that does not necessarily include any data communication between a point cloud encoding apparatus and a point cloud decoding apparatus. In another example, data is retrieved from a local memory, is transmitted on a network in a streaming manner, and the like. The point cloud encoding apparatus may encode the data and store the data to the memory, and/or the point cloud decoding apparatus may retrieve the data from the memory and decode the data. In many examples, apparatuses that do not communicate with each other and that only encode data and store the data to the memory and/or only retrieve data from the memory and decode the data perform encoding and decoding.</p>
<p id="p0093" num="0093">In the example in <figref idref="f0001">FIG. 1</figref>, the source apparatus 10 includes a data source 120, the encoder 100, and the output interface 140. In some examples, the output interface 140 may include a modulator/demodulator (a modem) and/ora transmitter (or referred to as a transmitter). The data source 120 may include a point cloud capture apparatus (for example, a camera), a point cloud archive including previously captured point cloud data, a point cloud feed-in interface configured to receive point cloud data from a point cloud content provider, and/or a computer graphics systemconfigured to generate point cloud data, or a combination of these sources ofpoint cloud data.</p>
<p id="p0094" num="0094">The encoder 100 may encode the point cloud data from the data source 120. In some examples, the source apparatus 10 directly sends the encoded point cloud data to the destination apparatus 20 through the output interface 140. In another example, the encoded point cloud data may alternatively be stored in the storage apparatus 40, so that the destination apparatus 20 subsequently accesses the encoded point cloud data for decoding and/orplaying.</p>
<p id="p0095" num="0095">In the example in <figref idref="f0001">FIG. 1</figref>, the destination apparatus 20 includes the input interface 240, the decoder 200, and a display apparatus 220. In some examples, the input interface 240 includes a receiver and/or a modem. The input interface 240 may receive the encoded point cloud data over the link 30 and/or from the storage apparatus 40. The display apparatus 220 may be integrated with the destination apparatus 20 or may be located outside the destination apparatus 20. Generally, the display apparatus 220 displays decoded point cloud data. There may be a plurality of types of display apparatuses 220. For example, the display apparatus 220 may be a liquid crystal display (liquid crystal display, LCD), a plasma display, an organic light-emitting diode (organic light-emitting diode, OLED) display, or anothertype of display apparatus.<!-- EPO <DP n="18"> --></p>
<p id="p0096" num="0096">Although not shown in <figref idref="f0001">FIG. 1</figref>, in some aspects, the encoder 100 and the decoder 200 may be integrated with an audio encoder and an audio decoder respectively, and may include an appropriate multiplexer-demultiplexer (multiplexer-demultiplexer, MUX-DEMUX) unit or other hardware and software, to process encoding of both audio and a video in a same data stream or separate data streams. In some examples, if appropriate, the MUX-DEMUX unit may comply with the ITU H.223 multiplexer protocol or another protocol such as a user datagram protocol (user datagram protocol, UDP).</p>
<p id="p0097" num="0097">The encoder 100 and the decoder 200 each may be implemented as, for example, any one of a plurality of circuits: one or more microprocessors, digital signal processors (digital signal processing, DSP), application-specific integrated circuits (application specific integrated circuit, ASIC), field-programmable gate arrays (field-programmable gate array, FPGA), discrete logic, hardware, or any combination thereof. If this application is implemented partially through software, the apparatus may store, in an appropriate nonvolatile computer-readable storage medium, instructions used for the software, and may use one or more processors to execute the instructions in hardware, to implement the technologies in this application. Any one of the foregoing content (including hardware, software, a combination of hardware and software, and the like) may be considered as one or more processors. The encoder 100 and the decoder 200 each may be included in one or more encoders or decoders, and the encoder or the decoder may be integrated as a part of a combined encoder/decoder (codec) in a corresponding apparatus.</p>
<p id="p0098" num="0098">In this application, the encoder 100 may be generally referred to as an apparatus that "signals" or "sends" some information to another apparatus such as the decoder 200. The term "signal" or "send" may generally refer to transmission of a syntax element and/or other data used for decoding compressed point cloud data. The transmission may occur in real time or almost in real time. Alternatively, the communication may occur after a period of time. For example, the communication may occur when a syntax element in an encoded bits tream is stored into a computer-readable storage medium during encoding, and the decoding apparatus may then retrieve the syntax element at any time after the syntax element is stored in the medium.</p>
<p id="p0099" num="0099"><figref idref="f0002">FIG. 2</figref> is a schematic block diagram of an example encoder 100 that is applicable to an embodiment of this application. An MPEG (Moving Picture Expert Group) point cloud compression (Point Cloud Compression, PCC) encoding framework is used as an example for description in <figref idref="f0002">FIG. 2</figref>. In the example in <figref idref="f0002">FIG. 2</figref>, the encoder 100 may include a patch information generation module 101, a packing module 102, a depth map generation module 103, a texture map generation module 104, a first filling module 105, an image-based or video-based encoding module 106, an occupancy map encoding module 107, an auxiliary information encoding module 108, a multiplexer module 109, and the like. In addition, the encoder 100 may further include a point cloud filter module 110, a second filling module 111, a point cloud reconstruction module 112, and the like.<!-- EPO <DP n="19"> --></p>
<p id="p0100" num="0100">The patch information generation module 101 is configured to partition a frame of point cloud into a plurality of patches by using a method, and obtain related information and the like of the generated patches. The patch is a set of some points in a frame of point cloud, and generally one connected component region corresponds to one patch. The related information of the patches may include but is not limited to at least one of the following information: a quantity of the patches obtained by partitioning the point cloud, location information of each patch in a three-dimensional space, an index of a normal coordinate axis of each patch, a depth map generated when each patch is projected from the three-dimensional space to a two-dimensional space, a size of the depth map of each patch (for example, the width and the height of the depth map), an occupancy map generated when each patch is projected from the three-dimensional space to the two-dimensional space, and the like. A part of the related information, such as the quantity of patches obtained by partitioning the point cloud, the index of the normal coordinate axis of each patch, the size of the depth map of each patch, the location information of each patch in the point cloud, and size information of the occupancy map of each patch, may be used as auxiliary information and sent to the auxiliary information encoding module 108 for encoding (that is, compression encoding). The occupancy map of each patch may be sent to the packing module 102 for packing. Specifically, a global matched patch in a point cloud is first obtained according to the method for obtaining a global matched patch described in this application; and during packing, a global patch in each frame of point cloud is preferentially packed, and a non-global matched patch is then packed, to obtain an occupancy map of the point cloud. In addition, information about a specific location of each patch in the occupancy map of the point cloud, the depth map of each patch, and the like may be sent to the depth map generation module 103.</p>
<p id="p0101" num="0101">After the packing module 102 obtains the occupancy map of the point cloud, the second filling module 111 may fill the occupancy map of the point cloud and then send a filled occupancy map of the point cloud to the occupancy map encoding module 107 for encoding. In addition, the occupancy map of the point cloud may be used to guide the depth map generation module 103 to generate a depth map of the point cloud and guide the texture map generation module 104 to generate a texture map of the point cloud.</p>
<p id="p0102" num="0102"><figref idref="f0003">FIG. 3</figref> is a schematic diagram showing a point cloud, patches in the point cloud, and an occupancy map of the point cloud that are applicable to an embodiment of this application. To be specific, (a) in <figref idref="f0003">FIG. 3</figref> is a schematic diagram of a frame of point cloud; (b) in <figref idref="f0003">FIG. 3</figref> is a schematic diagram of an obtained patch in the point cloud based on (a) in <figref idref="f0003">FIG. 3</figref>; and (c) in <figref idref="f0003">FIG. 3</figref> is a schematic diagram of an occupancy map of the point cloud, where the occupancy map of the point cloud is obtained by packing occupancy maps that are of all patches shown in (b) in <figref idref="f0003">FIG. 3</figref> and that are obtained by mapping all the patches onto a two-dimensional plane.</p>
<p id="p0103" num="0103">The depth map generation module 103 is configured to: generate the depth map of the point cloud based<!-- EPO <DP n="20"> --> on the occupancy map of the point cloud, and the occupancy map and depth information of each patch in the point cloud, and send the generated depth map to the first filling module 105, so that the first filling module 105 fills empty pixels in the depth map, to obtain a filled depth map.</p>
<p id="p0104" num="0104">The texture map generation module 104 is configured to: generate the texture map of the point cloud based on the occupancy map of the point cloud, and the occupancy map and texture information of each patch in the point cloud, and send the generated texture map to the first filling module 105, so that the first filling module 105 fills empty pixels in the texture map, to obtain a filled texture map.</p>
<p id="p0105" num="0105">The first filling module 105 sends the filled depth map and the filled texture map to the image-based or video-based encoding module 106 for image-based or video-based encoding. Subsequent processes are as follows:</p>
<p id="p0106" num="0106">On the one hand, the image-based or video-based encoding module 106, the occupancy map encoding module 107, and the auxiliary information encoding module 108 send obtained encoding results (namely, bitstreams) to the multiplexer module 109, and the multiplexer module 109 combines the encoding results into one bitstream, where the bitstream may be sent to the output interface 140.</p>
<p id="p0107" num="0107">On the other hand, the image-based or video-based encoding module 106 sends an obtained encoding result (namely, a bitstream) to the point cloud reconstruction module 112 for point cloud reconstruction, to obtain a reconstructed point cloud (namely, obtain reconstructed geometry information of the point cloud). Specifically, video decoding is performed on an encoded depth map obtained by the image-based or video-based encoding module 106, to obtain a decoded depth map of the point cloud, and the reconstructed geometry information of the point cloud is obtained by using the decoded depth map, the occupancy map of the point cloud, and the auxiliary information of each patch. The geometry information of the point cloud is coordinate values of a point in the point cloud (for example, each point in the point cloud) in the three-dimensional space.</p>
<p id="p0108" num="0108">Optionally, the point cloud reconstruction module 112 may further send texture information of the point cloud and the reconstructed geometry information of the point cloud to a coloring module. The coloring module is configured to color a reconstructed point cloud to obtain texture information of the reconstructed point cloud.</p>
<p id="p0109" num="0109">Optionally, the texture map generation module 104 may further generate the texture map of the point cloud based on information that is obtained by the point cloud filter module 110 by filtering the reconstructed geometry information of the point cloud.</p>
<p id="p0110" num="0110"><figref idref="f0004">FIG. 4</figref> is a schematic block diagram of an example decoder 200 that is applicable to an embodiment of this application. An MPEG PCC decoding framework is used as an example for description in <figref idref="f0004">FIG. 4</figref>. In the example in <figref idref="f0004">FIG. 4</figref>, the decoder200 may include a demultiplexer module 201, an image-based or video-based decoding module 202, an occupancy map decoding module 203, an auxiliary information decoding module 204, a point cloud geometry<!-- EPO <DP n="21"> --> information reconstruction module 205, a point cloud filter module 206, and a point cloud texture information reconstruction module 207.</p>
<p id="p0111" num="0111">The demultiplexer module 201 is configured to send an input bitstream (that is, a combined bitstream) to a corresponding decoding module. Specifically, a bitstream including an encoded texture map and a bitstream including an encoded depth map are sent to the image-based or video-based decoding module 202; a bitstream including an encoded occupancy map is sent to the occupancy map decoding module 203; and a bitstream including encoded auxiliary information is sent to the auxiliary information decoding module 204.</p>
<p id="p0112" num="0112">The image-based or video-based decoding module 202 is configured to: decode the received encoded texture map and encoded depth map; and then send decoded texture map information to the point cloud texture information reconstruction module 207, and send decoded depth map information to the point cloud geometry information reconstruction module 205. The occupancy map decoding module 203 is configured to decode the received bitstream including the encoded occupancy map, and send decoded occupancy map information to the point cloud geometry information reconstruction module 205. The auxiliary information decoding module 204 is configured to decode the received encoded auxiliary information, and send, to the point cloud geometry information reconstruction module 205, decoded information indicating the auxiliary information.</p>
<p id="p0113" num="0113">The point cloud geometry information reconstruction module 205 is configured to reconstruct geometry information of apoint cloud based on the received occupancy map information and the received auxiliary information. After being filtered by the point cloud filter module 206, reconstructed geometry information of the point cloud is sent to the point cloud texture information reconstruction module 207.</p>
<p id="p0114" num="0114">The point cloud texture information reconstruction module 207 is configured to reconstruct texture information of the point cloud, to obtain a reconstructed point cloud.</p>
<p id="p0115" num="0115">It may be understood that the decoder 200 shown in <figref idref="f0004">FIG. 4</figref> is merely used as an example. In a specific implementation, the decoder 200 may include more or fewer modules than those shown in <figref idref="f0004">FIG. 4</figref>. This is not limited in this embodiment of this application.</p>
<p id="p0116" num="0116">For ease of understanding of the technical solutions provided in the embodiments of this application, the following describes technologies and terms used in the embodiments of this application.</p>
<p id="p0117" num="0117">In an MPEG point cloud encoding method, an encoder first partitions a to-be-encoded point cloud (that is, a current frame or a current frame of point cloud) into several patches according to a specific rule. These patches do not have an overlapping region. Then, each patch is projected from a three-dimensional space to a two-dimensional plane, to obtain a two-dimensional image (that is, an occupancy map of the patch). Next, occupancy maps of all patches (or occupancy maps that are of patches and that are obtained after resolution is reduced) are closely arranged<!-- EPO <DP n="22"> --> on one two-dimensional image according to a specific rule, to obtain an occupancy map of the current frame. This method for arranging occupancy maps of patches is referred to as packing (packing). Subsequently, a depth map of the current frame and a texture map of the current frame are generated according to a packing sequence. To be specific, the depth map of the current frame is a two-dimensional image that is generated by packing, according to the packing sequence, depth maps obtained by projecting all the patches; and the texture map of the current frame is a two-dimensional image that is generated by packing, according to the packing sequence, texture maps obtained by projecting all the patches. The occupancy map of the current frame is a two-dimensional binary image, and used to indicate whether a location of each pixel of the two-dimensional image is occupied by a point in the point cloud. Generally, to reduce a quantity of coded bits, resolution of the occupancy map of the current frame is lower than resolution of the depth map of the current frame and resolution of the texture map of the current frame.</p>
<p id="p0118" num="0118">For ease of understanding of the technical solutions provided in the embodiments of this application, the following describes technologies and terms used in the embodiments of this application.</p>
<p id="p0119" num="0119"><figref idref="f0005">FIG. 5</figref> is a schematic flowchart of a point cloud encoding method according to an embodiment of this application. As shown in <figref idref="f0005">FIG. 5</figref>, the method includes the following steps.</p>
<p id="p0120" num="0120">S501: Obtain subgroup information of N frames of point clouds, where the subgroup information includes a quantity M of subgroups into which the N frames of point clouds are divided and/or a quantity of frames of point clouds included in each of one or more subgroups among the M subgroups.</p>
<p id="p0121" num="0121">The M subgroups are obtained by grouping the N frames of point clouds, and a grouping manner may be an adaptive grouping manner.</p>
<p id="p0122" num="0122">Specifically, a plurality of frames of point clouds in the N frames of point clouds are pre-divided to obtain a pre-divided subgroup, and the pre-divided subgroup is determined to be one of the M subgroups based on characteristic information of the pre-divided subgroup, where the characteristic information is used to represent a size of an occupancy map of a point cloud in the pre-divided subgroup.</p>
<p id="p0123" num="0123">Size information of an occupancy map of a point cloud may be an area, the height, the width, or the like of the occupancy map of the point cloud. In the following, that the size information of the occupancy map of the point cloud is the area of the occupancy map is used as an example for description. A unified description is provided herein, and details are not described below again.</p>
<p id="p0124" num="0124">Any subgroup into which the N frames of point clouds are divided may include one or more frames of point clouds. Quantities of frames of point clouds included in different subgroups may be the same or different.</p>
<p id="p0125" num="0125">A pre-division method is not limited in this embodiment of this application. For example, the N frames of point clouds can be pre-divided by using a sliding window method or a dichotomy method.<!-- EPO <DP n="23"> --></p>
<p id="p0126" num="0126">A size of an occupancy map of a point cloud in the pre-divided subgroup may be determined based on a global matching packing algorithm or based on another packing algorithm, such as an anchorpacking algorithm</p>
<p id="p0127" num="0127">Characteristic information of the pre-divided subgroup may be information directly or indirectly used to represent a size of an occupancy map of a point cloud in the pre-divided subgroup. For example, the characteristic information may include at least one of the following information 1 to information 3:</p>
<p id="p0128" num="0128">Information 1: a size of a global occupancy map for the pre-divided subgroup. Optionally, the size of the global occupancy map for the pre-divided subgroup may be represented by a product (that is, an area) of the height (height) and the width (weight) of the global occupancy map for the pre-divided subgroup. Optionally, if widths of obtained global occupancy maps for different pre-divided subgroups are the same in a process of determining a subgroup, the size of the global occupancy map for the pre-divided subgroup may be represented by the height of the global occupancy map for the pre-divided subgroup. Similarly, if heights of obtained global occupancy maps for different pre-divided subgroups are the same in a process of determining a subgroup, the size of the global occupancy map for the pre-divided subgroup may be represented by the width of the global occupancy map for the pre-divided subgroup. Because the size of the global occupancy map for the pre-divided subgroup defines a minimum size of an occupancy map of each frame of point cloud in the pre-divided subgroup, the size of the global occupancy map for the pre-divided subgroup can be used to indirectly represent a size of an occupancy map of a point cloud in the pre-divided subgroup.</p>
<p id="p0129" num="0129">Information 2: a size of an occupancy map of a point cloud in the pre-divided subgroup, for example, a size or sizes of one or more occupancy maps of one or more (for example, all) frames of point clouds in the pre-divided subgroup. Optionally, the size of the occupancy map of the point cloud in the pre-divided subgroup may be represented by a product (that is, an area) of the height and the width of the occupancy map of the point cloud in the pre-divided subgroup. Optionally, if widths of obtained occupancy maps of different point clouds are the same in a process of determining a subgroup, the size of the occupancy map of the point cloud in the pre-divided subgroup may be represented by the height of the occupancy map of the point cloud in the pre-divided subgroup. Similarly, if heights of obtained occupancy maps of different point clouds are the same in a process of determining a subgroup, the size of the occupancy map of the point cloud in the pre-divided subgroup may be represented by the width of the occupancy map of the point cloud in the pre-divided subgroup. The information 2 is information directly used to represent the size of the occupancy map of the point cloud in the pre-divided subgroup.</p>
<p id="p0130" num="0130">Information 3: an area of a union patch occupancy map for the pre-divided subgroup. It can be learned from the foregoing descriptions that there may be a plurality of union patch occupancy maps for the pre-divided subgroup. The area of the union patch occupancy map for the pre-divided subgroup may be an area of one or more<!-- EPO <DP n="24"> --> (for example, all) of union patch occupancy maps for the pre-divided subgroup. Because the area (for example, a total area) of the union patch occupancy map for the pre-divided subgroup may reflect an area of an occupancy map of a point cloud in the pre-divided subgroup to some extent, the area (for example, the total area) of the union patch occupancy map for the pre-divided subgroup can be used to indirectly represent a size of an occupancy map of a point cloud in the pre-divided subgroup.</p>
<p id="p0131" num="0131">Optionally, the pre-dividing a plurality of frames of point clouds in the N frames of point clouds to obtain a pre-divided subgroup, and determining the pre-divided subgroup to be one of the M subgroups based on characteristic information of the pre-divided subgroup may include the following steps S101-1 and S101-2.</p>
<p id="p0132" num="0132">S101-1: Pre-divide point clouds, that have not been grouped, in a to-be-encoded point cloud group for an i<sup>th</sup> time by using a j<sup>th</sup> frame of point cloud as a start point, to obtain an i<sup>th</sup> pre-divided subgroup. The j<sup>th</sup> frame of point cloud is the first frame of point cloud in the point clouds that have not been grouped; i ≥ 1, where i is an integer, j ≥ 1, where j is an integer, the i<sup>th</sup> pre-divided subgroup includes one or more frames of point clouds starting from the j<sup>th</sup> frame of point cloud.</p>
<p id="p0133" num="0133">S101-2: Determine the i<sup>th</sup> pre-divided subgroup to be one subgroup based on characteristic information of the i<sup>th</sup> pre-divided subgroup.</p>
<p id="p0134" num="0134">It can be learned from this optional manner that this embodiment of this application supports a technical solution of determining a next subgroup based on a sequence of point clouds in the to-be-encoded point cloud group when one subgroup included in the to-be-encoded point cloud group is determined. In a process of determining a subgroup, pre-division usually needs to be performed for one or more times (such as sliding a window one or more times, or performing dichotomy one or more times), and one pre-divided subgroup can be determined each time pre-division is performed.</p>
<p id="p0135" num="0135">S101-1 is a specific implementation of "pre-dividing the plurality of frames of point clouds in the to-be-encoded point cloud group to obtain a pre-divided subgroup" in S101. S101-2 is a specific implementation of "determining the pre-divided subgroup to be one of the plurality of subgroups based on characteristic information of the pre-divided subgroup" in S101.</p>
<p id="p0136" num="0136">The following briefly describes some terms in a process of implementing pre-division by using a sliding window, to facilitate understanding by a reader.</p>
<p id="p0137" num="0137">Sliding the window for one time can delimit one or more frames of point clouds. In this embodiment of this application, "in a process of determining a subgroup, when i = 1, a quantity of frames of point clouds delimited by sliding the window for the i<sup>th</sup> time is equal to a step size used for sliding the window for the i<sup>th</sup> time plus 1; and when i ≥ 2, a quantity of frames of point clouds delimited by sliding the window for the i<sup>th</sup> time is equal to a step size<!-- EPO <DP n="25"> --> used for sliding the window for the i<sup>th</sup> time" is used as an example for description. In this embodiment of this application, a case in which "when i ≥ 1, a quantity of frames of point clouds delimited by sliding the window for the i<sup>th</sup> time is equal to a step size used for sliding the window for the i<sup>th</sup> time" is not excluded. In this case, a person of ordinary skill in the art can properly infer, based on the following description of terms, corresponding terms applicable to this case without creative efforts.</p>
<p id="p0138" num="0138">Step sizes used for sliding the window for different times may be the same or different.</p>
<p id="p0139" num="0139">Sliding the window for the i<sup>th</sup> time is a process of sliding i step sizes starting from the first frame of point cloud in the point clouds, that have not been grouped, in the to-be-encoded point cloud group, where a t<sup>th</sup> step size in the i step sizes is a step size used for sliding the window for the t<sup>th</sup> time, 1 ≤ t ≤ i, and t is an integer. It may be understood that, generally, when i ≥ 2, sliding the window for the i<sup>th</sup> time may be considered as sliding by one step size starting from the last delimited frame of point cloud in the to-be-encoded point cloud group. This step size is a step size used for sliding the window for the i<sup>th</sup> time.</p>
<p id="p0140" num="0140">The i<sup>th</sup> pre-divided subgroup is a set of point clouds delimited by sliding the window for the first time to the i<sup>th</sup> time. Generally, a quantity of frames of point clouds included in the i<sup>th</sup> pre-divided subgroup is equal to a sum of step sizes used for sliding the window for the first time to the i<sup>th</sup> time plus 1.</p>
<p id="p0141" num="0141"><figref idref="f0006">FIG. 6</figref> is a schematic diagram of a correspondence between a sliding window, a step size, and a pre-divided subgroup according to an embodiment of this application. In <figref idref="f0006">FIG. 6</figref>, the to-be-encoded point cloud group includes point clouds 1 to 32. One rectangular box in <figref idref="f0006">FIG. 6</figref> represents one frame of point cloud, and a number in a rectangular boxrepresents a number of a point cloud. A step size used for sliding the window each time is 3, that is, three frames of point clouds can be delimited by sliding the window once. In addition, subgroups that have been obtained through division are subgroup 1 and subgroup 2, subgroup 1 is a set of point clouds 1 to 4, and subgroup 2 is a set of point cloud 5. Based on this, in a process of determining subgroup 3, point clouds that are delimited after the window is slid for the first time by using point cloud 6 as a start point are point clouds 6 to 9. In this case, the obtained first pre-divided subgroup is a set of point clouds 6 to 9. Sliding the window for the second time by using point cloud 6 as a start point means sliding by one step size starting from the last frame of point cloud (that is, point cloud 9) that is delimited by sliding the window for the first time. Therefore, point clouds delimited after the window is slid for the second time are point clouds 10 to 12. In this case, the obtained second pre-divided subgroup is a set of point clouds 6 to 12.</p>
<p id="p0142" num="0142">In a process of determining different subgroups, an initial value of i is all 1. Unless otherwise stated, sliding the window for the i<sup>th</sup> time described in this embodiment of this application all means sliding the window for the i<sup>th</sup> time in a process of determining one subgroup. Similarly, the i<sup>th</sup> pre-divided subgroup is an i<sup>th</sup> pre-divided<!-- EPO <DP n="26"> --> subgroup in a process of determining one subgroup. A unified description is provided herein, and details are not described below again.</p>
<p id="p0143" num="0143">The following describes, by using a specific example, a method for determining a subgroup in a to-be-encoded point cloud group when pre-division is implemented by using a sliding window method provided in this embodiment of this application. For details, refer to the following Embodiment 1 or Embodiment 2.</p>
<heading id="h0006"><b>Embodiment 1</b></heading>
<p id="p0144" num="0144"><figref idref="f0007">FIG. 7</figref> is a schematic flowchart of a method for determining a subgroup according to an embodiment of this application. The method shown in <figref idref="f0007">FIG. 7</figref> includes the following steps.</p>
<p id="p0145" num="0145">S201: Slide a window for the first time by using a j<sup>th</sup> frame of point cloud as a start point, to obtain a first pre-divided subgroup. Specifically, a set of point clouds delimited by sliding the window for the first time is used as the first pre-divided group. The j<sup>th</sup> frame of point cloud is the first frame of point cloud in point clouds, that have not been grouped, in a to-be-encoded point cloud group.</p>
<p id="p0146" num="0146">1 ≤j≤ J, and J represents a quantity of frames of point clouds included in the to-be-encoded point cloud group. When the method shown in <figref idref="f0007">FIG. 7</figref> is used to determine the first subgroup of to-be-encoded point clouds, j is equal to 1. When the method shown in <figref idref="f0007">FIG. 7</figref> is used to determine the second subgroup of the to-be-encoded point clouds or any subgroup following the second subgroup, j is equal to a sum of frames of point clouds included in the first to (i-1)<sup>th</sup> subgroups plus 1.</p>
<p id="p0147" num="0147">S202: Determine whether characteristic information of the first pre-divided subgroup meets a preset condition.</p>
<p id="p0148" num="0148">If the characteristic information of the first pre-divided subgroup does not meet the preset condition, S203 is performed. If the characteristic information of the first pre-divided subgroup meets the preset condition, S204 is performed.</p>
<p id="p0149" num="0149">S203: Use the first frame of point cloud in the first pre-divided subgroup as a first subgroup.</p>
<p id="p0150" num="0150">After S203 is performed, the process ends.</p>
<p id="p0151" num="0151">For example, referring to <figref idref="f0006">FIG. 6</figref>, it can be learned from the fact that subgroup 2 is a set of one frame of point cloud that, in a process of determining subgroup 2, the obtained first pre-divided subgroup (that is, a set of point clouds 5 to 8) does not meet the preset condition.</p>
<p id="p0152" num="0152">S204: Slide a window for an (i+1)<sup>th</sup> time, to obtain an (i+1)<sup>th</sup> pre-divided subgroup. Specifically, a set of point clouds delimited by sliding the window for the first time to the (i+1)<sup>th</sup> time is used as the (i+1)<sup>th</sup> pre-divided<!-- EPO <DP n="27"> --> group.</p>
<p id="p0153" num="0153">i ≥ 1, i is an integer, and an initial value of i is 1.</p>
<p id="p0154" num="0154">S205: Determine whether characteristic information of the (i+1)<sup>th</sup> pre-divided subgroup meets the preset condition.</p>
<p id="p0155" num="0155">If the characteristic information of the (i+1)<sup>th</sup> pre-divided subgroup meets the preset condition, S206 is performed. If the characteristic information of the (i+1)<sup>th</sup> pre-divided subgroup does not meet the preset condition, S207 is performed.</p>
<p id="p0156" num="0156">S206: Assign a value of i+2 to i+1. After S206 is performed, the process returns to S204.</p>
<p id="p0157" num="0157">S207: Determine an i<sup>th</sup> pre-divided subgroup to be one subgroup.</p>
<p id="p0158" num="0158">It should be noted that S204 in this embodiment may be replaced with a step of sliding the window for an i<sup>th</sup> time to obtain an i<sup>th</sup> pre-divided subgroup, where i ≥ 2, i is an integer, and an initial value of i is 2. In this case, S205 may be replaced with a step of determining whether characteristic information of the i<sup>th</sup> pre-divided subgroup meets the preset condition; S206 may be replaced with a step of assigning a value of i+1 to i; and S207 may be replaced with a step of determining an (i-1)<sup>th</sup> pre-divided subgroup to be one subgroup.</p>
<p id="p0159" num="0159">For example, referring to <figref idref="f0006">FIG. 6</figref>, in a process of determining subgroup 3, the j<sup>th</sup> frame of point cloud is specifically point cloud 6. If characteristic information of the second pre-divided subgroup meets the preset condition, the window is slid for the third time to obtain a third pre-divided subgroup. If characteristic information of the third pre-divided subgroup does not meet the preset condition, the second pre-divided subgroup (that is, the set of point clouds 6 to 12) is used as subgroup 3.</p>
<p id="p0160" num="0160">For another example, referring to <figref idref="f0006">FIG. 6</figref>, assuming that a step size used for sliding the window each time is 3, it can be learned from the fact that subgroup 1 is a set of four frames of point clouds that, in a process of determining subgroup 1, the obtained first pre-divided subgroup (that is, the set of point clouds 1 to 4) meets the preset condition, and the obtained second pre-divided subgroup (that is, a set of point clouds 1 to 7) does not meet the preset condition.</p>
<p id="p0161" num="0161">In Embodiment 1, step sizes used for sliding the window for different times may be the same or different.</p>
<p id="p0162" num="0162">Optionally, a step size used for sliding the window for an (i<sub>1</sub>)<sup>th</sup> time is greater than or equal to a step size used for sliding the window for an (i<sub>2</sub>)<sup>th</sup> time, where 1 ≤ i<sub>1</sub> &lt; i<sub>2</sub> ≤ i, and both i<sub>1</sub> and i<sub>2</sub> are integers. In other words, this embodiment of this application supports a technical solution in which, in a process of determining a subgroup, a step size used for sliding the window later is greater than or equal to a step size used for sliding the window earlier. Details are as follows:</p>
<p id="p0163" num="0163">In some implementations, a same step size is used for sliding the window every time, that is, the window<!-- EPO <DP n="28"> --> is slid at a fixed step size. Optionally, the fixed step size may be 1, so that the to-be-encoded point cloud groups are grouped based on a point cloud granularity, which helps make a grouping result more accurate. Optionally, the fixed step size may alternatively be a value greater than 1. Because characteristic similarity of a plurality of consecutive frames of point clouds in a to-be-encoded point cloud group such as a GOF is relatively high, when the step size is relatively large, computation complexity in a grouping process can be reduced.</p>
<p id="p0164" num="0164">In some other implementations, step sizes used for sliding the window for at leasttwo times are different, and a step size used for sliding the window later is greater than or equal to a step size used for sliding the window earlier. In other words, the window is slid at an unfixed step size. In this way, a proper step size is selected to help balance the computation complexity in the grouping process and the accuracy of the grouping result, help improve overall grouping performance, and further help improve coding performance. Optionally, the step size N[i+1] used for sliding the window for the (i+1)<sup>th</sup> time is obtained according to a formula N[i+1] = N[i] * c, where N[i] represents a step size used for sliding the window for an i<sup>th</sup> time, and c is determined based on a quantity of large-sized frames of point clouds in an i<sup>th</sup> pre-divided subgroup. In other words, in a process of sliding the window for two consecutive times, a step size used for sliding the window later is determined by using a step size used for sliding the window earlier. Further optionally, c = (a-b)/a, where a represents a first preset quantity, and b represents a quantity of large-sized frames of point clouds in the i<sup>th</sup> pre-divided subgroup. Certainly, this embodiment of this application is not limited thereto.</p>
<p id="p0165" num="0165">It may be understood that, during specific implementation, whether step sizes used for sliding the window for different times are fixed step sizes, a method for determining a step size when the step size is not a fixed step size, and the like may be predefined.</p>
<p id="p0166" num="0166">S201 to S207 are performed for a plurality of times, to obtain a plurality of subgroups into which the to-be-encoded point cloud group is divided. S201 to S207 may be considered as a common method for determining a subgroup in a to-be-encoded point cloud. During actual implementation, the following special cases may exist:</p>
<p id="p0167" num="0167">Case 1: It can be learned from descriptions in S201 to S207 that when the characteristic information of the i<sup>th</sup> pre-divided subgroup meets the condition, the window needs to be slid for an (i+1)<sup>th</sup> time. However, in this case, there may be a case in which there is no remaining point cloud that is not delimited in the to-be-encoded point cloud group, that is, the last frame of point cloud included in the i<sup>th</sup> pre-divided subgroup is the last frame of pointcloud in the to-be-encoded point cloud group. In this case, it can be determined that the i<sup>th</sup> pre-divided subgroup is the last subgroup of the to-be-encoded point clouds.</p>
<p id="p0168" num="0168">For example, referring to <figref idref="f0008">FIG. 8A</figref>, it is assumed that the to-be-encoded point cloud group includes point clouds 1 to 32, and the subgroups that have been obtained through division are subgroups 1 to 6. In a process of<!-- EPO <DP n="29"> --> determining subgroup 7, if the characteristic information of the third pre-divided subgroup meets the preset condition, a fourth pre-divided subgroup needs to be obtained based on the descriptions in S201 to S207. In this case, because there is no remaining point cloud that is not delimited in the to-be-encoded point cloud group, the third pre-divided subgroup (that is, a set of point clouds 23 to 32) may be used as subgroup 7.</p>
<p id="p0169" num="0169">Case 2: In a process of sliding the window for an (i+1)<sup>th</sup> time, a step size used for sliding the window for the (i+1)<sup>th</sup> time may be greater than a quantity of frames of point clouds that have not been delimited in the to-be-encoded point cloud group. In this case, the quantity of frames of point clouds included in the i<sup>th</sup> pre-divided subgroup and the point clouds that have not been delimited in the to-be-encoded point cloud group may be used as an (i+1)<sup>th</sup> pre-divided subgroup.</p>
<p id="p0170" num="0170">For example, referring to <figref idref="f0008">FIG. 8B</figref>, it is assumed that the to-be-encoded point cloud group includes point clouds 1 to 32, and the subgroups that have been obtained through division are subgroups 1 to 6. In a process of determining subgroup 7, if the characteristic information of the third pre-divided subgroup meets the preset condition, a fourth pre-divided subgroup needs to be obtained based on the descriptions in S201 to S207. In this case,because a step size (that is, 3) used for sliding the window for the fourth time is greater than the quantity (that is, 2) of frames of point clouds (that is, point clouds 31 and 32) that have not been delimited in the to-be-encoded point cloud group, the point clouds 21 to 33 may be used as the fourth pre-divided subgroup.</p>
<heading id="h0007"><b>Embodiment 2</b></heading>
<p id="p0171" num="0171">Embodiment 2 differs from Embodiment 1 in that, when i ≥ 2, if the characteristic information of the i<sup>th</sup> pre-divided subgroup meets the preset condition, and the characteristic information ofthe(i+1)<sup>th</sup> pre-divided subgroup does not meet the preset condition, the (i+1)<sup>th</sup> pre-divided group is re-obtained at a smaller step size. This embodiment is applied to a scenario in which the step size used for obtaining the (i+1)<sup>th</sup> pre-divided subgroup is greater than 1. A flowchart of the method provided in this embodiment may be shown in <figref idref="f0009">FIG. 9A</figref> and <figref idref="f0010">FIG. 9B</figref>. Specifically, S207 in Embodiment 1 may be replaced with the following steps S207A to S207C.</p>
<p id="p0172" num="0172">S207A: Re-obtain the (i+1)<sup>th</sup> pre-divided subgroup by using a second step size, where the second step size is less than the first step size, and the first step size is a step size used for obtaining the (i+1)<sup>th</sup> pre-divided subgroup.</p>
<p id="p0173" num="0173">The process of re-obtaining the (i+1)<sup>th</sup> pre-divided subgroup may be understood as a process of returning (or rolling back) to a last frame of point cloud in the i<sup>th</sup> pre-divided subgroup, and sliding by the second step size by using the last frame as a start point.</p>
<p id="p0174" num="0174">S207B: If characteristic information of the (i+1)<sup>th</sup> pre-divided subgroup re-obtained by using the second<!-- EPO <DP n="30"> --> step size does not meet the preset condition, re-obtain the (i+1)<sup>th</sup> pre-divided subgroup by using a third step size, where the third step size is less than the second step size. In other words, a step size for re-obtaining the i<sup>th</sup> pre-divided subgroup each time is less than a step size for re-obtaining the i<sup>th</sup> pre-divided subgroup last time; and by analogy, when a quantity of times of re-obtaining the (i+1)<sup>th</sup> pre-divided subgroup reaches a preset quantity of times, or a step size for re-obtaining the (i+1)<sup>th</sup> pre-divided subgroup for the last time is less than or equal to a preset step size (for example, 1), if characteristic information of the (i+1)<sup>th</sup> pre-divided subgroup that is re-obtained for the last time does not meet the preset condition, determine that the i<sup>th</sup> pre-divided subgroup is to be one subgroup.</p>
<p id="p0175" num="0175">For example, referring to <figref idref="f0011">FIG. 10</figref>, it is assumed that in a process of determining subgroup 3, characteristic information of the first pre-divided subgroup (that is, a set of point clouds 9 to 15) meets the preset condition, characteristic information of the second pre-divided subgroup (that is, a set of point clouds 9 to 21) does not meet the preset condition, and the first step size is 6. In this case, characteristic information of a pre-divided subgroup that includes point clouds 9 to p may meet the condition, where 15 &lt; p &lt; 21, and p is an integer. Therefore, the second pre-divided subgroup (that is, a set of point clouds 9 to 18) is re-obtained by using the second step size (for example, 3). If characteristic information of the re-obtained second pre-divided subgroup does not meet the preset condition, characteristic information of a subgroup that includes point clouds 9 to q may meet the preset condition, where 15 &lt; q &lt; 18, and q is an integer. Therefore, the second pre-divided subgroup (that is, a set of point clouds 9 to 16) is re-obtained again by using the third step size (for example, 1). It is assumed that characteristic information of the re-obtained second pre-divided subgroup does not meet the preset condition, and a quantity of times of re-obtaining the second pre-divided subgroup reaches a preset quantity of times, or a step size for re-obtaining the second pre-divided subgroup for the last time is less than or equal to a preset step size. In this case, the first pre-divided subgroup (that is, the set of point clouds 9 to 15) is used as subgroup 3.</p>
<p id="p0176" num="0176">It may be understood that if characteristic information of the (i+1)<sup>th</sup> pre-divided subgroup that is re-obtained at a specific time meets the preset condition, the following step S207C may be performed.</p>
<p id="p0177" num="0177">S207C: If characteristic information of the re-obtained (i+1)<sup>th</sup> pre-divided subgroup meets the preset condition, the following operations are performed.</p>
<p id="p0178" num="0178">When a difference between a quantity of frames of point clouds included in the re-obtained (i+1)<sup>th</sup> pre-divided subgroup and a quantity of frames of point clouds included in the (i+1)<sup>th</sup> pre-divided subgroup obtained for the first time is less than or equal to a second preset quantity, the re-obtained (i+1)<sup>th</sup> pre-divided subgroup is determined to be one subgroup.</p>
<p id="p0179" num="0179">For example, referring to <figref idref="f0012">FIG. 11A</figref>, it is assumed that in the process of determining subgroup 3, if characteristic information of the re-obtained second pre-divided subgroup (that is, a set of point clouds 9 to 18) meets<!-- EPO <DP n="31"> --> the preset condition, characteristic information of a subgroup that includes point clouds 9 to d may meet the preset condition, where 18 &lt; d &lt; 21, and d is an integer. In this case, it is assumed that the second preset quantity is 3. Because a difference (that is, 3) between the quantity of frames of point clouds included in the re-obtained second pre-divided subgroup and the quantity of frames of point clouds included in the second pre-divided subgroup obtained for the first time is equal to the second preset quantity, the re-obtained second pre-divided subgroup (that is, a set of point clouds 9 to 18) is used as one subgroup.</p>
<p id="p0180" num="0180">When the difference between the quantity of frames of point clouds included in the re-obtained (i+1)<sup>th</sup> pre-divided subgroup and the quantity of frames of point clouds included in the (i+1)<sup>th</sup> pre-divided subgroup obtained for the first time is greater than the second preset quantity, an (i+2)<sup>th</sup> pre-divided subgroup is obtained by using a fourth step size, where a sum of the second step size and the fourth step size is less than the first step size. If characteristic information of the (i+2)<sup>th</sup> pre-divided subgroup meets the preset condition, an (i+3)<sup>th</sup> pre-divided subgroup is obtained by using a fifth step size, where a sum of the second step size, the fourth step size, and the fifth step size is less than the first step size. In other words, a sum of a step size used for obtaining an (i+k)<sup>th</sup> pre-divided subgroup, a step size used for obtaining an (i+k-1)<sup>th</sup> pre-divided subgroup, a step size used for obtaining an (i+k-2)<sup>th</sup> pre-divided subgroup,..., the step size used for obtaining the (i+2)<sup>th</sup> pre-divided subgroups, and the step size used for re-obtaining the (i+1)<sup>th</sup> pre-divided subgroup is less than the step size used for obtaining the (i+1)<sup>th</sup> pre-divided subgroup for the first time. By analogy, when a difference between a quantity of frames of point clouds included in the obtained (i+k)<sup>th</sup> pre-divided subgroup and the quantity of frames of point clouds included in the (i+1)<sup>th</sup> pre-divided subgroup obtained for the first time is less than or equal to the second preset quantity, if characteristic information of the (i+k)<sup>th</sup> pre-divided subgroup meets the preset condition, the (i+k)<sup>th</sup> pre-divided subgroup is determined to be one subgroup, where k ≥ 2, and k is an integer.</p>
<p id="p0181" num="0181">For example, referring to <figref idref="f0013">FIG. 11B</figref>, it is assumed that in the process of determining subgroup 3, if characteristic information of the re-obtained second pre-divided subgroup (that is, a set of point clouds 9 to 18) meets the preset condition, characteristic information of a subgroup that includes point clouds 9 to d may meet the preset condition, where 18 &lt; d &lt; 21, and d is an integer. In this case, it is assumed that the second preset quantity is 1. Because a difference (that is, 1) between the quantity of frames of point clouds included in the third pre-divided subgroup and the quantity of frames of pointclouds included in the second pre-divided subgroup obtained for the first time is equal to the second preset quantity, the third pre-divided subgroup (that is, a set of point clouds 9 to 21) is used as one subgroup.</p>
<p id="p0182" num="0182">It may be understood that if the characteristic information of the (i+k)<sup>th</sup> pre-divided subgroup does not meet the preset condition, the (i+k)<sup>th</sup> pre-divided subgroup is re-obtained. For subsequent steps to be performed, refer<!-- EPO <DP n="32"> --> to S207B and/or S207C.</p>
<p id="p0183" num="0183">It may be understood that, in a case of no conflict, the explanation of related content in Embodiment 1 may also be applied to Embodiment 2. For example, the processing manners in case 1 and case 2 in Embodiment 1 may be applied to Embodiment 2. For another example, the method for determining a step size in Embodiment 1 may be applied to Embodiment 2.</p>
<p id="p0184" num="0184">The method for determining a subgroup provided in this embodiment helps enable as many point clouds in the to-be-encoded point cloud group as possible to form one subgroup that meets a preset condition when a step size of the sliding window is greater than 1. When one subgroup includes at least two frames of point clouds, an occupancy map that is of patches having a matching relationship in each point cloud and that is obtained by using the global matching packing algorithm corresponds to a location in an occupancy map of the point cloud in which the patches are located, so that coding performance can be improved. Therefore, according to the solution provided in this embodiment, as many point clouds as possible form one subgroup that meets the preset condition, and when point clouds in the subgroup are packed by using the global matching packing algorithm, coding efficiency is improved.</p>
<p id="p0185" num="0185">The following briefly describes some terms in a process of implementing pre-divided by using a dichotomy, to facilitate understanding by a reader.</p>
<p id="p0186" num="0186">A subgroup segmentation point is a segmentation point of two adjacent subgroups. It may be understood that an essence of dividing the to-be-encoded point cloud group is searching for a subgroup segmentation point in the to-be-encoded point cloud group.</p>
<p id="p0187" num="0187">An intermediate point of the dichotomy is an intermediate object among a plurality of objects in a sequence on which the dichotomy is performed. For example, assuming that numbers of objects included in one sequence are respectively x to y, where 1 ≤ x &lt; y, and both x and y are integers, a middle point of the dichotomy is an object numbered └(<i>y</i> - <i>x</i>)/2┘, or an object numbered ┌(<i>y</i> - <i>x</i>)/2┐. Herein, └ ┘ represents rounding down and ┌ ┐ represents rounding up. Among the objects on which the current dichotomy is performed, the objects before the middle point are referred to as the first half of the objects obtained by performing the current dichotomy, and the objects after the middle point are referred to as the second half of the objects obtained by performing the current dichotomy.</p>
<p id="p0188" num="0188">For an i<sup>th</sup> pre-divided subgroup, a dichotomy is performed on point clouds, that have not been grouped, in a to-be-encoded point cloud group for an i<sup>th</sup> time by using a j<sup>th</sup> frame of point cloud as a start point, to obtain the i<sup>th</sup> pre-divided subgroup. For example, the first half of point clouds obtained by performing the dichotomy may be used as the i<sup>th</sup> pre-divided subgroup. This is used as an example for description in this embodiment of this application.<!-- EPO <DP n="33"> --> Certainly, this embodiment of this application is not limited thereto. The j<sup>th</sup> frame of point cloud is the first frame of point cloud in point clouds, that have not been grouped, in a to-be-encoded point cloud group.</p>
<p id="p0189" num="0189">If the characteristic information of the i<sup>th</sup> pre-divided subgroup meets the preset condition, the (i+1)<sup>th</sup> pre-divided subgroup is a set of the i<sup>th</sup> pre-divided subgroup and the first half of point clouds that are obtained by performing a dichotomy for the (i+1)<sup>th</sup> time.</p>
<p id="p0190" num="0190">If the characteristic information of the i<sup>th</sup> pre-divided subgroup does not meet the preset condition, the (i+1)<sup>th</sup> pre-divided subgroup is a set of the first half of point clouds in the i<sup>th</sup> pre-divided subgroup.</p>
<p id="p0191" num="0191"><figref idref="f0014">FIG. 12</figref> is a schematic diagram of a relationship between a dichotomy and a pre-divided subgroup according to an embodiment of this application. <figref idref="f0014">FIG. 12</figref> is described by using an example in which the to-be-encoded point cloud group includes point clouds 1 to 32. Specifically, a dichotomy is performed on the point clouds 1 to 32 to obtain the first pre-divided subgroup (that is, a set of point clouds 1 to 16). If the characteristic information of the first pre-divided subgroup meets the preset condition, a dichotomy is performed on point clouds 16 to 32 to obtain the second pre-divided subgroup (that is, a set of point clouds 1 to 24), as shown in (a) in <figref idref="f0014">FIG. 12</figref>. If the characteristic information of the first pre-divided subgroup does not meet the preset condition, a dichotomy is performed on point clouds 1 to 16, to obtain the second pre-divided subgroup (that is, a set of point clouds 1 to 7), as shown in (b) in <figref idref="f0014">FIG. 12</figref>.</p>
<p id="p0192" num="0192">The following describes, by using a specific example, a method for determining a subgroup in a to-be-encoded point cloud group when pre-division is implemented by using a dichotomy provided in this embodiment of this application. For details, refer to the following Embodiment 3 or Embodiment 4.</p>
<heading id="h0008"><b>Embodiment 3</b></heading>
<p id="p0193" num="0193"><figref idref="f0015">FIG. 13</figref> is a schematic flowchart of a method for determining a subgroup according to an embodiment of this application. The method shown in <figref idref="f0015">FIG. 13</figref> includes the following steps:
<ul id="ul0004" list-style="none" compact="compact">
<li>S301: Perform a dichotomy for the first time by using a j<sup>th</sup> frame as a start point, to obtain a first pre-divided subgroup, where 1 ≤ j ≤ J, and J represents a quantity of frames of point clouds included in the to-be-encoded point cloud group.</li>
<li>S302: Determine whether characteristic information of the first pre-divided subgroup meets a preset condition.</li>
</ul></p>
<p id="p0194" num="0194">If the characteristic information of the first pre-divided subgroup meets the preset condition, it indicates that a to-be-determined segmentation point is in the second half of point clouds obtained by performing the current<!-- EPO <DP n="34"> --> dichotomy, and S303 is performed.</p>
<p id="p0195" num="0195">If the characteristic information of the first pre-divided subgroup does not meet the preset condition, it indicates that the to-be-determined segmentation point is in the first half of point clouds obtained by performing the current dichotomy, and S304 is performed.</p>
<p id="p0196" num="0196">S303: Perform a dichotomy for the second time, to obtain a second pre-divided subgroup; if the second pre-divided subgroup meets the preset condition, perform a dichotomy for the third time, in other words, when the pre-divided subgroup obtained by performing the current dichotomy meets the preset condition, perform a next dichotomy; and by analogy, perform a dichotomy. There may be the following subsequent implementations:</p>
<p id="p0197" num="0197">Implementation 1: If the pre-divided subgroup obtained by performing the most recent dichotomy still meets the preset condition until the dichotomy cannot be continued, all point clouds, that have not been grouped, in to-be-encoded point clouds are used as one subgroup.</p>
<p id="p0198" num="0198">Implementation 2: If characteristic information of an (i+1)<sup>th</sup> pre-divided subgroup obtained by performing a dichotomy for an (i+1)<sup>th</sup> time does not meet the preset condition, an i<sup>th</sup> pre-divided subgroup obtained by performing a dichotomy for the i<sup>th</sup> time is used as one subgroup, where i ≥ 1, and i is an integer.</p>
<p id="p0199" num="0199">S304: Perform a dichotomy for the second time, to obtain a second pre-divided subgroup; if the second pre-divided subgroup does not meet the preset condition, perform a dichotomy for the third time, in other words, when the pre-divided subgroup obtained by performing the current dichotomy does not meet the preset condition, perform a next dichotomy; and by analogy, perform a dichotomy. There may be the following subsequent implementations:</p>
<p id="p0200" num="0200">Implementation 1: If the pre-divided subgroup obtained by performing the most recent dichotomy still does not meet the preset condition until the dichotomy cannot be continued, the first frame of point cloud, that has not been grouped, in to-be-encoded point clouds is used as one subgroup.</p>
<p id="p0201" num="0201">Implementation 2: If the pre-divided subgroup obtained by performing the most recent dichotomy meets the preset condition until the dichotomy cannot be continued, a pre-divided subgroup obtained most recently is used as one subgroup.</p>
<p id="p0202" num="0202">Implementation 3: If characteristic information of an (i+1)<sup>th</sup> pre-divided subgroup obtained by performing a dichotomy for an (i+1)<sup>th</sup> time meets the preset condition, a dichotomy is performed for the (i+2)<sup>th</sup> time. If characteristic information of an (i+1)<sup>th</sup> pre-divided subgroup obtained by performing a dichotomy for the (i+2)<sup>th</sup> time meets the preset condition, a dichotomy is performed for the (i+3)<sup>th</sup> time. In other words, when the pre-divided subgroup obtained by performing the current dichotomy meets the preset condition, a next dichotomy is performed. By analogy, a dichotomy is performed. If the pre-divided subgroup obtained by performing the mostrecent dichotomy still meets the preset condition until the dichotomy cannot be continued, a pre-divided subgroup obtained most recently<!-- EPO <DP n="35"> --> is used as one subgroup. If a pre-divided subgroup obtained by performing a dichotomy at a specific time does not meet the preset condition, a pre-divided subgroup obtained by performing a dichotomy at a previous time is used as one subgroup.</p>
<p id="p0203" num="0203">The method for determining a subgroup provided in this embodiment helps enable as many point clouds in the to-be-encoded point cloud group as possible to form one subgroup that meets the preset condition, and when point clouds in the subgroup are packed by using the global matching packing algorithm, coding efficiency is improved.</p>
<heading id="h0009"><b>Embodiment 4</b></heading>
<p id="p0204" num="0204"><figref idref="f0016">FIG. 14</figref> is a schematic flowchart of a method for determining a subgroup according to an embodiment of this application. The method shown in <figref idref="f0016">FIG. 14</figref> includes the following steps:
<ul id="ul0005" list-style="none" compact="compact">
<li>S401: Perform a dichotomy for the first time by using a j<sup>th</sup> frame as a start point, to obtain a first pre-divided subgroup, where 1 ≤ j ≤ J, and J represents a quantity of frames of point clouds included in the to-be-encoded point cloud group.</li>
<li>S402: Determine whether characteristic information of the first pre-divided subgroup meets a preset condition.</li>
</ul></p>
<p id="p0205" num="0205">If the characteristic information of the first pre-divided subgroup meets the preset condition, S403 is performed. If the characteristic information of the first pre-divided subgroup does not meet the preset condition, S404 is performed.</p>
<p id="p0206" num="0206">S403: Use the first pre-divided subgroup as one subgroup.</p>
<p id="p0207" num="0207">S404: Perform a dichotomy for the second time, to obtain a second pre-divided subgroup; if characteristic information of the second pre-divided subgroup does not meet the preset condition, perform a dichotomy for the third time to obtain a third pre-divided subgroup, in other words, when the pre-divided subgroup obtained by performing the current dichotomy does not meet the preset condition, perform a next dichotomy; and by analogy, perform a dichotomy. There may be the following subsequent implementations:</p>
<p id="p0208" num="0208">Implementation 1: If the pre-divided subgroup obtained by performing the most recent dichotomy still does not meet the preset condition until the dichotomy cannot be continued, the first frame of point cloud, that has not been grouped, in to-be-encoded point clouds is used as one subgroup.</p>
<p id="p0209" num="0209">Implementation 2: If an (i+1)<sup>th</sup> pre-divided subgroup obtained by performing a dichotomy for an (i+1)<sup>th</sup> time meets the preset condition, an (i+1)<sup>th</sup> pre-divided subgroup is used as one subgroup, where i ≥ 1, and i is an integer.<!-- EPO <DP n="36"> --></p>
<p id="p0210" num="0210">According to the method for determining a subgroup provided in this embodiment, a first pre-divided subgroup that meets a preset condition in a plurality of pre-divided subgroups that are obtained by performing a dichotomy a plurality of times is used as one subgroup. Unlike the pre-divided method by using a sliding window method, if a pre-divided subgroup obtained through pre-division by using a dichotomy meets a preset condition, it may be considered that the pre-divided subgroup obtained by performing the current dichotomy already includes a relatively large number of point clouds. Therefore, when the global matching packing algorithm is used to pack point clouds in the subgroup, coding efficiency is improved.</p>
<p id="p0211" num="0211">It should be noted that, any one of "the dichotomy cannot be continued" described in Embodiment 3 and Embodiment 4 may include: when a quantity of objects (specifically, point clouds) on which the dichotomy is performed is 1, the dichotomy cannot be performed; or when a quantity of times of performing a dichotomy reaches a preset threshold, the dichotomy cannot be continued. When the quantity of objects on which the dichotomy is performed is 1, the dichotomy cannot be performed, which may be extended as follows: When the quantity of objects (specifically, point clouds) on which the dichotomy is performed is less than or equal to a preset threshold, the dichotomy cannot be continued.</p>
<p id="p0212" num="0212">For details about whether any pre-divided subgroup described in Embodiment 1 to Embodiment 4 meets the preset condition, refer to the following description. The following provides description by using an example in which when the characteristic information of the i<sup>th</sup> pre-divided subgroup meets the preset condition, and the characteristic information of the (i+1)<sup>th</sup> pre-divided subgroup does not meet the preset condition, the i<sup>th</sup> pre-divided subgroup is determined to be one of the plurality of subgroups. In addition, it may be understood that the "pre-divided subgroup" used in the following description of whether a pre-divided subgroup meets a preset condition may be obtained, for example without limitation, by using a sliding window method or a dichotomy method.</p>
<p id="p0213" num="0213">Optionally, when the characteristic information of the i<sup>th</sup> pre-divided subgroup meets the preset condition, and the characteristic information of the (i+1)<sup>th</sup> pre-divided subgroup does not meet the preset condition, the i<sup>th</sup> pre-divided subgroup is determined to be one of the plurality of subgroups. This can be implemented in at least one of the following manners:</p>
<p id="p0214" num="0214">Manner 1: If the characteristic information of the i<sup>th</sup> pre-divided subgroup includes a size of a global occupancy map for the i<sup>th</sup> pre-divided subgroup, when the size of the global occupancy map for the i<sup>th</sup> pre-divided subgroup is less than or equal to a first threshold, and when a size of a global occupancy map for the (i+1)<sup>th</sup> pre-divided subgroup is greater than the first threshold, the i<sup>th</sup> pre-divided subgroup is determined to be one subgroup.</p>
<p id="p0215" num="0215">A global occupancy map is obtained by packing one or more union patch occupancy maps, and a union patch occupancy map is a union of a group of global matched patches in a pre-divided subgroup. Therefore, as a<!-- EPO <DP n="37"> --> quantity of frames of point clouds in the pre-divided subgroup increases, a quantity of patches in a group of global matched patches increases, and further an area of a union patch occupancy map corresponding to the group of global matched patches increases, and a size of a global occupancy map increases. In consideration of this reason, this manner is provided. Based on this manner, a global occupancy map for a subgroup is limited within the first threshold, which may indirectly reflect a size of an occupancy map of a point cloud in the subgroup. Therefore, coding efficiency is improved.</p>
<p id="p0216" num="0216">It may be understood that when different parameters are used to represent the size of the global occupancy map, meanings of the first threshold are different. For example, when the size of the global occupancy map is represented by a product of the height and the width of the global occupancy map, the first threshold represents an allowable maximum value of an area of a global occupancy map for a subgroup. For another example, when the size of the global occupancy map is represented by the height of the global occupancy map, the first threshold represents an allowable maximum value of the height of a global occupancy map for a subgroup.</p>
<p id="p0217" num="0217">In an implementation, the first threshold is a predefined value, for example, a predefined empirical value. For example, when the first threshold represents an allowable maximum value of the height of a global occupancy map for a subgroup, the first threshold may be 1280 pixels.</p>
<p id="p0218" num="0218">In another implementation, the first threshold is determined based on a maximum size of an occupancy map that is of a point cloud (for example, each point cloud) in the to-be-encoded point cloud group and that is obtained based on a candidate packing algorithm The candidate packing algorithm may be another packing algorithm other than the global matching packing algorithm, for example, an anchor packing algorithm For example, the first threshold is H * w1, where H represents a maximum value of the height of an occupancy map that is of a point cloud in the to-be-encoded point cloud group and that is obtained based on the candidate algorithm such as the anchor packing algorithm, and w1 is a constant; and w1 may be determined based on impact of the global matching packing algorithm and the candidate packing algorithm on efficiency of video encoding and decoding. Optionally, w1 ∈ (0.5, 1.5), which is certainly not limited.</p>
<p id="p0219" num="0219">Manner2: If the characteristic information of the i<sup>th</sup> pre-divided subgroup includes a size of an occupancy map of a point cloud in the i<sup>th</sup> pre-divided subgroup, the following manner 2-1 and/or manner 2-2 are/is performed:<br/>
Manner 2-1: When a quantity of large-sized frames of point clouds in the i<sup>th</sup> pre-divided subgroup is less than or equal to a first preset quantity, and a quantity of large-sized frames of point clouds in the (i+1)<sup>th</sup> pre-divided subgroup is greater than the first preset quantity, the i<sup>th</sup> pre-divided subgroup is determined to be one subgroup. The large-sized point cloud is a point cloud with an occupancy map whose size is greater than or equal to a second threshold. The occupancy map herein may be an occupancy map that is of a point cloud and that is obtained by packing a frame<!-- EPO <DP n="38"> --> of point cloud based on any packing algorithm</p>
<p id="p0220" num="0220">The first preset quantity may be a predefined value, for example, a predefined empirical value such as 4. It may be understood that if the first preset quantity is 1, manner 2-1 may be replaced as follows: when the i<sup>th</sup> pre-divided subgroup does not include a large-sized point cloud, and the (i+1)<sup>th</sup> pre-divided subgroup includes a large-sized point cloud, the i<sup>th</sup> pre-divided subgroup is determined to be one subgroup.</p>
<p id="p0221" num="0221">It may be understood that when different parameters are used to represent the size of the occupancy map of the point cloud, meanings of the second threshold are different. For example, when the size of the occupancy map of the point cloud is represented by a product of the height and the width of the occupancy map of the point cloud, the second threshold represents an allowable maximum value of an area of an occupancy map of a point cloud in a subgroup. For another example, when the size of the occupancy map of the point cloud is represented by the height of the occupancy map of the point cloud, the second threshold represents an allowable maximum value of the height of an occupancy map of a point cloud in a subgroup.</p>
<p id="p0222" num="0222">In an implementation, the second threshold is a predefined value, for example, a predefined empirical value. For example, when the size of the occupancy map of the point cloud is represented by a product of the height and the width of the occupancy map of the point cloud, the second threshold may be 1280 pixels.</p>
<p id="p0223" num="0223">In another implementation, the large-sized point cloud is specifically a point cloud with an occupancy map whose size is obtained based on the global matching packing algorithm and is greater than or equal to the second threshold.</p>
<p id="p0224" num="0224">Optionally, the second threshold may be determined based on a maximum size of an occupancy map that is of a point cloud in the to-be-encoded point cloud group and that is obtained based on a candidate packing algorithm The candidate packing algorithm is another packing algorithm other than the global matching packing algorithm, for example, an anchor packing algorithm For example, when NH<sub>i,u</sub> ≥ H<sub>max</sub> * w2, it is considered that a u<sup>th</sup> frame of point cloud in the i<sup>th</sup> pre-divided subgroup is a large-sized point cloud, where u ≥ 1, and u is an integer; NH<sub>i,u</sub> represents the height of an occupancy map that is of the u<sup>th</sup> frame of point cloud in the i<sup>th</sup> pre-divided subgroup and that is obtained based on the global matching packing algorithm; H<sub>max</sub> represents a maximum value of the height of an occupancy map that is of a point cloud in the to-be-encoded point cloud group and that is obtained based on the candidate packing algorithm such as the anchor packing algorithm; and w2 represents a constant. Optionally, w2 ∈ (0.5, 1.5), which is certainly not limited herein. A size of an occupancy map of a frame of point cloud is greater than or equal to a global occupancy map for a subgroup in which the frame of point cloud is located. Further optionally, w1 &lt; w2. For example, w1 is slightly less than w2.</p>
<p id="p0225" num="0225">Optionally, the second threshold may be determined based on a size of an occupancy map that is of the<!-- EPO <DP n="39"> --> local point cloud and that is obtained based on the candidate packing algorithm The candidate packing algorithm is another packing algorithm other than the global matching packing algorithm, for example, an anchor algorithm For example, NH<sub>i,u</sub> ≥ H<sub>i,u</sub> * w3, where NH<sub>i,u</sub> represents the height of an occupancy map that is of the u<sup>th</sup> frame of point cloud in the i<sup>th</sup> pre-divided subgroup and that is obtained based on the global matching packing algorithm; H<sub>i,u</sub> represents the height of an occupancy map that is of the u<sup>th</sup> frame of point cloud in the i<sup>th</sup> pre-divided subgroup and that is obtained based on the candidate packing algorithm such as the anchor packing algorithm; and w3 represents a constant. Optionally, w3 ∈ (0.5, 3.0). Further optionally, w3 is greater than w2.</p>
<p id="p0226" num="0226">Manner 2-2: When an average value of ratios of sizes of occupancy maps obtained based on the global matching packing algorithm to sizes of occupancy maps obtained based on the candidate packing algorithm for frames of point clouds in the i<sup>th</sup> pre-divided subgroup is less than or equal to a third threshold, and an average value of ratios of sizes of occupancy maps obtained based on the global matching packing algorithm to sizes of occupancy maps obtained based on the candidate packing algorithm for frames of point clouds in the (i+1)<sup>th</sup> pre-divided subgroup is greater than the third threshold, the i<sup>th</sup> pre-divided subgroup is determined to be one subgroup.</p>
<p id="p0227" num="0227">The candidate packing algorithm may be another packing algorithm other than the global matching packing algorithm, for example, an anchor packing algorithm For example, sum(NH<sub>i,u</sub>/H<sub>i,u</sub>)/frameCnt<sub>i</sub> ≤ third threshold, and sum(NH<sub>i+1,v</sub>/H<sub>i+1,v</sub>)frameCnt<sub>i+1</sub> &gt; third threshold, where sun() indicates a summation operation; NH<sub>i,u</sub> represents the height of an occupancy map that is of the u<sup>th</sup> frame of point cloud in the i<sup>th</sup> pre-divided subgroup and that is obtained based on the global matching packing algorithm; H<sub>i,u</sub> represents the height of an occupancy map that is of the u<sup>th</sup> frame of point cloud in the i<sup>th</sup> pre-divided subgroup and that is obtained based on the global matching packing algorithm; frameCnt<sub>i</sub> represents a quantity of frames of point clouds included in the i<sup>th</sup> pre-divided subgroup; u ≥ 1, and u is an integer, NH<sub>i+1,v</sub> represents the height of an occupancy map that is of a v<sup>th</sup> frame of point cloud in the (i+1)<sup>th</sup> pre-divided subgroup and that is obtained based on the global matching packing algorithm; H<sub>i+1,v</sub> represents the height of an occupancy map that is of a v<sup>th</sup> frame of point cloud in the (i+1)<sup>th</sup> pre-divided subgroup and that is obtained based on the global matching packing algorithm; frameCnt<sub>i+1</sub> represents a quantity of frames of point clouds included in the (i+1)<sup>th</sup> pre-divided subgroup; and v ≥ 1, and v is an integer.</p>
<p id="p0228" num="0228">Optionally, the third threshold is a predefined value. Optionally, the third threshold is a value greater than 1, for example, 1.2.</p>
<p id="p0229" num="0229">In addition, optionally, the determining the i<sup>th</sup> pre-divided subgroup to be one subgroup based on characteristic information of the i<sup>th</sup> pre-divided subgroup may include the following manner A or manner B:</p>
<p id="p0230" num="0230">Manner A: When a decrease in the size of the global occupancy map for the (i+1)<sup>th</sup> pre-divided subgroup compared with the size of the global occupancy map for the i<sup>th</sup> pre-divided subgroup is greater than or equal to a fifth<!-- EPO <DP n="40"> --> threshold, it indicates that compared with using the i<sup>th</sup> pre-divided subgroup as one subgroup, when the (i+1)<sup>th</sup> pre-divided subgroup is used as one subgroup, point cloud coding efficiency decreases significantly when the global matching packing algorithm is used for packing. Therefore, the i<sup>th</sup> pre-divided subgroup is determined to be one of a plurality of subgroups.</p>
<p id="p0231" num="0231">It may be understood that, it is assumed that a global matched patch in the i<sup>th</sup> pre-divided subgroup is still a global matched patch in the (i+1)<sup>th</sup> subgroup; in this case, a size of the global occupancy map for the (i+1)<sup>th</sup> pre-divided subgroup is greater than or equal to a size of the global occupancy map for the i<sup>th</sup> pre-divided subgroup. However, there may be a case in which a group of global matched patches in the i<sup>th</sup> pre-divided subgroup are not global matched patches in the (i+1)<sup>th</sup> pre-divided subgroup. In this case, a size of the global occupancy map for the (i+1)<sup>th</sup> pre-divided subgroup may be less than a size of the global occupancy map for the i<sup>th</sup> pre-divided subgroup. In consideration of this reason, this manner is provided.</p>
<p id="p0232" num="0232">Manner B: The characteristic information of the i<sup>th</sup> pre-divided subgroup includes an area of a union patch occupancy map for the i<sup>th</sup> pre-divided subgroup. Correspondingly, when a decrease in a total area of the union patch occupancy map for the (i+1)<sup>th</sup> pre-divided subgroup compared with a total area of the union patch occupancy map for the i<sup>th</sup> pre-divided subgroup is greater than or equal to a fourth threshold, it indicates that compared with using the i<sup>th</sup> pre-divided subgroup as one subgroup, when the (i+1)<sup>th</sup> pre-divided subgroup is used as one subgroup, point cloud coding efficiency decreases significantly when the global matching packing algorithm is used for packing. Therefore, the i<sup>th</sup> pre-divided subgroup is determined to be one subgroup. For related description of this manner, refer to the foregoing related description of manner A. Details are not described herein again.</p>
<p id="p0233" num="0233">S502: Write the subgroup information of the N frames of point clouds into a bitstream</p>
<p id="p0234" num="0234">In a possible embodiment, the writing the subgroup information of the N frames of point clouds into a bitstream includes:<br/>
writing N<sub>0</sub>, N<sub>1</sub>,..., N<sub>M-1</sub>, and/or M into the bitstream, where M is greater than or equal to 1; or writing (M-1) values in values of N<sub>0</sub>, N<sub>1</sub>,..., and N<sub>M-1</sub> and M into the bitstream, where M is greater than orequalto 1, N<sub>m</sub> represents a quantity of frames of point clouds in an i<sup>th</sup> subgroup of the M subgroups, and m= 0, 1, ..., and M-1.</p>
<p id="p0235" num="0235">The writing N<sub>0</sub>, N<sub>1</sub>,..., N<sub>M-1</sub>, and/orM into the bitstream includes:
<ul id="ul0006" list-style="none" compact="compact">
<li>writing only M into the bitstream, where M = 1 in this case, that is, N frames of point clouds are divided into one group;</li>
<li>writing N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> into the bitstream, where M is greater than or equal to 1; or</li>
<li>writing N<sub>0</sub>, N<sub>1</sub>, ..., N<sub>M-1</sub>, and M into the bitstream, where M is greater than or equal to 1.</li>
</ul></p>
<p id="p0236" num="0236">It should be noted that, writing only M into the bitstream is performed when M = 1. M = 1 means that N<!-- EPO <DP n="41"> --> frames of point clouds are divided into one group. (M-1) values in values of N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> means any (M-1) values in values of N<sub>0</sub>, N<sub>1</sub>,..., and N<sub>M-1</sub>.</p>
<p id="p0237" num="0237">In a possible embodiment, some of the N frames of point clouds are grouped adaptively, and the other frames of point clouds are grouped based on a fixed frame length. Therefore, the subgroup information of the N frames of point clouds can be written into a bitstream, which includes: writing T frames in N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> and/orT into the bitstream.</p>
<p id="p0238" num="0238">T frames in N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> may each mean a quantity of frames of point clouds included in each of T consecutive subgroups in terms of a division order among the M subgroups.</p>
<p id="p0239" num="0239">It should be noted herein that one or more of N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> can be written into the bitstream by using a fixed-length encoding scheme or a variable-length encoding scheme. The fixed-length encoding scheme specifically means that encoding is performed by using a fixed quantity of bits. The variable-length encoding scheme includes but is not limited to an arithmetic encoding scheme and an exponential Columbus encoding scheme.</p>
<p id="p0240" num="0240">For example, it is assumed that N = 32, M = 5, N<sub>0</sub> = 5, N<sub>1</sub> = 7, N<sub>2</sub> = 6, N<sub>3</sub> = 6, and N<sub>4</sub> = 8, that is, 32 frames of point clouds are divided into five subgroups. A quantity of frames of point clouds in a zeroth subgroup is 5, a quantity of frames of point clouds in a first subgroup is 7, a quantity of frames of point clouds in a second subgroup is 6, a quantity of frames of point clouds in a third subgroup is 6, and a quantity of frames of point clouds in a fourth subgroup is 8. If five bits are used for encoding, the quantity 5 of frames of point clouds in the zeroth subgroup may be encoded as 00101, the quantity 7 of frames of point clouds in the first subgroup may be encoded as 00111, the quantity 6 of frames of point clouds in the second subgroup may be encoded as 00110, the quantity 6 of frames of point clouds in the third subgroup may be encoded as 00110, and the quantity 8 of frames of point clouds in the fourth subgroup may be encoded as 01000. In this case, a quantity of frames of point clouds in the five subgroups may be encoded as 0010100111001100011001000, which includes 25 bits in total. Arithmetic encoding can be further performed on the 25 bits, thereby further improving compression efficiency of the bitstream. Certainly, encoding may alternatively be performed by using anotherquantity of bits. This is not limited in this application.</p>
<p id="p0241" num="0241">To save a bitstream, if a variable-length encoding scheme is used, the quantity 5 of frames of point clouds in the zeroth subgroup may be represented as 101, the quantity 7 of frames of point clouds in the first subgroup may be represented as 111, the quantity 6 of frames of point clouds in the second subgroup may be represented as 110, the quantity 6 of frames of point clouds in the third subgroup may be represented as 110, and the quantity 8 of frames of point clouds in the fourth subgroup may be represented as 1000. In this case, a quantity of frames of point clouds in the five subgroups may be encoded as 1011111101101000, which includes 16 bits in total.</p>
<p id="p0242" num="0242">In a possible embodiment, the writing the subgroup information of the N frames of point clouds into a<!-- EPO <DP n="42"> --> bitstream includes: generating one or more bit strings based on a quantity of frames of point clouds in one or more subgroups among the M subgroups, where a length of an s<sup>th</sup> bit string in the one or more bit strings is a quantity of frames of point clouds included in an s<sup>th</sup> subgroup of the one or more subgroups; and writing one or more bit strings into the bitstream. In this manner, for the N frames of point clouds, a bit string (that is, M bit strings) including N bits may be finally obtained, and the N bits can be encoded by using N bits, or encoded by using an arithmetic encoding scheme.</p>
<p id="p0243" num="0243">In a possible embodiment, the one or more subgroups include an (s-1)<sup>th</sup> subgroup and an s<sup>th</sup> subgroup, and a value of a bit in a bit string corresponding to the (s-1)<sup>th</sup> subgroup is different from a value of a bit in a bit string corresponding to the s<sup>th</sup> subgroup. For example, the value of the bit in the bit string corresponding to the (s-1)<sup>th</sup> subgroup is a first identifier, and the value of the bit in the bit string corresponding to the s<sup>th</sup> subgroup is a second identifier. A value of a bit in a bit string corresponding to an (s+1)<sup>th</sup> subgroup may be a first identifier or a third identifier, and the third identifier is different from both the first identifier and the second identifier.</p>
<p id="p0244" num="0244">Optionally, the first identifier may be 0 or 1. The second identifier may be 0 or 1, and the first identifier is different from the second identifier.</p>
<p id="p0245" num="0245">In a possible embodiment, values of bits in a bit string corresponding to each of the one or more subgroups are the same. It should be noted that, that values of bits in a bit string corresponding to each subgroup are the same means that values of all bits in the bit string corresponding to each subgroup are the same.</p>
<p id="p0246" num="0246">It should be noted herein that one subgroup corresponds to one bit string, and one bit of the bit string represents a frame of point cloud in one subgroup. Therefore, a quantity of frames of point clouds included in the subgroup corresponding to the bit string can be determined based on a quantity of bits in the bit string (that is, a length of the bit string). For a bit string corresponding to one subgroup, values of all bits in the bit string are the same, and values of bits in two bit strings respectively corresponding to two adjacent subgroups in terms of a division order are different. Therefore, quantities of frames of point clouds respectively included in two adjacent subgroups in terms of a division order can be distinguished.</p>
<p id="p0247" num="0247">For example, it is assumed that N = 32, M = 5, N<sub>0</sub> = 5, N<sub>1</sub> = 7, N<sub>2</sub> = 6, N<sub>3</sub> = 6, N<sub>4</sub> = 8, a first identifier is 0, and a second identifier is 1, that is, 32 frames of point clouds are divided into five subgroups. A quantity of frames of point clouds in a zeroth subgroup is 5, a quantity of frames of point clouds in a first subgroup is 7, a quantity of frames of point clouds in a second subgroup is 6, a quantity of frames of point clouds in a third subgroup is 6, and a quantity of frames of point clouds in a fourth subgroup is 8. A bit string corresponding to the zeroth subgroup is 00000, a bit string corresponding to the first subgroup is 1111111, a bit string corresponding to the second subgroup is 000000, a bit string corresponding to the third subgroup is 111111, and a bit string corresponding to the fourth subgroup is<!-- EPO <DP n="43"> --> 00000000. The five bit strings include 32 bits in total, and the 32 bits can be used for encoding, or the five bit strings can be encoded in an arithmetic encoding scheme.</p>
<p id="p0248" num="0248">In a possible embodiment, the encoding method further includes: writing rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in a current subgroup into the bitstream.</p>
<p id="p0249" num="0249">The rotation angle information includes a specific rotation angle value or a rotation angle index. For example, if a rotation angle value of a patch is 0, it indicates that the patch does not rotate. If the rotation angle value of the patch is 20, it indicates that the patch rotates by 20 degrees. For another example, if a rotation angle index of a patch is 0, it indicates that the patch does not rotate. If the rotation angle index of the patch is 1, it indicates that the patch rotates by 15 degrees. If the rotation angle index of the patch is 2, it indicates that the patch rotates by 30 degrees.</p>
<p id="p0250" num="0250">The rotation angle information can be written into the bitstream by using a fixed-length encoding scheme or a variable-length encoding scheme. The fixed-length encoding scheme means that encoding is performed by using a fixed quantity of bits. For example, an angle value of a patch is encoded by using 5 bits. A rotation angle value 0 of the patch may be encoded as 00000, and a rotation angle value 20 of the patch may be encoded as 10100. Alternatively, a rotation angle index 0 of the patch may be encoded as 00000, a rotation angle index 1 of the patch may be encoded as 00001, and a rotation angle index 2 of the patch may be encoded as 00010.</p>
<p id="p0251" num="0251">The variable-length encoding scheme includes but is not limited to an arithmetic encoding scheme and an exponential Columbus encoding scheme. When the variable-length encoding scheme is used, for example, a rotation angle value 0 of the patch may be encoded as 0, and a rotation angle value 10 of the patch may be encoded as 1010; or a rotation angle index 0 of the patch may be encoded as 0, a rotation angle index 1 of the patch may be encoded as 1, and a rotation angle index 2 of the patch may be encoded as 10.</p>
<p id="p0252" num="0252">It should be noted that the one or more matched patches in the patch set of the first frame of point cloud in the current subgroup are patches for which a matched patch is found in a patch set of a reference frame of the first frame of point cloud in the current subgroup. The reference frame of the first frame of point cloud in the current subgroup may be a point cloud in a previous subgroup of the current subgroup.</p>
<p id="p0253" num="0253">For example, patch A in the patch set of the first frame of point cloud in the current subgroup. If there is a patch that matches patch A in the patch set of the reference frame of the first frame of point cloud, patch A may be referred to as a matched patch.</p>
<p id="p0254" num="0254">S503: Encode the N frames of point clouds based on the subgroup information of the N frames of point clouds.</p>
<p id="p0255" num="0255">Specifically, the encoding the N frames of point clouds based on the subgroup information of the N frames of point clouds specifically includes: performing decoding based on the subgroup information of the N frames<!-- EPO <DP n="44"> --> of point clouds to obtain auxiliary information of the patch in the N frames of point clouds; and then encoding the N frames of point clouds based on the auxiliary information of the patch in the N frames of point clouds.</p>
<p id="p0256" num="0256">It can be learned that, in the solution of this embodiment of this application, subgroup information of N frames of point clouds obtained by grouping the N frames of point clouds in an adaptive grouping manner is written into a bitstream In addition, in the adaptive grouping manner, correlation of patches among a plurality of consecutive frames of point clouds is fully considered. This fully ensures spatial consistency of patches having a matching relationship, and improves coding efficiency of point clouds. The subgroup information obtained through adaptive grouping is used to guide the decoder side in correctly decoding the point cloud data.</p>
<p id="p0257" num="0257"><figref idref="f0016">FIG. 15</figref> is a schematic flowchart of a point cloud encoding method according to an embodiment of this application. As shown in <figref idref="f0016">FIG. 15</figref>, the method includes the following steps.</p>
<p id="p0258" num="0258">S1501: Receive abitstream, and parse the bitstreamto obtain subgroup information, where the subgroup information includes a quantity M of subgroups into which N frames of point clouds are divided and/or a quantity of frames of point clouds included in each of one or more subgroups among the M subgroups.</p>
<p id="p0259" num="0259">It should be noted that the M subgroups are obtained by grouping the N frames of point clouds in an adaptive grouping manner.</p>
<p id="p0260" num="0260">In a possible embodiment, the parsing the bitstream to obtain subgroup information includes: parsing the bitstream to obtain a quantity of frames of point clouds in each of the M subgroups and/orM, where M is greater than or equal to 1; or parsing the bitstream to obtain M and a quantity of frames of point clouds in each of M-1 subgroups, where M is greaterthan orequal to 1.</p>
<p id="p0261" num="0261">The parsing the bitstream to obtain a quantity of frames of point clouds in each of the M subgroups and/orM includes:<br/>
parsing the bitstream to obtain only M, where M = 1 in this case; parsing the bitstream to obtain only N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub>, where M is greater than or equal to 1; or parsing the bitstream to first obtain M, and then obtain N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> based on M, where M is greater than or equal to 1 in this case; N<sub>m</sub> represents a quantity of frames of point clouds in an m<sup>th</sup> subgroup of the M subgroups, and m = 0, 1, ..., and M-1.</p>
<p id="p0262" num="0262">It should be noted that a decoder side can deduce, according to M = 1, that an encoderside divides the N frames of point clouds into one subgroup, where the subgroup includes the N frames of point clouds. Further, the decoder side can decode the N frames of point clouds based on M and N.</p>
<p id="p0263" num="0263">It should be noted that the bitstream can be decoded by using a fixed-length decoding scheme or a variable-length decoding scheme to obtain all or a part of N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub>. The fixed-length decoding scheme includes but is not limited to a fixed-bit decoding scheme, and the variable-length decoding scheme includes but is<!-- EPO <DP n="45"> --> not limited to an arithmetic decoding scheme and an exponential Columbus decoding scheme.</p>
<p id="p0264" num="0264">In a possible embodiment, the decoding the N frames of point clouds based on the subgroup information includes:<br/>
determining a quantity of frames of point clouds in a target subgroup based on N and a quantity of frames of point clouds in each of M-1 subgroups, where the target subgroup is a subgroup otherthan theM-1 subgroups in the M subgroups, and M is greater than or equal to 1; and decoding the N frames of point clouds based on a quantity of frames of point clouds included in each of theM subgroups.</p>
<p id="p0265" num="0265">For example, N = 32, M = 5, N<sub>0</sub> = 5, N<sub>1</sub> = 7, N<sub>3</sub> = 6, and N<sub>4</sub> = 8. Then, N<sub>2</sub> = 32 - 5 - 7 - 6 - 8 = 6, that is, a quantity of frames of point clouds in the second subgroup of the five subgroups may be determined to be 6.</p>
<p id="p0266" num="0266">In a possible embodiment, some of the N frames of point clouds are grouped adaptively, and the other frames of point clouds are grouped based on a fixed frame length. Therefore, the bitstream can be parsed to obtain T frames in N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> and/or T. T frames in N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> each mean a quantity of frames of point clouds included in each of T consecutive subgroups in terms of a division order among the M subgroups. After the bitstream is parsed to obtain T frames in N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> and/orT, a quantity P of frames of point clouds other than point clouds included in the T subgroups in the M subgroups is obtained based on N and T frames in N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub>. Because the P frames of point clouds are grouped based on a fixed frame length, a quantity of subgroups into which the P frames ofpoint clouds are divided is determined based on P and the fixed frame length, that is, P/fixed frame length. Further, M and a quantity of frames of point clouds included in each of the M subgroups are determined, where M = T + P/fixed frame length.</p>
<p id="p0267" num="0267">For example, it is assumed that N = 32, N<sub>0</sub> = 5, N<sub>1</sub> = 9, and a fixed frame length is 6. After the bitstream is parsed to obtain N<sub>0</sub> and N<sub>1</sub>, a quantity of subgroups obtained through adaptive grouping can be determined to be 2. Then, a quantity of subgroups obtained through fixed frame length grouping can be obtained according to (32 - 5 - 9)/6 = 3, and it is further determined that 32 frames of point clouds are divided into five subgroups in total. A quantity of frames of point clouds in a zeroth subgroup is 5 (that is, N<sub>0</sub> = 5), a quantity of frames of point clouds in a second subgroup is 9 (that is, N<sub>1</sub> = 9), a quantity of frames of point clouds in a third subgroup is 6 (that is, N<sub>2</sub> = 6), a quantity of frames of point clouds in a fourth subgroup is 5 (that is, N<sub>3</sub> = 6), and a quantity of frames of point clouds in a fifth subgroup is 6 (that is, N<sub>4</sub> = 6).</p>
<p id="p0268" num="0268">In a possible embodiment, the parsing the bitstream to obtain subgroup information includes: parsing the bitstream to obtain one or more bit strings, where a length of an s<sup>th</sup> bit string in the one or more bit strings is a quantity of frames ofpoint clouds included in an s<sup>th</sup> subgroup of the one or more subgroups; and one ormore subgroups correspond to one or more bit strings.<!-- EPO <DP n="46"> --></p>
<p id="p0269" num="0269">In a possible embodiment, the decoding the N frames of point clouds based on the subgroup information includes: obtaining a quantity of frames of point clouds included in each of one or more subgroups based on a length of each of one or more bit strings; determining a quantity of frames ofpoint clouds included in each of the M subgroups, where the M subgroups include one or more subgroups; and decoding the N frames of point clouds based on the quantity of frames of point clouds included in each of the M subgroups.</p>
<p id="p0270" num="0270">When a plurality of bit strings are M bit strings, the quantity of frames of point clouds included in each of the M subgroups can be determined based on a length of each of the plurality of bit strings (that is, the M bit strings).</p>
<p id="p0271" num="0271">When the plurality of bit strings are M-1 bit strings, a quantity of frames of point clouds included in each of the M-1 subgroups can be determined based on a length of each of the M-1 bit strings. Then, a quantity of frames of point clouds included in the target subgroup is determined based on N and the quantity of frames of point clouds included in each of the M-1 subgroups, where the M-1 subgroups correspond to the M-1 bit strings, and the target subgroup is a subgroup other than the M-1 subgroups in the M subgroups.</p>
<p id="p0272" num="0272">When one or more bit strings are T bit strings, where T is greater than 0 and less thanM-1, a quantity of frames of point clouds included in each of the T subgroups can be determined based on a length of each of the T bit strings, and the T bit strings correspond to the T subgroups. Then, a quantity P of frames of point clouds grouped based on a fixed frame length can be determined based on N and a quantity of frames of point clouds included in each of the T subgroups, and then a quantity P of subgroups obtained through grouping in a fixed frame length grouping manner or a fixed frame length is determined based on the quantity P of frames. Further, M and a quantity of frames of point clouds included in each of the M subgroups are determined, where M = T + P/fixed frame length.</p>
<p id="p0273" num="0273">In a possible embodiment, the one or more subgroups include an (s-1)<sup>th</sup> subgroup and an s<sup>th</sup> subgroup, and a value of a bit in a bit string corresponding to the (s-1)<sup>th</sup> subgroup is different from a value of a bit in a bit string corresponding to the s<sup>th</sup> subgroup.</p>
<p id="p0274" num="0274">In a possible embodiment, values of bits in a bit string corresponding to each of the one or more subgroups are the same. That values of bits in a bit string corresponding to each subgroup are the same means that values of all bits in the bit string corresponding to each subgroup are the same.</p>
<p id="p0275" num="0275">It should be noted that, a value of a bit in a bit string corresponding to an m<sup>th</sup> subgroup is a first identifier; when a zeroth bit in the m<sup>th</sup> subgroup is a first identifier, a value of an n<sup>th</sup> bit is a first identifier, and a value of an (n+1)<sup>th</sup> bit is not a first identifier, a quantity of frames in the m<sup>th</sup> subgroup is determined to be n+1. The first identifier is, for example, 0 or 1.</p>
<p id="p0276" num="0276">For example, the first identifier is 0 or 1, the second identifier is 1 or 0, and the first identifier is different from the second identifier. It is assumed that a bit string obtained by parsing a bitstream is<!-- EPO <DP n="47"> --> 00000111111000000011111110000000, which includes 32 bits in total, respectively corresponding to 32 frames of point clouds. Because values of all bits in one bit string are the same, and values of bits of two bit strings respectively corresponding to two adjacent subgroups in terms of a division order are different, five bit strings can be determined and 32 point clouds are divided into five subgroups, that is, M = 5. A zeroth bit string is 00000, a first bit string is 111111, a second bit string is 0000000, a third bit string is 1111111, and a fourth bit string is 0000000. Because a length of a bit string is a quantity of frames of point clouds in a subgroup corresponding to the bit string, a quantity of frames of point clouds in a zeroth subgroup is 5, a quantity of frames of point clouds in a first subgroup is 6, a quantity of frames of point clouds in a second subgroup is 7, a quantity of frames of point clouds in a third subgroup is 7, and a quantity of frames of point clouds in a fourth subgroup is 7. Further, 32 frames of point clouds are decoded based on 5 and a quantity of frames of point clouds in each of the five subgroups.</p>
<p id="p0277" num="0277">For another example, the first identifier is 0 or 1, the second identifier is 1 or 0, and the first identifier is different from the second identifier. It is assumed that N = 32, and a bit string obtained by parsing a bitstream is 0000011111100000001111111, which includes 25 bits in total, respectively corresponding to 25 frames of point clouds. Because values of all bits in one bit string are the same, and values of bits of two bit strings respectively corresponding to two adjacent subgroups in terms of a division order are different, four bit strings can be determined. A zeroth bit string is 00000, a first bit string is 111111, a second bit string is 0000000, and a third bit string is 1111111. Because a length of a bit string is a quantity of frames of point clouds in a subgroup corresponding to the bit string, a quantity of frames of point clouds in a zeroth subgroup is 5, a quantity of frames of point clouds in a first subgroup is 6, a quantity of frames of point clouds in a second subgroup is 7, and a quantity of frames of point clouds in a third subgroup is 7. Then, based on 32 and the quantity of point clouds in each of the foregoing four subgroups, it is determined that the quantity of frames of point clouds in the fourth subgroup is 32 - 5 - 6 - 7 - 7 = 7. Further, 32 frames of point clouds are decoded based on 5 (that is, the quantity of subgroups) and the quantity of frames of point clouds in each of the five subgroups.</p>
<p id="p0278" num="0278">For another example, the first identifier is 0 or 1, the second identifier is 1 or 0, and the first identifier is different from the second identifier. It is assumed that N = 32, a fixed frame length is 7, and a bit string obtained by parsing a bitstream is 00000111111, which includes 11 bits in total. Because values of all bits in one bit string are the same, and values of bits of two bit strings respectively corresponding to two adjacent subgroups in terms of a division order are different, two bit strings can be determined, that is, T = 2. A zeroth bit string is 00000 and a first bit string is 111111. Because a length of a bit string is a quantity of frames of point clouds in a subgroup corresponding to the bit string, a quantity of frames of point clouds in a zeroth subgroup is 5, and a quantity of frames of point clouds in a first subgroup is 6. Then, based on the fixed frame length 7 and the quantity P = 21 (that is, P = 32 - 5 - 6) of frames of<!-- EPO <DP n="48"> --> point clouds grouped based on the fixed frame length, a quantity of subgroups obtained through grouping based on the fixed frame length is determined to be 3 (that is, 21/7). A quantity of frames of point clouds in each of the three subgroups is 7. Further, 32 frames of point clouds are decoded based on 5 (that is, the quantity of subgroups) and the quantity of frames of point clouds in each of the five subgroups.</p>
<p id="p0279" num="0279">In a possible embodiment, the bitstream is parsed to obtain rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in a current subgroup; and rotation angle information of a matched patch in a patch set of a non-first frame of point cloud in the current subgroup is determined based on the rotation angle information of the one or more matched patches in the patch set of the first frame of point cloud.</p>
<p id="p0280" num="0280">The one or more matched patches in the patch set of the first frame of point cloud in the current subgroup are patches for which a matched patch is found in a patch set of a reference frame of the first frame of point cloud in the current subgroup. The reference frame of the first frame of point cloud in the current subgroup may be a point cloud in a previous subgroup of the current subgroup.</p>
<p id="p0281" num="0281">The non-first frame of point cloud in the current subgroup is a point cloud other than the first frame in the current subgroup. The matched patch in the patch set of the non-first frame of point cloud in the current subgroup is a patch that is in the patch set of the non-first frame of point cloud in the current subgroup and that has a matching relationship with the one or more matched patches in the patch set of the first frame of point cloud.</p>
<p id="p0282" num="0282">It should be noted that the bitstream can be decoded by using a fixed-length decoding scheme or a variable-length decoding scheme to obtain the rotation angle information of the one or more matched patches. The fixed-length decoding scheme includes but is not limited to a fixed-bit decoding scheme, and the variable-length decoding scheme includes but is not limited to an arithmetic decoding scheme and an exponential Columbus decoding scheme.</p>
<p id="p0283" num="0283">For example, it is assumed that the current subgroup includes four frames of point clouds, which are respectively point cloud 0, point cloud 1, point cloud 2, and point cloud 3. Point cloud 0 is the first frame of point cloud in the current subgroup, patch A is a matched patch in point cloud 0, and patch A has matching relationships with patch B in point cloud 1, patch C in point cloud 2, and patch D in point cloud 3. Rotation angle information of patch B in point cloud 1, rotation angle information of patch C in point cloud 2, and rotation angle information of patch D in point cloud 3 can be determined based on rotation angle information of patch A.</p>
<p id="p0284" num="0284">The rotation angle information includes a specific rotation angle value or a rotation angle index. For example, if a rotation angle value of a patch is 0, it indicates that the patch does not rotate. If the rotation angle value of the patch is 20, it indicates that the patch rotates by 20 degrees. For another example, if a rotation angle index of a patch is 0, it indicates that the patch does not rotate. If the rotation angle index of the patch is 1, it indicates that the<!-- EPO <DP n="49"> --> patch rotates by 15 degrees. If the rotation angle index of the patch is 2, it indicates that the patch rotates by 30 degrees.</p>
<p id="p0285" num="0285">S1502: Decode the N frames of point clouds based on the subgroup information.</p>
<p id="p0286" num="0286">The decoding the N frames of point clouds based on the subgroup information includes: obtaining auxiliary information of a patch in the N frames of point clouds based on the subgroup information, and reconstructing the N frames of point clouds based on the auxiliary information of the patch in the N frames of point clouds.</p>
<p id="p0287" num="0287">It can be learned that, in the solution of this embodiment of this application, subgroup information of N frames of point clouds obtained by grouping the N frames of point clouds in an adaptive grouping manner is written into a bitstream In this way, a decoder side can correctly decode the data of the N frames of point clouds based on the subgroup information of the N frames of point clouds, and encoding and decoding efficiency is improved.</p>
<p id="p0288" num="0288">In a possible embodiment, an embodiment of this application further provides a point cloud encoding method, including: obtaining rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in a current subgroup; and writing the rotation angle information of the one or more matched patches in the patch set of the first frame of point cloud in the current subgroup into a bitstream</p>
<p id="p0289" num="0289">The current subgroup is obtained by grouping the N frames of point clouds in an adaptive grouping manner.</p>
<p id="p0290" num="0290">The one or more matched patches in the patch set of the first frame of point cloud in the current subgroup are patches for which a matched patch is found in a patch set of a reference frame of the first frame of point cloud in the current subgroup. The reference frame of the first frame of point cloud in the current subgroup may be a point cloud in a previous subgroup of the current subgroup.</p>
<p id="p0291" num="0291">The rotation angle information includes a specific rotation angle value or a rotation angle index For example, if a rotation angle value of a patch is 0, it indicates that the patch does not rotate. If the rotation angle value of the patch is 20, it indicates that the patch rotates by 20 degrees. For another example, if a rotation angle index of a patch is 0, it indicates that the patch does not rotate. If the rotation angle index of the patch is 1, it indicates that the patch rotates by 15 degrees. If the rotation angle index of the patch is 2, it indicates that the patch rotates by 30 degrees.</p>
<p id="p0292" num="0292">The rotation angle information can be written into the bits tream by using a fixed-length encoding scheme or a variable-length encoding scheme. The fixed-length encoding scheme means that encoding is performed by using a fixed quantity of bits. For example, an angle value of a patch is encoded by using 5 bits. A rotation angle value 0 of the patch may be encoded as 00000, and a rotation angle value 20 of the patch may be encoded as 10100. Alternatively, a rotation angle index 0 of the patch may be encoded as 00000, a rotation angle index 1 of the patch may be encoded as 00001, and a rotation angle index 2 of the patch may be encoded as 00010.</p>
<p id="p0293" num="0293">The variable-length encoding scheme includes but is not limited to an arithmetic encoding scheme and<!-- EPO <DP n="50"> --> an exponential Columbus encoding scheme. When the variable-length encoding scheme is used, for example, a rotation angle value 0 of the patch may be encoded as 0, and a rotation angle value 10 of the patch may be encoded as 1010; or a rotation angle index 0 of the patch may be encoded as 0, a rotation angle index 1 of the patch may be encoded as 1, and a rotation angle index 2 of the patch may be encoded as 10.</p>
<p id="p0294" num="0294">In a possible embodiment, an embodiment of this application further provides a point cloud decoding method, including: receiving a bitstream; parsing the bitstream to obtain rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in a current subgroup; and determining rotation angle information of a matched patch in a patch set of a non-first frame of point cloud in the current subgroup based on the rotation angle information of the one or more matched patches in the patch set of the first frame of point cloud, where rotation angle information of a matched patch in a point cloud in the current subgroup is used to decode the point cloud in the current subgroup.</p>
<p id="p0295" num="0295">The one or more matched patches in the patch set of the first frame of point cloud in the current subgroup are patches for which a matched patch is found in a patch set of a reference frame of the first frame of point cloud in the current subgroup. The reference frame of the first frame of point cloud in the current subgroup may be a point cloud in a previous subgroup of the current subgroup.</p>
<p id="p0296" num="0296">A non-first frame of point cloud in the current subgroup is a point cloud other than the first frame in the current subgroup. The matched patch in the patch set of the non-first frame of point cloud in the current subgroup is a patch that is in the patch set of the non-first frame of point cloud in the current subgroup and that has a matching relationship with the one or more matched patches in the patch set of the first frame of point cloud.</p>
<p id="p0297" num="0297">For example, it is assumed that the current subgroup includes four frames of point clouds, which are respectively point cloud 0, point cloud 1, point cloud 2, and point cloud 3. Point cloud 0 is the first frame of point cloud in the current subgroup, patch A is a matched patch in point cloud 0, and patch A has matching relationships with patch B in point cloud 1, patch C in point cloud 2, and patch D in point cloud 3. Rotation angle information of patch B in point cloud 1, rotation angle information of patch C in point cloud 2, and rotation angle information of patch D in point cloud 3 can be determined based on rotation angle information of patch A.</p>
<p id="p0298" num="0298">It should be noted that decoding the current subgroup includes but is not limited to the rotation angle information of the matched patch in the point cloud in the current subgroup, and may further include rotation angle information of a non-matched patch in a point cloud in the current subgroup.</p>
<p id="p0299" num="0299">The rotation angle information includes a specific rotation angle value or a rotation angle index. For example, if a rotation angle value of a patch is 0, it indicates that the patch does not rotate. If the rotation angle value of the patch is 20, it indicates that the patch rotates by 20 degrees. For another example, if a rotation angle index of a<!-- EPO <DP n="51"> --> patch is 0, it indicates that the patch does not rotate. If the rotation angle index of the patch is 1, it indicates that the patch rotates by 15 degrees. If the rotation angle index of the patch is 2, it indicates that the patch rotates by 30 degrees.</p>
<p id="p0300" num="0300">It should be noted that the bitstream can be decoded by using a fixed-length decoding scheme or a variable-length decoding scheme to obtain the rotation angle information of the one or more matched patches. The fixed-length decoding scheme includes but is not limited to a fixed-bit decoding scheme, and the variable-length decoding scheme includes but is not limited to an arithmetic decoding scheme and an exponential Columbus decoding scheme.</p>
<p id="p0301" num="0301">In a possible embodiment, an embodiment of this application provides another point cloud encoding method, including:<br/>
determining indication information, where the indication information is used to indicate whether to encode a point cloud according to a target encoding method, and the target encoding method includes all or some of the point cloud encoding methods included in this application; and writing the indication information into a bitstream.</p>
<p id="p0302" num="0302">In a possible embodiment, an embodiment of this application provides another point cloud decoding method, including:<br/>
parsing a bitstream to obtain indication information, where the indication information is used to indicate whether to decode a point cloud according to a target decoding method, and the target decoding method includes all or some of the point cloud decoding methods included in this application; and when the indication information is used to indicate to decode the point cloud according to the target decoding method, decoding the point cloud according to the target decoding method.</p>
<p id="p0303" num="0303">It can be learned that, in the solution of this embodiment of this application, the bitstream is parsed to obtain subgroup information of the N frames of point clouds, and the subgroup information is obtained by grouping the N frames of point clouds in an adaptive grouping manner. In the adaptive grouping manner, correlation of patches among a plurality of consecutive frames of point clouds is fully considered. This fully ensures spatial consistency of patches having a matching relationship, and improves coding efficiency of point clouds. The subgroup information obtained through adaptive grouping is used to guide the decoder side in decoding the point cloud data.</p>
<p id="p0304" num="0304"><figref idref="f0017">FIG. 16</figref> is a schematic structural diagram of a point cloud encoding apparatus according to an embodiment of this application. As shown in <figref idref="f0007">FIG. 7</figref>, the encoding apparatus 1600 includes:
<ul id="ul0007" list-style="none" compact="compact">
<li>an obtaining unit 1601, configured to obtain subgroup information of N frames of point clouds, where the subgroup information includes a quantity M of subgroups into which the N frames of point clouds are divided and/or a quantity of frames of point clouds included in each of one or more subgroups among the M subgroups; and</li>
<li>an encoding unit 1602, configured to write the subgroup information of the N frames of point clouds into<!-- EPO <DP n="52"> --> a bitstream</li>
</ul></p>
<p id="p0305" num="0305">The encoding unit 1602 is further configured to encode the N frames of point clouds based on the subgroup information.</p>
<p id="p0306" num="0306">In a possible embodiment, the encoding apparatus 1600 further includes:<br/>
a grouping unit 1603, configured to divide the N frames of point clouds into M subgroups, where the dividing theN frames of point clouds into M subgroups includes: pre-dividing a plurality of frames of point clouds in the N frames of point clouds to obtain a pre-divided subgroup; and determining the pre-divided subgroup to be one of the M subgroups based on characteristic information of the pre-divided subgroup, where the characteristic information is used to represent a size of an occupancy map of a point cloud in the pre-divided subgroup.</p>
<p id="p0307" num="0307">In a possible embodiment, in terms of writing the subgroup information of the N frames of point clouds into a bitstream, the encoding unit is specifically configured to: write N<sub>0</sub>, N<sub>1</sub>, ..., N<sub>M-1</sub>, and/or M into the bitstream, where M is greater than or equal to 1; or write (M-1) values in values of N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub> and M into the bitstream, where M is greater than or equal to 1, N<sub>m</sub> represents a quantity of frames of point clouds in an m<sup>th</sup> subgroup of the M subgroups, and m = 0, 1, ..., and M-1.</p>
<p id="p0308" num="0308">In a possible embodiment, in terms of writing the subgroup information of the N frames of point clouds into a bitstream, the encoding unit 702 is specifically configured to: generate one or more bit strings based on a quantity of frames of point clouds in one or more subgroups among the M subgroups, where a length of an s<sup>th</sup> bit string in the one or more bit strings is a quantity of frames of point clouds included in an s<sup>th</sup> subgroup of the one or more subgroups; and write the one or more bit strings into the bits tream.</p>
<p id="p0309" num="0309">In a possible embodiment, the one or more subgroups include an (s-1)<sup>th</sup> subgroup and an s<sup>th</sup> subgroup, and a value of a bit in a bit string corresponding to the (s-1)<sup>th</sup> subgroup is different from a value of a bit in a bit string corresponding to the s<sup>th</sup> subgroup.</p>
<p id="p0310" num="0310">In a possible embodiment, values of bits in a bit string corresponding to each of the one or more subgroups are the same.</p>
<p id="p0311" num="0311">In a possible embodiment, the encoding unit 1602 is further configured to: write rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in a current subgroup into the bitstream.</p>
<p id="p0312" num="0312">It should be noted that the obtaining unit 1601 and the grouping unit 1603 are configured to perform related content of step S501 in the embodiment shown in <figref idref="f0005">FIG. 5</figref>, and the encoding unit 1602 is configured to perform related content of steps S502 and S503 in the embodiment shown in <figref idref="f0005">FIG. 5</figref>. In an example, a location of the encoding apparatus 1600 corresponds to the auxiliary information encoding module 108 in <figref idref="f0002">FIG. 2</figref>. In other words, functions of<!-- EPO <DP n="53"> --> the obtaining unit 1601, the encoding unit 1602, and the grouping unit 1603 can be implemented by the auxiliary information encoding module 108 in <figref idref="f0002">FIG. 2</figref>. Certainly, this application is not limited thereto.</p>
<p id="p0313" num="0313"><figref idref="f0017">FIG. 17</figref> is a schematic structural diagram of a point cloud decoding apparatus according to an embodiment of this application. As shown in <figref idref="f0017">FIG. 17</figref>, the decoding apparatus 1700 includes:<br/>
a receiving unit 1701, configured to receive a bitstream; a parsing unit 1702, configured to parse the bitstream to obtain subgroup information, where the subgroup information includes a quantity M of subgroups into which N frames of point clouds are divided and/or a quantity of frames of point clouds included in each of one or more subgroups among the M subgroups; and a decoding unit 1703, configured to decode the N frames of point clouds based on the subgroup information.</p>
<p id="p0314" num="0314">In a possible embodiment, the parsing unit 1702 is specifically configured to: parse the bitstream to obtain a quantity of frames of point clouds in each of the M subgroups and/orM, where M is greater than or equal to 1; or parse the bitstream to obtain M and a quantity of frames of point clouds in each of M-1 subgroups, where M is greater than or equal to 1.</p>
<p id="p0315" num="0315">In a possible embodiment, the decoding unit 1703 is specifically configured to: determine a quantity of frames of point clouds in a target subgroup based on N and a quantity of frames of point clouds in each of M-1 subgroups, where the target subgroup is a subgroup other than the M-1 subgroups in the M subgroups, and M is greater than or equal to 1; and decode the N frames of point clouds based on a quantity of frames of point clouds included in each of the M subgroups.</p>
<p id="p0316" num="0316">In apossible embodiment, the parsing unit 1702 is specifically configured to parse the bitstream to obtain one or more bit strings, where a length of an s<sup>th</sup> bit string in the one or more bit strings is a quantity of frames of point clouds included in an s<sup>th</sup> subgroup of the one or more subgroups; and one or more subgroups correspond to one or more bit strings.</p>
<p id="p0317" num="0317">In a possible embodiment, the decoding unit 1703 is specifically configured to: obtain a quantity of frames of point clouds included in each of one or more subgroups based on a length of each of one or more bit strings; determine a quantity of frames of point clouds included in each of the M subgroups, where the M subgroups include one or more subgroups; and decode the N frames of point clouds based on the quantity of frames of point clouds included in each of the M subgroups.</p>
<p id="p0318" num="0318">In a possible embodiment, the one or more subgroups include an (s-1)<sup>th</sup> subgroup and an s<sup>th</sup> subgroup, and a value of a bit in a bit string corresponding to the (s-1)<sup>th</sup> subgroup is different from a value of a bit in a bit string corresponding to the s<sup>th</sup> subgroup.</p>
<p id="p0319" num="0319">In a possible embodiment, values of bits in a bit string corresponding to each of the one or more<!-- EPO <DP n="54"> --> subgroups are the same.</p>
<p id="p0320" num="0320">In a possible embodiment, the parsing unit 1702 is further configured to: parse the bitstream to obtain rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in a current subgroup; and determine rotation angle information of a matched patch in a patch set of a non-first frame of point cloud in the current subgroup based on the rotation angle information of the one or more matched patches in the patch set of the first frame of point cloud.</p>
<p id="p0321" num="0321">It should be noted that the receiving unit 1701 and the parsing unit 1702 are configured to perform related content of step S1501 in the embodiment shown in <figref idref="f0016">FIG. 15</figref>, and the decoding unit 1703 is configured to perform related content of step S1502 in the embodiment shown in <figref idref="f0016">FIG. 15</figref>. In an example, a location of the decoding apparatus 1700 corresponds to the auxiliary information decoding module 204 in <figref idref="f0004">FIG. 4</figref>. In other words, functions of the receiving unit 1701, the parsing unit 1702, and the decoding unit 1703 can be implemented by the auxiliary information decoding module 204 in <figref idref="f0004">FIG. 4</figref>. Certainly, this application is not limited thereto.</p>
<p id="p0322" num="0322"><figref idref="f0018">FIG. 18</figref> is a schematic structural diagram of a point cloud encoding apparatus according to an embodiment of this application. As shown in <figref idref="f0018">FIG. 18</figref>, the encoding apparatus 1800 includes:
<ul id="ul0008" list-style="none" compact="compact">
<li>an obtaining unit 1801, configured to obtain rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in a current subgroup; and</li>
<li>an encoding unit 1802, configured to write the rotation angle information of the one or more matched patches in the patch set of the first frame of point cloud in the current subgroup into the bitstream</li>
</ul></p>
<p id="p0323" num="0323">It should be noted that, in an example, a location of the encoding apparatus 1800 corresponds to the auxiliary information encoding module 108 in <figref idref="f0002">FIG. 2</figref>. In other words, functions of the obtaining unit 1801 and the encoding unit 1802 can be implemented by the auxiliary information encoding module 108 in <figref idref="f0002">FIG. 2</figref>. Certainly, this application is not limited thereto.</p>
<p id="p0324" num="0324"><figref idref="f0018">FIG. 19</figref> is a schematic structural diagram of another point cloud decoding apparatus according to an embodiment of this application. As shown in <figref idref="f0018">FIG. 19</figref>, the decoding apparatus 1900 includes:
<ul id="ul0009" list-style="none" compact="compact">
<li>a receiving unit 1901, configured to receive a bitstream;</li>
<li>a decoding unit 1902, configured to parse the bitstreamto obtain rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in a current subgroup; and</li>
<li>a determining unit 1903, configured to determine rotation angle information of a matched patch in a patch set of a non-first frame of point cloud in the current subgroup based on the rotation angle information of the one or more matched patches in the patch set of the first frame of point cloud, where rotation angle information of a matched patch in a point cloud in the current subgroup is used to decode the point cloud in the current subgroup.</li>
</ul><!-- EPO <DP n="55"> --></p>
<p id="p0325" num="0325">It should be noted that, in an example, a location of the decoding apparatus 1900 corresponds to the auxiliary information decoding module 204 in <figref idref="f0004">FIG. 4</figref>. In other words, functions of the receiving unit 1901, the decoding unit 1902, and the determining unit 1903 can be implemented by the auxiliary information decoding module 204 in <figref idref="f0004">FIG. 4</figref>. Certainly, this application is not limited thereto.</p>
<p id="p0326" num="0326"><figref idref="f0019">FIG. 20</figref> is a schematic structural diagram of a point cloud encoding apparatus according to an embodiment of this application. As shown in <figref idref="f0019">FIG. 20</figref>, the encoding apparatus 2000 includes:
<ul id="ul0010" list-style="none" compact="compact">
<li>a determining unit 2001, configured to determine indication information, where the indication information is used to indicate whether to encode a point cloud according to a target encoding method, and the target encoding method includes some or all steps of the point cloud encoding method according to the first aspect or the point cloud encoding method according to the third aspect; and</li>
<li>an encoding unit 2002, configured to write the indication information into a bitstream</li>
</ul></p>
<p id="p0327" num="0327">It should be noted that, in an example, a location of the encoding apparatus 2000 corresponds to the auxiliary information encoding module 108 in <figref idref="f0002">FIG. 2</figref>. In other words, functions of the determining unit 2001 and the encoding unit 2002 can be implemented by the auxiliary information encoding module 108 in <figref idref="f0002">FIG. 2</figref>. Certainly, this application is not limited thereto.</p>
<p id="p0328" num="0328"><figref idref="f0019">FIG. 21</figref> is a schematic structural diagram of another point cloud decoding apparatus according to an embodiment of this application. As shown in <figref idref="f0019">FIG. 21</figref>, the decoding apparatus 2100 includes:
<ul id="ul0011" list-style="none" compact="compact">
<li>a parsing unit 2101, configured to parse a bitstream to obtain indication information, where the indication information is used to indicate whether to decode a point cloud according to a target decoding method, and the target decoding method includes some or all steps of the point cloud encoding method in the embodiment shown in <figref idref="f0005">FIG. 5</figref>, or the point cloud encoding method according to the fourth aspect; and</li>
<li>a decoding unit 2102, configured to: when the indication information is used to indicate to decode the point cloud according to the target decoding method, decode the point cloud according to the target decoding method.</li>
</ul></p>
<p id="p0329" num="0329">It should be noted that, in an example, a location of the decoding apparatus 2100 corresponds to the auxiliary information decoding module 204 in <figref idref="f0004">FIG. 4</figref>. In other words, functions of the parsing unit 2101 and the decoding unit 2102 can be implemented by the auxiliary information decoding module 204 in <figref idref="f0004">FIG. 4</figref>. Certainly, this is not limited in this application.</p>
<p id="p0330" num="0330"><figref idref="f0020">FIG. 22</figref> is a schematic block diagram of a coding apparatus 2200 according to an embodiment of this application. The obtaining apparatus 2200 may include a processor 2201, a memory 2202, and a bus system2203. The processor 2201 and the memory 2202 are connected to each other through the bus system2203. The memory 2202 is configured to store instructions, and theprocessor2201 is configured to execute the instructions stored in the<!-- EPO <DP n="56"> --> memory 2202, to perform various point cloud encoding or decoding methods described in this application, and particularly perform a method for performing filtering on a current image block based on a block size of the current image block. To avoid repetition, details are not described herein again.</p>
<p id="p0331" num="0331">In this embodiment of this application, the processor 2201 may be a central processing unit (central processing unit, CPU), or the processor2201 may be another general-purpose processor, a DSP, an ASIC, an FPGA, another programmable logic device, a discrete gate, a transistor logic device, a discrete hardware component, or the like.</p>
<p id="p0332" num="0332">The memory 2202 may include a ROM device or a RAM device. Any other storage device of an appropriate type may also be used as the memory 2202. The memory 2202 may include code and data 22021 that are accessed by the processor 2201 through the bus 2203. The memory 2202 may further include an operating system 22023 and an application program 22022. The application program 22022 includes at least one program that allows the process or 2201 to perform the point cloud encoding or decoding method described in this application (especially a point cloud subgroup information encoding and decoding method described in this application). For example, the application program 22022 may include applications 1 to N, and further include a point cloud encoding or decoding application (briefly referred to as a point cloud coding application) for performing the point cloud encoding or decoding method described in this application.</p>
<p id="p0333" num="0333">In addition to a data bus, the bus system 2203 may further include a power bus, a control bus, a status signal bus, and the like. However, for clear description, various types of buses in the figure are marked as the bus system2203.</p>
<p id="p0334" num="0334">Optionally, the encoding apparatus 2200 may further include one or more output devices, for example, a display 2204. In an example, the display 2204 may be a touch sensitive display that combines a display and a touch sensitive unit that is operable to sense a touch input. The display 2204 may be connected to the processor2201 through the bus 2203.</p>
<p id="p0335" num="0335">It should be noted that the coding apparatus 2200 may perform the point cloud encoding method in this application, or may perform the point cloud decoding method in this application.</p>
<p id="p0336" num="0336">A person skilled in the art can understand that, the functions described with reference to various illustrative logical blocks, modules, and algorithm steps disclosed and described in this specification can be implemented by hardware, software, firmware, or any combination thereof. If the functions are implemented by software, the functions described with reference to the illustrative logical blocks, modules, and steps may be stored in or transmitted over a computer-readable medium as one or more instructions or code and executed by a hardware-based processing unit. The computer-readable medium may include a computer-readable storage medium, which<!-- EPO <DP n="57"> --> corresponds to a tangible medium such as a data storage medium, or a communications medium including any medium that facilitates transfer of a computer program from one place to another (for example, according to a communication protocol). In this manner, the computer-readable medium may generally correspond to: (1) a non-transitory tangible computer-readable storage medium, or (2) a communications medium such as a signal or a carrier. The data storage medium may be any usable medium that can be accessed by one or more computers or one or more processors to retrieve instructions, code, and/or data structures for implementing the technologies described in this application. A computer program product may include a computer-readable medium.</p>
<p id="p0337" num="0337">By way of example but not limitation, such computer-readable storage media may include a RAM, a ROM, an EEPROM, a CD-ROM or another compact disc storage apparatus, a magnetic disk storage apparatus or another magnetic storage apparatus, a flash memory, or any other medium that can be used to store desired program code in a form of instructions or data structures and that can be accessed by a computer. In addition, any connection is properly termed a computer-readable medium. For example, if the instructions are transmitted from a website, a server, or anotherremote source through a coaxial cable, an optical fiber, a twisted pair, a digital subscriber line (DSL), or wireless technologies such as infrared, radio, and microwave, the coaxial cable, the optical fiber, the twisted pair, the DSL, or the wireless technologies such as infrared, radio, and microwave are included in a definition of the medium. However, it may be understood that the computer-readable storage medium and the data storage medium do not include connections, carriers, signals, or other transitory media, but actually mean non-transitory tangible storage media. Disks and discs used in this specification include a compact disc (CD), a laser disc, an optical disc, a DVD, and a Blu-ray disc. The disks usually reproduce data magnetically, whereas the discs reproduce data optically by using lasers. Combinations of the foregoing should also be included in the scope of the computer-readable medium.</p>
<p id="p0338" num="0338">The instructions may be executed by one or more processors suchas one ormore digital signal processors (DSP), general-purpose microprocessors, application-specific integrated circuits (ASIC), field programmable logic arrays (FPGA), or other equivalent integrated circuits or discrete logic circuits. Therefore, the term "processor" used in this specification may be any of the foregoing structures or any other structure suitable for implementing the technologies described in this specification. In addition, in some aspects, the functions described with reference to the illustrative logical blocks, modules, and steps described in this specification may be provided within dedicated hardware and/or software modules used for encoding and decoding, or may be incorporated into a combined codec. In addition, the technologies may be all implemented in one or more circuits or logic elements. In an example, various illustrative logical blocks, units, and modules in the encoder 100 and the decoder 200 may be understood as corresponding circuit devices or logic elements.</p>
<p id="p0339" num="0339">The technologies in this application may be implemented in various apparatuses ordevices, including a<!-- EPO <DP n="58"> --> wireless handset, an integrated circuit (IC), or a set of ICs (for example, a chip set). Various components, modules, or units are described in this application to emphasize functional aspects of the apparatuses configured to perform the disclosed technologies, but are not necessarily implemented by different hardware units. Actually, as described above, various units may be combined into a codec hardware unit in combination with appropriate software and/or firmware, or may be provided by interoperable hardware units (including one or more processors described above).</p>
<p id="p0340" num="0340">The foregoing descriptions are merely specific implementations of this application, but are not intended to limit the protection scope of this application. Any variation or replacement readily figured out by a person skilled in the art within the technical scope disclosed in this application shallfall within the protection scope of this application. Therefore, the protection scope of this application shall be subject to the protection scope of the claims.</p>
</description>
<claims id="claims01" lang="en"><!-- EPO <DP n="59"> -->
<claim id="c-en-0001" num="0001">
<claim-text>A point cloud encoding method, comprising:
<claim-text>obtaining subgroup information of N frames of point clouds, wherein the subgroup information comprises a quantity M of subgroups into which the N frames of point clouds are divided and/or a quantity of frames of point clouds comprised in each of one or more subgroups among the M subgroups;</claim-text>
<claim-text>writing the subgroup information of the N frames of point clouds into a bitstream; and</claim-text>
<claim-text>encoding the N frames of point clouds based on the subgroup information.</claim-text></claim-text></claim>
<claim id="c-en-0002" num="0002">
<claim-text>The method according to claim 1, wherein before the obtaining subgroup information of N frames of point clouds, the method further comprises:<br/>
dividing the N frames of point clouds into M subgroups, wherein the dividing the N frames of point clouds into M subgroups comprises: pre-dividing a plurality of frames of point clouds in the N frames of point clouds to obtain a pre-divided subgroup; and determining the pre-divided subgroup to be one of the M subgroups based on characteristic information of the pre-divided subgroup, wherein the characteristic information is used to represent a size of an occupancy map of a point cloud in the pre-divided subgroup.</claim-text></claim>
<claim id="c-en-0003" num="0003">
<claim-text>The method according to claim 1, wherein the writing the subgroup information of the N frames of point clouds into a bitstream comprises:
<claim-text>writing N<sub>0</sub>, N<sub>1</sub>, ..., N<sub>M-1</sub>, and/orM into the bitstream, wherein M is greater than or equal to 1; or</claim-text>
<claim-text>writing (M-1) values in values of N<sub>0</sub>, N<sub>1</sub>, ..., and N<sub>M-1</sub>, and M into the bitstream, wherein M is greater than or equal to 1; and</claim-text>
<claim-text>N<sub>m</sub> represents a quantity of frames of point clouds in an m<sup>th</sup> subgroup of the M subgroups, and m = 0, 1, ..., and M-1.</claim-text></claim-text></claim>
<claim id="c-en-0004" num="0004">
<claim-text>The method according to any one of claims 1 to 3, wherein the writing the subgroup information of the N frames of point clouds into a bitstream comprises:
<claim-text>generating one or more bit strings based on a quantity of frames of point clouds in one or more subgroups among the M subgroups, wherein a length of an s<sup>th</sup> bit string in the one or more bit strings is a quantity of frames of point clouds comprised in an s<sup>th</sup> subgroup of the one or more subgroups; and</claim-text>
<claim-text>writing the one or more bit strings into the bitstream.</claim-text></claim-text></claim>
<claim id="c-en-0005" num="0005">
<claim-text>The method according to claim 4, wherein the one or more subgroups comprise an (s-1)<sup>th</sup> subgroup and an s<sup>th</sup> subgroup, and a value of a bit in a bit string corresponding to the (s-1)<sup>th</sup> subgroup is different from a value of a bit in a bit string corresponding to the s<sup>th</sup> subgroup.<!-- EPO <DP n="60"> --></claim-text></claim>
<claim id="c-en-0006" num="0006">
<claim-text>The method according to claim 4 or 5, wherein values of bits in a bit string corresponding to each of the one or more subgroups are the same.</claim-text></claim>
<claim id="c-en-0007" num="0007">
<claim-text>The method according to any one of claims 1 to 6, wherein the method further comprises:<br/>
writing rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in the subgroup into the bitstream</claim-text></claim>
<claim id="c-en-0008" num="0008">
<claim-text>A point cloud decoding method, comprising:
<claim-text>receiving a bitstream;</claim-text>
<claim-text>parsing the bitstream to obtain subgroup information, wherein the subgroup information comprises a quantity M of subgroups into which N frames of point clouds are divided and/or a quantity of frames of point clouds comprised in each of one or more subgroups among the M subgroups; and</claim-text>
<claim-text>decoding the N frames of point clouds based on the subgroup information.</claim-text></claim-text></claim>
<claim id="c-en-0009" num="0009">
<claim-text>The method according to claim 8, wherein the parsing the bitstream to obtain subgroup information comprises:
<claim-text>parsing the bitstream to obtain a quantity of frames of point clouds in each of the M subgroups and/orM, wherein M is greater than or equal to 1; or</claim-text>
<claim-text>parsing the bitstream to obtain M and a quantity of frames of point clouds in each of M-1 subgroups, wherein M is greater than or equal to 1.</claim-text></claim-text></claim>
<claim id="c-en-0010" num="0010">
<claim-text>The method according to claim 9, wherein the decoding the N frames of point clouds based on the subgroup information comprises:
<claim-text>determining a quantity of frames of point clouds in a target subgroup based on N and a quantity of frames of point clouds in each of M-1 subgroups, wherein the target subgroup is a subgroup other than the M-1 subgroups in the M subgroups, and M is greater than or equal to 1; and</claim-text>
<claim-text>decoding the N frames of point clouds based on the quantity of frames of point clouds comprised in each of the M subgroups.</claim-text></claim-text></claim>
<claim id="c-en-0011" num="0011">
<claim-text>The method according to any one of claims 8 to 10, wherein the parsing the bitstream to obtain subgroup information comprises:<br/>
parsing the bitstream to obtain one or more bit strings, wherein a length of an s<sup>th</sup> bitstring in the one or more bit strings is a quantity of frames of point clouds comprised in an s<sup>th</sup> subgroup of the one or more subgroups; and one or more subgroups correspond to one or more bit strings.</claim-text></claim>
<claim id="c-en-0012" num="0012">
<claim-text>The method according to claim 11, wherein the decoding the N frames of point clouds based on the subgroup information comprises:
<claim-text>obtaining a quantity of frames of point clouds comprised in each of one or more subgroups based on a length of<!-- EPO <DP n="61"> --> each of one or more bit strings;</claim-text>
<claim-text>determining a quantity of frames of point clouds comprised in each of the M subgroups, wherein the M subgroups comprise one or more subgroups; and</claim-text>
<claim-text>decoding the N frames of point clouds based on the quantity of frames of point clouds comprised in each of the M subgroups.</claim-text></claim-text></claim>
<claim id="c-en-0013" num="0013">
<claim-text>The method according to claim 11 or 12, wherein the one or more subgroups comprise an (s-1)<sup>th</sup> subgroup and an s<sup>th</sup> subgroup, and a value of a bit in a bit string corresponding to the (s-1)<sup>th</sup> subgroup is different from a value of a bit in a bit string corresponding to the s<sup>th</sup> subgroup.</claim-text></claim>
<claim id="c-en-0014" num="0014">
<claim-text>The method according to any one of claims 11 to 13, wherein values of bits in a bit string corresponding to each of the one or more subgroups are the same.</claim-text></claim>
<claim id="c-en-0015" num="0015">
<claim-text>The method according to any one of claims 8 to 14, wherein the method further comprises:
<claim-text>parsing the bitstream to obtain rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in the subgroup; and</claim-text>
<claim-text>determining rotation angle information of a matched patch in a patch set of a non-first frame of point cloud in the subgroup based on the rotation angle information of the one or more matched patches in the patch set of the first frame of point cloud.</claim-text></claim-text></claim>
<claim id="c-en-0016" num="0016">
<claim-text>A point cloud encoding method, comprising:
<claim-text>obtaining rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in a current subgroup; and</claim-text>
<claim-text>writing the rotation angle information of the one or more matched patches in the patch set of the first frame of point cloud in the current subgroup into a bitstream.</claim-text></claim-text></claim>
<claim id="c-en-0017" num="0017">
<claim-text>A point cloud decoding method, comprising:
<claim-text>receiving a bitstream;</claim-text>
<claim-text>parsing the bitstream to obtain rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in a current subgroup; and</claim-text>
<claim-text>determining rotation angle information of a matched patch in a patch set of a non-first frame of point cloud in the current subgroup based on the rotation angle information of the one or more matched patches in the patch set of the first frame of point cloud, wherein</claim-text>
<claim-text>rotation angle information of a matched patch in a point cloud in the current subgroup is used to decode the point cloud in the current subgroup.</claim-text></claim-text></claim>
<claim id="c-en-0018" num="0018">
<claim-text>A point cloud encoding method, comprising:<!-- EPO <DP n="62"> -->
<claim-text>determining indication information, wherein the indication information is used to indicate whether to encode a point cloud according to a target encoding method, and the target encoding method comprises the point cloud encoding method according to any one of claims 1 to 7 or according to claim 16; and</claim-text>
<claim-text>writing the indication information into a bitstream.</claim-text></claim-text></claim>
<claim id="c-en-0019" num="0019">
<claim-text>A point cloud decoding method, comprising:
<claim-text>parsing a bitstream to obtain indication information, wherein the indication information is used to indicate whether to decode a point cloud according to a target decoding method, and the target decoding method comprises the point cloud decoding method according to any one of claims 8 to 15 or according to claim 17; and</claim-text>
<claim-text>when the indication information is used to indicate to decode the point cloud according to the target decoding method, decoding the point cloud according to the target decoding method.</claim-text></claim-text></claim>
<claim id="c-en-0020" num="0020">
<claim-text>A point cloud encoding apparatus, comprising:
<claim-text>an obtaining unit, configured to obtain subgroup information of N frames of point clouds, wherein the subgroup information comprises a quantity M of subgroups into which the N frames of point clouds are divided and/or a quantity of frames of point clouds comprised in each of one or more subgroups among the M subgroups; and</claim-text>
<claim-text>an encoding unit, configured to write the subgroup information of the N frames of point clouds into a bitstream, wherein</claim-text>
<claim-text>the encoding unit is further configured to encode the N frames of point clouds based on the subgroup information.</claim-text></claim-text></claim>
<claim id="c-en-0021" num="0021">
<claim-text>The method according to claim 20, wherein the apparatus further comprises:<br/>
a grouping unit, configured to divide the N frames of point clouds into M subgroups, wherein the dividing the N frames of point clouds into M subgroups comprises:pre-dividing a plurality of frames of pointclouds in theN frames of point clouds to obtain a pre-divided subgroup; and determining the pre-divided subgroup to be one of the M subgroups based on characteristic information of the pre-divided subgroup, wherein the characteristic information is used to represent a size of an occupancy map of a point cloud in the pre-divided subgroup.</claim-text></claim>
<claim id="c-en-0022" num="0022">
<claim-text>The apparatus according to claim 20 or 21, wherein in terms of writing the subgroup information of the N frames of point clouds into a bitstream, the encoding unit is specifically configured to:
<claim-text>write N<sub>0</sub>, N<sub>1</sub>, ..., N<sub>M-1</sub>, and/or M into the bitstream, wherein M is greater than or equal to 1; or</claim-text>
<claim-text>write (M-1) values in values of N<sub>0</sub>, N<sub>1</sub>,..., and N<sub>M-1</sub>, and M into the bitstream, wherein M is greater than or equal to 1; and</claim-text>
<claim-text>N<sub>m</sub> represents a quantity of frames of point clouds in an m<sup>th</sup> subgroup of the M subgroups, and m = 0, 1, ..., and M-1.</claim-text></claim-text></claim>
<claim id="c-en-0023" num="0023">
<claim-text>The apparatus according to claim 20, wherein in terms of writing the subgroup information of the N frames<!-- EPO <DP n="63"> --> of point clouds into a bitstream, the encoding unit is specifically configured to:
<claim-text>generate one or more bit strings based on a quantity of frames of point clouds in one or more subgroups among the M subgroups, wherein a length of an s<sup>th</sup> bit string in the one or more bit strings is a quantity of frames of point clouds comprised in an s<sup>th</sup> subgroup of the one or more subgroups; and</claim-text>
<claim-text>write the one or more bit strings into the bitstream.</claim-text></claim-text></claim>
<claim id="c-en-0024" num="0024">
<claim-text>The apparatus according to claim 23, wherein the one or more subgroups comprise an (s-1)<sup>th</sup> subgroup and an s<sup>th</sup> subgroup, and a value of a bit in a bit string corresponding to the (s-1)<sup>th</sup> subgroup is different from a value of a bit in a bit string corresponding to the s<sup>th</sup> subgroup.</claim-text></claim>
<claim id="c-en-0025" num="0025">
<claim-text>The apparatus according to claim 23 or 24, wherein values of bits in a bit string corresponding to each of the one or more subgroups are the same.</claim-text></claim>
<claim id="c-en-0026" num="0026">
<claim-text>The apparatus according to any one of claims 20 to 24, wherein the encoding unit is specifically configured to:<br/>
write rotation angle information of one or more patches in a patch set of the first frame of point cloud in the subgroup into the bitstream.</claim-text></claim>
<claim id="c-en-0027" num="0027">
<claim-text>A point cloud decoding apparatus, comprising:
<claim-text>a receiving unit, configured to receive a bitstream;</claim-text>
<claim-text>a parsing unit, configured to parse the bitstream to obtain subgroup information, wherein the subgroup information comprises a quantity M of subgroups into which N frames of point clouds are divided and/or a quantity of frames of point clouds comprised in each of one or more subgroups among the M subgroups; and</claim-text>
<claim-text>a decoding unit, configured to decode the N frames of point clouds based on the subgroup information.</claim-text></claim-text></claim>
<claim id="c-en-0028" num="0028">
<claim-text>The apparatus according to claim 27, wherein the parsing unit is specifically configured to:
<claim-text>parse the bitstream to obtain a quantity of frames of point clouds in each of the M subgroups and/orM, wherein M is greater than or equal to 1; or</claim-text>
<claim-text>parse the bitstream to obtain M and a quantity of frames of point clouds in each of M-1 subgroups, wherein M is greater than or equal to 1.</claim-text></claim-text></claim>
<claim id="c-en-0029" num="0029">
<claim-text>The apparatus according to claim 28, wherein the decoding unit is specifically configured to:
<claim-text>determine a quantity of frames of point clouds in a target subgroup based on N and a quantity of frames of point clouds in each of M-1 subgroups, wherein the target subgroup is a subgroup otherthan the M-1 subgroups in the M subgroups, and M is greater than or equal to 1; and</claim-text>
<claim-text>decode the N frames of point clouds based on the quantity of frames of point clouds comprised in each of the M subgroups.</claim-text><!-- EPO <DP n="64"> --></claim-text></claim>
<claim id="c-en-0030" num="0030">
<claim-text>The apparatus according to claim 27, wherein the parsing unit is specifically configured to:<br/>
parse the bitstream to obtain one or more bit strings, wherein a length of an s<sup>th</sup> bit string in the one or more bit strings is a quantity of frames of point clouds comprised in an s<sup>th</sup> subgroup of the one or more subgroups; and one or more subgroups correspond to one or more bit strings.</claim-text></claim>
<claim id="c-en-0031" num="0031">
<claim-text>The apparatus according to claim 30, wherein the decoding unit is specifically configured to:
<claim-text>obtain a quantity of frames of point clouds comprised in each of one or more subgroups based on a length of each of one or more bit strings;</claim-text>
<claim-text>determine a quantity of frames of point clouds comprised in each of the M subgroups, wherein the M subgroups comprise one or more subgroups; and</claim-text>
<claim-text>decode the N frames of point clouds based on the quantity of frames of point clouds comprised in each of the M subgroups.</claim-text></claim-text></claim>
<claim id="c-en-0032" num="0032">
<claim-text>The apparatus according to claim 30 or 31, wherein the one or more subgroups comprise an (s-1)<sup>th</sup> subgroup and an s<sup>th</sup> subgroup, and a value of a bit in a bit string corresponding to the (s-1)<sup>th</sup> subgroup is different from a value of a bit in a bit string corresponding to the s<sup>th</sup> subgroup.</claim-text></claim>
<claim id="c-en-0033" num="0033">
<claim-text>The apparatus according to any one of claims 30 to 32, wherein values of bits in a bit string corresponding to each of the one or more subgroups are the same.</claim-text></claim>
<claim id="c-en-0034" num="0034">
<claim-text>The apparatus according to any one of claims 27 to 33, wherein the parsing unit is further configured to:
<claim-text>parse the bitstream to obtain rotation angle information of one or more matched patches in a patch set of the first frame of point cloud in a current subgroup; and</claim-text>
<claim-text>determine rotation angle information of a matched patch in a patch set of a non-first frame of point cloud in the current subgroup based on the rotation angle information of the one or more matched patches in the patch set of the first frame of point cloud.</claim-text></claim-text></claim>
<claim id="c-en-0035" num="0035">
<claim-text>A point cloud encoding apparatus, comprising:
<claim-text>an obtaining unit, configured to obtain rotation angle information of one or more patches in a patch set of the first frame of point cloud in a current subgroup, wherein the one or more patches are patches having a matching relationship; and</claim-text>
<claim-text>an encoding unit, configured to write the rotation angle information of the one or more patches in the patch set of the first frame of point cloud in the current subgroup into a bitstream</claim-text></claim-text></claim>
<claim id="c-en-0036" num="0036">
<claim-text>A point cloud decoding apparatus, comprising:
<claim-text>a receiving unit, configured to receive a bitstream;</claim-text>
<claim-text>a parsing unit, configured to parse the bitstream to obtain rotation angle information of one or more matched<!-- EPO <DP n="65"> --> patches in a patch set of the first frame of point cloud in a current subgroup; and</claim-text>
<claim-text>a determining unit, configured to determine rotation angle information of a matched patch in a patch set of a non-first frame of point cloud in the current subgroup based on the rotation angle information of the one or more matched patches in the patch set of the first frame of point cloud, wherein rotation angle information of a matched patch in a point cloud in the current subgroup is used to decode the point cloud in the current subgroup.</claim-text></claim-text></claim>
<claim id="c-en-0037" num="0037">
<claim-text>A point cloud encoding apparatus, comprising:
<claim-text>a determining unit, configured to determine indication information, wherein the indication information is used to indicate whether to encode a point cloud according to a target encoding method, and the target encoding method comprises the point cloud encoding method according to any one of claims 1 to 7 or according to claim 16; and</claim-text>
<claim-text>an encoding unit, configured to write the indication information into a bitstream</claim-text></claim-text></claim>
<claim id="c-en-0038" num="0038">
<claim-text>A point cloud decoding apparatus, comprising:
<claim-text>a parsing unit, configured to parse a bitstream to obtain indication information, wherein the indication information is used to indicate whether to decode a point cloud according to a target decoding method, and the target decoding method comprises the point cloud decoding method according to any one of claims 8 to 15 or according to claim 17; and</claim-text>
<claim-text>a decoding unit, configured to: when the indication information is used to indicate to decode the point cloud according to the target decoding method, decode the point cloud according to the target decoding method.</claim-text></claim-text></claim>
</claims>
<drawings id="draw" lang="en"><!-- EPO <DP n="66"> -->
<figure id="f0001" num="1"><img id="if0001" file="imgf0001.tif" wi="165" he="139" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="67"> -->
<figure id="f0002" num="2"><img id="if0002" file="imgf0002.tif" wi="163" he="233" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="68"> -->
<figure id="f0003" num="3(a),3(b),3(c)"><img id="if0003" file="imgf0003.tif" wi="130" he="78" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="69"> -->
<figure id="f0004" num="4"><img id="if0004" file="imgf0004.tif" wi="129" he="219" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="70"> -->
<figure id="f0005" num="5"><img id="if0005" file="imgf0005.tif" wi="137" he="98" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="71"> -->
<figure id="f0006" num="6"><img id="if0006" file="imgf0006.tif" wi="135" he="228" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="72"> -->
<figure id="f0007" num="7"><img id="if0007" file="imgf0007.tif" wi="158" he="212" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="73"> -->
<figure id="f0008" num="8A,8B"><img id="if0008" file="imgf0008.tif" wi="165" he="221" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="74"> -->
<figure id="f0009" num="9A"><img id="if0009" file="imgf0009.tif" wi="154" he="213" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="75"> -->
<figure id="f0010" num="9B"><img id="if0010" file="imgf0010.tif" wi="165" he="225" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="76"> -->
<figure id="f0011" num="10"><img id="if0011" file="imgf0011.tif" wi="165" he="167" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="77"> -->
<figure id="f0012" num="11A"><img id="if0012" file="imgf0012.tif" wi="165" he="159" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="78"> -->
<figure id="f0013" num="11B"><img id="if0013" file="imgf0013.tif" wi="165" he="159" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="79"> -->
<figure id="f0014" num="12(a),12(b)"><img id="if0014" file="imgf0014.tif" wi="148" he="195" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="80"> -->
<figure id="f0015" num="13"><img id="if0015" file="imgf0015.tif" wi="165" he="223" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="81"> -->
<figure id="f0016" num="14,15"><img id="if0016" file="imgf0016.tif" wi="165" he="231" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="82"> -->
<figure id="f0017" num="16,17"><img id="if0017" file="imgf0017.tif" wi="66" he="177" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="83"> -->
<figure id="f0018" num="18,19"><img id="if0018" file="imgf0018.tif" wi="76" he="169" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="84"> -->
<figure id="f0019" num="20,21"><img id="if0019" file="imgf0019.tif" wi="71" he="151" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="85"> -->
<figure id="f0020" num="22"><img id="if0020" file="imgf0020.tif" wi="165" he="156" img-content="drawing" img-format="tif"/></figure>
</drawings>
<search-report-data id="srep" lang="en" srep-office="EP" date-produced=""><doc-page id="srep0001" file="srep0001.tif" wi="154" he="233" type="tif"/><doc-page id="srep0002" file="srep0002.tif" wi="150" he="233" type="tif"/><doc-page id="srep0003" file="srep0003.tif" wi="150" he="233" type="tif"/><doc-page id="srep0004" file="srep0004.tif" wi="150" he="233" type="tif"/></search-report-data>
<ep-reference-list id="ref-list">
<heading id="ref-h0001"><b>REFERENCES CITED IN THE DESCRIPTION</b></heading>
<p id="ref-p0001" num=""><i>This list of references cited by the applicant is for the reader's convenience only. It does not form part of the European patent document. Even though great care has been taken in compiling the references, errors or omissions cannot be excluded and the EPO disclaims all liability in this regard.</i></p>
<heading id="ref-h0002"><b>Patent documents cited in the description</b></heading>
<p id="ref-p0002" num="">
<ul id="ref-ul0001" list-style="bullet">
<li><patcit id="ref-pcit0001" dnum="CN201811538662" dnum-type="L"><document-id><country>CN</country><doc-number>201811538662</doc-number><date>20181213</date></document-id></patcit><crossref idref="pcit0001">[0001]</crossref></li>
</ul></p>
</ep-reference-list>
</ep-patent-document>
