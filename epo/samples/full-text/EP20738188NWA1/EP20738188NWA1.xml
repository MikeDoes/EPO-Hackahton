<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE ep-patent-document PUBLIC "-//EPO//EP PATENT DOCUMENT 1.5.1//EN" "ep-patent-document-v1-5-1.dtd">
<!-- This XML data has been generated under the supervision of the European Patent Office -->
<ep-patent-document id="EP20738188A1" file="EP20738188NWA1.xml" lang="en" country="EP" doc-number="3890233" kind="A1" date-publ="20211006" status="n" dtd-version="ep-patent-document-v1-5-1">
<SDOBI lang="en"><B000><eptags><B001EP>ATBECHDEDKESFRGBGRITLILUNLSEMCPTIESILTLVFIROMKCYALTRBGCZEEHUPLSKBAHRIS..MTNORSMESMMAKHTNMD..........</B001EP><B005EP>J</B005EP><B007EP>BDM Ver 2.0.12 (4th of August) -  1100000/0</B007EP></eptags></B000><B100><B110>3890233</B110><B120><B121>EUROPEAN PATENT APPLICATION</B121><B121EP>published in accordance with Art. 153(4) EPC</B121EP></B120><B130>A1</B130><B140><date>20211006</date></B140><B190>EP</B190></B100><B200><B210>20738188.0</B210><B220><date>20200110</date></B220><B240><B241><date>20210702</date></B241></B240><B250>zh</B250><B251EP>en</B251EP><B260>en</B260></B200><B300><B310>201910024591</B310><B320><date>20190110</date></B320><B330><ctry>CN</ctry></B330><B310>201910114674</B310><B320><date>20190214</date></B320><B330><ctry>CN</ctry></B330></B300><B400><B405><date>20211006</date><bnum>202140</bnum></B405><B430><date>20211006</date><bnum>202140</bnum></B430></B400><B500><B510EP><classification-ipcr sequence="1"><text>H04L   5/00        20060101AFI20200717BHEP        </text></classification-ipcr></B510EP><B520EP><classifications-cpc><classification-cpc sequence="1"><text>H04L   5/00        20130101 LI20200807BCEP        </text></classification-cpc></classifications-cpc></B520EP><B540><B541>de</B541><B542>SIGNALVERARBEITUNGSVERFAHREN UND -VORRICHTUNG</B542><B541>en</B541><B542>SIGNAL PROCESSING METHOD AND DEVICE</B542><B541>fr</B541><B542>PROCÉDÉ ET DISPOSITIF DE TRAITEMENT DE SIGNAL</B542></B540><B590><B598>004</B598></B590></B500><B700><B710><B711><snm>Huawei Technologies Co., Ltd.</snm><iid>101903059</iid><irf>P57873/EP</irf><adr><str>Huawei Administration Building, 
Bantian, Longgang District</str><city>Shenzhen Guangdong 518129</city><ctry>CN</ctry></adr></B711></B710><B720><B721><snm>QU, Bingyu</snm><adr><str>Huawei Administration Building 
Bantian, Longgang District</str><city>Shenzhen, Guangdong 518129</city><ctry>CN</ctry></adr></B721><B721><snm>LIU, Xianda</snm><adr><str>Huawei Administration Building 
Bantian, Longgang District</str><city>Shenzhen, Guangdong 518129</city><ctry>CN</ctry></adr></B721><B721><snm>GONG, Mingxin</snm><adr><str>Huawei Administration Building 
Bantian, Longgang District</str><city>Shenzhen, Guangdong 518129</city><ctry>CN</ctry></adr></B721><B721><snm>LIU, Kunpeng</snm><adr><str>Huawei Administration Building 
Bantian, Longgang District</str><city>Shenzhen, Guangdong 518129</city><ctry>CN</ctry></adr></B721></B720><B740><B741><snm>Roth, Sebastian</snm><iid>101662426</iid><adr><str>Mitscherlich PartmbB 
Patent- und Rechtsanwälte 
Sonnenstraße 33</str><city>80331 München</city><ctry>DE</ctry></adr></B741></B740></B700><B800><B840><ctry>AL</ctry><ctry>AT</ctry><ctry>BE</ctry><ctry>BG</ctry><ctry>CH</ctry><ctry>CY</ctry><ctry>CZ</ctry><ctry>DE</ctry><ctry>DK</ctry><ctry>EE</ctry><ctry>ES</ctry><ctry>FI</ctry><ctry>FR</ctry><ctry>GB</ctry><ctry>GR</ctry><ctry>HR</ctry><ctry>HU</ctry><ctry>IE</ctry><ctry>IS</ctry><ctry>IT</ctry><ctry>LI</ctry><ctry>LT</ctry><ctry>LU</ctry><ctry>LV</ctry><ctry>MC</ctry><ctry>MK</ctry><ctry>MT</ctry><ctry>NL</ctry><ctry>NO</ctry><ctry>PL</ctry><ctry>PT</ctry><ctry>RO</ctry><ctry>RS</ctry><ctry>SE</ctry><ctry>SI</ctry><ctry>SK</ctry><ctry>SM</ctry><ctry>TR</ctry></B840><B844EP><B845EP><ctry>BA</ctry></B845EP><B845EP><ctry>ME</ctry></B845EP></B844EP><B848EP><B849EP><ctry>KH</ctry></B849EP><B849EP><ctry>MA</ctry></B849EP><B849EP><ctry>MD</ctry></B849EP><B849EP><ctry>TN</ctry></B849EP></B848EP><B860><B861><dnum><anum>CN2020071476</anum></dnum><date>20200110</date></B861><B862>zh</B862></B860><B870><B871><dnum><pnum>WO2020143780</pnum></dnum><date>20200716</date><bnum>202029</bnum></B871></B870></B800></SDOBI>
<abstract id="abst" lang="en">
<p id="pa01" num="0001">This application provides a signal processing method and apparatus. The method includes: In frequency-domain resources of a comb structure, reference signals mapped to frequency-domain resources on different combs may be generated by different sequences. In other words, reference signals on different frequency-domain resources may be generated by using different sequences, thereby improving performance of the reference signals transmitted on the frequency-domain resources of the comb structure.<img id="iaf01" file="imgaf001.tif" wi="78" he="101" img-content="drawing" img-format="tif"/></p>
</abstract>
<description id="desc" lang="en"><!-- EPO <DP n="1"> -->
<heading id="h0001"><b>TECHNICAL FIELD</b></heading>
<p id="p0001" num="0001">This application relates to the communications system, and more specifically, to a signal processing method and apparatus.</p>
<heading id="h0002"><b>BACKGROUND</b></heading>
<p id="p0002" num="0002">In a long term evolution (LTE) system, for a physical uplink shared channel (physical uplink shared channel, PUSCH) and a PUCCH, a demodulation reference signal (demodulation reference signal, DMRS) is used for channel estimation, and then a signal is demodulated. In the LTE system, a base sequence of an uplink DMRS may be directly mapped to a resource element, and no encoding processing is needed. In LTE, a reference sequence of the uplink DMRS is defined as a cyclic shift of a basic sequence. The base sequence of the uplink DMRS is obtained from a Zadoff-Chu sequence (ZC sequence) through cyclic extension. The ZC sequence is a sequence that satisfies a constant envelope zero auto-correlation (constant amplitude zero auto-correlation, CAZAC) sequence property.</p>
<p id="p0003" num="0003">In a new radio access technology (new radio access technology, NR), an uplink transmission signal is supported to use a discrete Fourier transform-spread-orthogonal frequency division multiplexing (discrete Fourier Transform spreadOFDM, DFT-s-OFDM) waveform. The uplink transmission signal is modulated by using π/2BPSK. In addition, a frequency-domain filtering operation may be on an uplink transmission signal obtained after DFT transform. When the uplink transmission signal is modulated by using π/2BPSK, a Gold sequence-based sequence may be used, or a computer generated sequence (computer generated sequence, CGS) may be used. Currently, it is planned to support, in NR, a DMRS using the DFT-s-OFDM waveform to use the ZC sequence. In addition, it is planned to support, in NR, a DMRS of the uplink transmission signal modulated by using π/2 BPSK to use the ZC sequence.</p>
<p id="p0004" num="0004">However, if the uplink DMRS uses the ZC sequence, a peak-to-average power ratio (peak-to-average power ratio, PAPR) of the DMRS is higher than a PAPR of a corresponding uplink transmission signal, resulting in out-of-band spurious emission and in-band signal loss of the DMRS, and affecting channel estimation performance, or limiting uplink coverage. In addition, when the uplink DMRS using the DFT-s-OFDM waveform is modulated by using the π/2 BPSK modulation scheme, and a filter is used, if the uplink DMRS using the DFT-s-OFDM waveform<!-- EPO <DP n="2"> --> uses the Gold sequence-based sequence or the CGS and proper screening cannot be performed, frequency flatness of the sequence is relatively poor. This is adverse to channel estimation. If the uplink DMRS using the DFT-s-OFDM waveform uses the ZC sequence, a peak-to-average power ratio (peak-to-average power ratio, PAPR) of the DMRS is higher than a PAPR of transmitted data, resulting in out-of-band spurious emission and in-band signal loss of a pilot signal, and affecting channel estimation performance, or limiting uplink coverage.</p>
<p id="p0005" num="0005">That is, an existing DMRS sequence cannot satisfy a current communications application environment. In addition, an existing sequence used by a reference signal (for example, a DMRS) used for a PDSCH cannot satisfy the current communications application environment in which a signal is sent through a PUSCH.</p>
<heading id="h0003"><b>SUMMARY</b></heading>
<p id="p0006" num="0006">This application provides a signal processing method and apparatus, to improve communication efficiency.</p>
<p id="p0007" num="0007">According to a first aspect, a signal processing method is provided. The method includes:
<ul id="ul0001" list-style="none" compact="compact">
<li>generating a reference signal of a first signal, where the first signal is a signal modulated by using π/2 binary phase shift keying BPSK, the reference signal is generated by using a first sequence, and a length of the first sequence is K; and</li>
<li>sending the reference signal on a first frequency-domain resource, where the first frequency-domain resource includes K subcarriers each having a subcarrier number of k, k=u+L<sup>∗</sup>n+delta, n=0, 1,..., K―1, L is an integer greater than or equal to 2, delta∈{0, 1, ..., L―1}, u is an integer, and the subcarrier numbers are numbered in ascending or descending order of frequencies, where</li>
<li>before the reference signal is generated, the method further includes:<br/>
determining the first sequence, where the first sequence varies as a delta value varies.</li>
</ul></p>
<p id="p0008" num="0008">In some possible implementations, a modulation scheme of the first sequence is neither BPSK modulation nor pi/2 BPSK modulation.</p>
<p id="p0009" num="0009">In some possible implementations, the first sequence is a sequence modulated by using any one of 8PSK, 16PSK, or 32PSK.</p>
<p id="p0010" num="0010">In some possible implementations, the method further includes:<br/>
determining the first sequence in a first sequence group, where the first sequence group is one of a plurality of sequence groups, and the first sequence is determined, based on the delta value, in a plurality of sequences that are in the first sequence group and whose length is K.<!-- EPO <DP n="3"> --></p>
<p id="p0011" num="0011">In some possible implementations, the method further includes:<br/>
determining the first sequence group based on a cell identifier or a sequence group identifier.</p>
<p id="p0012" num="0012">In some possible implementations, the method further includes:<br/>
receiving indication information, where the indication information is used to indicate a sequence that is in each of at least two sequence groups and used to generate the reference signal.</p>
<p id="p0013" num="0013">With reference to the first aspect, in some implementations of the first aspect,
<ul id="ul0002" list-style="none" compact="compact">
<li>optionally, when delta=0, the generating a reference signal of a first signal includes:</li>
<li>performing discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)} with t=0, ..., L<sup>∗</sup>K―1, where when t=0, 1, ..., L<sup>∗</sup>K―1, z(t)=x(t mod K), and x(t) represents the first sequence; and</li>
<li>mapping elements numbered L<sup>∗</sup>p+delta in the sequence {f(t)} to the subcarriers each having the subcarrier number of u+L<sup>∗</sup>p+delta respectively, to generate the reference signal, where p=0, ..., K―1.</li>
</ul></p>
<p id="p0014" num="0014">Optionally, when L=2 and delta=1, the generating a reference signal of a first signal includes:
<ul id="ul0003" list-style="none" compact="compact">
<li>performing discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)} with t=0, ..., L<sup>∗</sup>K―1, where when t=0, ..., K―1, z(t)=x(t), when t=K, ..., L<sup>∗</sup>K―1, z(t)=-x(t mod K), and x(t) represents the first sequence; and</li>
<li>mapping elements numbered L<sup>∗</sup>p+delta in the sequence {f(t)} to the subcarriers each having the subcarrier number of u+L<sup>∗</sup>p+delta respectively, to generate the reference signal, where p=0, ..., K―1.</li>
</ul></p>
<p id="p0015" num="0015">In an embodiment, L may alternatively be another integer greater than 2. In other words, when delta=1, the generating a reference signal of a first signal includes: performing discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)}with t=0, ..., L<sup>∗</sup>K―1, where when t=0, ..., K―1, z(t)=x(t), when t=K, ..., L<sup>∗</sup>K―1, z(t)=-x(t mod K), and x(t) represents the first sequence; and mapping elements numbered L<sup>∗</sup>p+delta in the sequence {f(t)} to subcarriers each having the subcarrier number of u+L<sup>∗</sup>p+delta respectively, to generate the reference signal, where p=0, ..., K―1.</p>
<p id="p0016" num="0016">Optionally, when L=4, the generating a reference signal of a first signal includes:
<ul id="ul0004" list-style="none" compact="compact">
<li>performing discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)} with t=0, ..., 4K-1, where when t=0, 1, ..., 4K-1, <maths id="math0001" num=""><math display="inline"><mi>z</mi><mfenced><mi>t</mi></mfenced><mo>=</mo><msub><mi>w</mi><mi mathvariant="italic">delta</mi></msub><mfenced><mfenced open="[" close="]"><mfrac><mi>t</mi><mi>K</mi></mfrac></mfenced></mfenced><mi>x</mi><mfenced separators=""><mi>t</mi><mspace width="1ex"/><mi>mod</mi><mspace width="1ex"/><mi>K</mi></mfenced></math><img id="ib0001" file="imgb0001.tif" wi="51" he="12" img-content="math" img-format="tif" inline="yes"/></maths>, where <i>w</i><sub>0</sub> = (1, 1, 1, 1) , <i>w</i><sub>1</sub> =(1,<i>j</i>, ―1, ―<i>j</i>), <i>w</i><sub>2</sub> =(1, ―1,1, ―1), <i>w</i><sub>3</sub> =(1, ―<i>j</i>, ―1<i>,j),</i> [<i>c</i>] represents rounding down of c, and x(t) represents the first sequence; and</li>
<li>mapping elements numbered 4p+delta in the sequence {f(t)} to the subcarriers each having the subcarrier<!-- EPO <DP n="4"> --> number of u+L<sup>∗</sup>p+delta respectively, to generate the reference signal, where p=0, ..., K―1. In another embodiment, <i>w</i><sub>0</sub> =(1,1,1,1), <i>w</i><sub>1</sub> =(1,<i>j</i>,―1,―<i>j</i>), <i>w</i><sub>2</sub> =(1,―1,1,―1), and <i>w</i><sub>3</sub> =(1,―<i>j</i>,―1,<i>j)</i>.</li>
</ul></p>
<p id="p0017" num="0017">Optionally, the generating a reference signal of a first signal includes:
<ul id="ul0005" list-style="none" compact="compact">
<li>performing discrete Fourier transform on elements in a sequence {x(t)} to obtain a sequence {f(t)} with t=0, ..., K―1, where x(t) represents the first sequence; and</li>
<li>mapping elements numbered p in the sequence {f(t)} to the subcarriers each having the subcarrier number of u+L<sup>∗</sup>p+delta respectively, to generate the reference signal, where p=0, ..., K―1.</li>
</ul></p>
<p id="p0018" num="0018">Optionally, when delta=0, the method further includes:
<ul id="ul0006" list-style="none" compact="compact">
<li>determining the first sequence {x(n)} based on a preset condition and a sequence {s(n)}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0002" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>16</mn></mfrac></msup></math><img id="ib0002" file="imgb0002.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5}, K=6, A is a non-zero complex number, and <maths id="math0003" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0003" file="imgb0003.tif" wi="15" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</li>
<li>the sequence {s(n)} includes at least one of the following sequences:
<img id="ib0004" file="imgb0004.tif" wi="165" he="54" img-content="dna" img-format="tif"/>
or
<img id="ib0005" file="imgb0005.tif" wi="165" he="86" img-content="dna" img-format="tif"/></li>
</ul><!-- EPO <DP n="5"> -->
<img id="ib0006" file="imgb0006.tif" wi="165" he="94" img-content="dna" img-format="tif"/></p>
<p id="p0019" num="0019">It should be understood that {x(n)} represents {<i>x<sub>n</sub></i>}.</p>
<p id="p0020" num="0020">Optionally, when delta=1, the method further includes:
<ul id="ul0007" list-style="none" compact="compact">
<li>determining the first sequence based on a preset condition and a sequence {s(n)}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0004" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>16</mn></mfrac></msup></math><img id="ib0007" file="imgb0007.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths> , M∈ {0, 1, 2, ..., 5}, K=6, A is a non-zero complex number, and <maths id="math0005" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0008" file="imgb0008.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {s(n)} includes at least one of the following sequences:
<img id="ib0009" file="imgb0009.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
or
<img id="ib0010" file="imgb0010.tif" wi="165" he="37" img-content="dna" img-format="tif"/></li>
</ul><!-- EPO <DP n="6"> -->
<img id="ib0011" file="imgb0011.tif" wi="165" he="127" img-content="dna" img-format="tif"/></p>
<p id="p0021" num="0021">Optionally, when delta=0, the method further includes:
<ul id="ul0008" list-style="none" compact="compact">
<li>determining the first sequence based on a preset condition and a sequence {s(n)}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0006" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>16</mn></mfrac></msup></math><img id="ib0012" file="imgb0012.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths> , M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0007" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0013" file="imgb0013.tif" wi="14" he="7" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {s(n)} includes at least one of the following sequences:
<img id="ib0014" file="imgb0014.tif" wi="165" he="54" img-content="dna" img-format="tif"/>
or
<img id="ib0015" file="imgb0015.tif" wi="165" he="13" img-content="dna" img-format="tif"/></li>
</ul><!-- EPO <DP n="7"> -->
<img id="ib0016" file="imgb0016.tif" wi="165" he="152" img-content="dna" img-format="tif"/></p>
<p id="p0022" num="0022">Optionally, when delta=1, the method further includes:
<ul id="ul0009" list-style="none" compact="compact">
<li>determining the first sequence based on a preset condition and a sequence {s(n)}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0008" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>16</mn></mfrac></msup></math><img id="ib0017" file="imgb0017.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths> , M∈{0, 1, 2, ..., 5}, K=6, A is a non-zero complex number, and <maths id="math0009" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0018" file="imgb0018.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {s(n)} includes at least one of the following sequences:
<img id="ib0019" file="imgb0019.tif" wi="165" he="37" img-content="dna" img-format="tif"/><!-- EPO <DP n="8"> -->
<img id="ib0020" file="imgb0020.tif" wi="136" he="5" img-content="dna" img-format="tif"/>
or
<img id="ib0021" file="imgb0021.tif" wi="165" he="184" img-content="dna" img-format="tif"/></li>
</ul></p>
<p id="p0023" num="0023">Optionally, when delta=0, the method further includes:
<ul id="ul0010" list-style="none" compact="compact">
<li>determining the first sequence based on a preset condition and a sequence {s<sub>n</sub>}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0010" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0022" file="imgb0022.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths> , M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0011" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0023" file="imgb0023.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {s<sub>n</sub>} includes at least one of the following sequences:<!-- EPO <DP n="9"> -->
<img id="ib0024" file="imgb0024.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
or
<img id="ib0025" file="imgb0025.tif" wi="165" he="86" img-content="dna" img-format="tif"/></li>
</ul></p>
<p id="p0024" num="0024">Optionally, when delta=0, the method further includes:
<ul id="ul0011" list-style="none" compact="compact">
<li>determining the first sequence based on a preset condition and a sequence {s<sub>n</sub>}, where the preset condition is <i>x<sub>n</sub> = y</i><sub>(<i>n</i>+<i>M</i>)mod <i>K</i></sub> , where <maths id="math0012" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0026" file="imgb0026.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths> , M∈{0, 1, 2, ..., 5}, K=6, A is a non-zero complex number, and <maths id="math0013" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0027" file="imgb0027.tif" wi="15" he="6" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {s<sub>n</sub>} includes at least one of the following sequences:
<img id="ib0028" file="imgb0028.tif" wi="165" he="54" img-content="dna" img-format="tif"/><!-- EPO <DP n="10"> -->
<img id="ib0029" file="imgb0029.tif" wi="165" he="135" img-content="dna" img-format="tif"/>
or
<img id="ib0030" file="imgb0030.tif" wi="165" he="111" img-content="dna" img-format="tif"/></li>
</ul><!-- EPO <DP n="11"> -->
<img id="ib0031" file="imgb0031.tif" wi="165" he="103" img-content="dna" img-format="tif"/></p>
<p id="p0025" num="0025">Optionally, when delta=1, the method further includes:
<ul id="ul0012" list-style="none" compact="compact">
<li>determining the first sequence based on a preset condition and a sequence {s<sub>n</sub>}, where the preset condition is <i>x<sub>n</sub></i> = <i>y</i><sub>(<i>n</i>+<i>M</i>)mod <i>K</i></sub>, where <maths id="math0014" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0032" file="imgb0032.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths> , M∈{0, 1, 2, ..., 5}, K=6, A is a non-zero complex number, and <maths id="math0015" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0033" file="imgb0033.tif" wi="15" he="6" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {s<sub>n</sub>} includes at least one of the following sequences:
<img id="ib0034" file="imgb0034.tif" wi="165" he="78" img-content="dna" img-format="tif"/>
<img id="ib0035" file="imgb0035.tif" wi="151" he="5" img-content="dna" img-format="tif"/><!-- EPO <DP n="12"> -->
<img id="ib0036" file="imgb0036.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
<img id="ib0037" file="imgb0037.tif" wi="165" he="62" img-content="dna" img-format="tif"/>
<img id="ib0038" file="imgb0038.tif" wi="165" he="135" img-content="dna" img-format="tif"/><!-- EPO <DP n="13"> -->
<img id="ib0039" file="imgb0039.tif" wi="165" he="21" img-content="dna" img-format="tif"/>
<img id="ib0040" file="imgb0040.tif" wi="165" he="160" img-content="dna" img-format="tif"/>
or
<img id="ib0041" file="imgb0041.tif" wi="165" he="62" img-content="dna" img-format="tif"/></li>
</ul><!-- EPO <DP n="14"> -->
<img id="ib0042" file="imgb0042.tif" wi="165" he="37" img-content="dna" img-format="tif"/></p>
<p id="p0026" num="0026">Optionally, when delta=1, the method further includes:
<ul id="ul0013" list-style="none" compact="compact">
<li>determining the first sequence based on a preset condition and a sequence {s<sub>n</sub>}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0016" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0043" file="imgb0043.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths> , M∈{0, 1, 2, ..., 5}, K=6, A is a non-zero complex number, and <maths id="math0017" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0044" file="imgb0044.tif" wi="14" he="7" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {s<sub>n</sub>} includes at least one of the following sequences:
<img id="ib0045" file="imgb0045.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
or
<img id="ib0046" file="imgb0046.tif" wi="165" he="78" img-content="dna" img-format="tif"/></li>
</ul></p>
<p id="p0027" num="0027">Optionally, when delta=0, the method further includes:
<ul id="ul0014" list-style="none" compact="compact">
<li>determining the first sequence based on a preset condition and a sequence {s<sub>n</sub>}, where the preset condition<!-- EPO <DP n="15"> --> is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0018" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>32</mn></mfrac></msup></math><img id="ib0047" file="imgb0047.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths> , M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0019" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0048" file="imgb0048.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {s<sub>n</sub>} includes at least one of the following sequences:
<img id="ib0049" file="imgb0049.tif" wi="165" he="54" img-content="dna" img-format="tif"/></li>
</ul></p>
<p id="p0028" num="0028">Optionally, when delta=1, the method further includes:
<ul id="ul0015" list-style="none" compact="compact">
<li>determining the first sequence based on a preset condition and a sequence {s<sub>n</sub>}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, <maths id="math0020" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>32</mn></mfrac></msup></math><img id="ib0050" file="imgb0050.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths> , M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0021" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0051" file="imgb0051.tif" wi="14" he="7" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {s<sub>n</sub>} includes at least one of the following sequences:
<img id="ib0052" file="imgb0052.tif" wi="165" he="54" img-content="dna" img-format="tif"/></li>
</ul></p>
<p id="p0029" num="0029">Optionally, when delta=1, the method further includes:
<ul id="ul0016" list-style="none" compact="compact">
<li>determining the first sequence based on a preset condition and a sequence {s(n)}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0022" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>16</mn></mfrac></msup></math><img id="ib0053" file="imgb0053.tif" wi="25" he="9" img-content="math" img-format="tif" inline="yes"/></maths> , M∈{0, 1, 2, ..., 5}, K=6, A is a non-zero complex number, and <maths id="math0023" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0054" file="imgb0054.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {s<sub>n</sub>} includes at least one of the following sequences:<!-- EPO <DP n="16"> -->
<img id="ib0055" file="imgb0055.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
or
<img id="ib0056" file="imgb0056.tif" wi="165" he="192" img-content="dna" img-format="tif"/></li>
</ul><!-- EPO <DP n="17"> -->
<img id="ib0057" file="imgb0057.tif" wi="165" he="217" img-content="dna" img-format="tif"/></p>
<p id="p0030" num="0030">Optionally, when delta=1, the method further includes:
<ul id="ul0017" list-style="none">
<li>determining the first sequence based on a preset condition and a sequence {s(n)}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, <maths id="math0024" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0058" file="imgb0058.tif" wi="25" he="9" img-content="math" img-format="tif" inline="yes"/></maths> , M∈{0, 1, 2, ..., 5}, K=6, A is a non-zero complex number, and<!-- EPO <DP n="18"> --> <maths id="math0025" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0059" file="imgb0059.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {s<sub>n</sub>} includes at least one of the following sequences:
<img id="ib0060" file="imgb0060.tif" wi="165" he="46" img-content="dna" img-format="tif"/>
or
<img id="ib0061" file="imgb0061.tif" wi="165" he="86" img-content="dna" img-format="tif"/></li>
</ul></p>
<p id="p0031" num="0031">According to a second aspect, a signal processing method is provided. The method includes:
<ul id="ul0018" list-style="none" compact="compact">
<li>generating a local sequence, where the local sequence is a first sequence or a conjugate transpose of a first sequence, the local sequence is used to process a first signal, and the first signal is a signal modulated by using π/2 binary phase shift keying BPSK; and</li>
<li>receiving a reference signal of the first signal on a first frequency-domain resource, where the first frequency-domain resource includes K subcarriers each having a subcarrier number of k, k=u+M<sup>∗</sup>n+delta, n=0, 1, ..., K―1, M is an integer greater than or equal to 2, delta∈{0, 1, ..., M―1}, u is an integer, the subcarrier numbers are numbered in ascending or descending order of frequencies, and the reference signal is generated by using the first sequence, where the first sequence varies as a delta value varies.</li>
</ul></p>
<p id="p0032" num="0032">Optionally, the method further includes:<br/>
sending indication information, where the indication information is used to indicate a sequence that is in<!-- EPO <DP n="19"> --> each of at least two sequence groups and used to generate the reference signal</p>
<p id="p0033" num="0033">According to a third aspect, a signal processing method is provided. The method includes:</p>
<p id="p0034" num="0034">When delta=0, the method further includes:
<ul id="ul0019" list-style="none" compact="compact">
<li>determining the first sequence {x(n)} based on a preset condition and a sequence {s(n)}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0026" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>16</mn></mfrac></msup></math><img id="ib0062" file="imgb0062.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5}, K=6, A is a non-zero complex number, and <maths id="math0027" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0063" file="imgb0063.tif" wi="14" he="7" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {s(n)} includes at least one of the following sequences:
<img id="ib0064" file="imgb0064.tif" wi="165" he="54" img-content="dna" img-format="tif"/>
or
<img id="ib0065" file="imgb0065.tif" wi="165" he="127" img-content="dna" img-format="tif"/></li>
</ul><!-- EPO <DP n="20"> -->
<img id="ib0066" file="imgb0066.tif" wi="165" he="54" img-content="dna" img-format="tif"/></p>
<p id="p0035" num="0035">According to a fourth aspect, a signal processing method is provided. The method includes:</p>
<p id="p0036" num="0036">When delta=1, the method further includes:
<ul id="ul0020" list-style="none" compact="compact">
<li>determining the first sequence based on a preset condition and a sequence {s(n)}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0028" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>16</mn></mfrac></msup></math><img id="ib0067" file="imgb0067.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths> , M∈{0, 1, 2, ..., 5}, K=6, A is a non-zero complex number, and <maths id="math0029" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0068" file="imgb0068.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {s(n)} includes at least one of the following sequences:
<img id="ib0069" file="imgb0069.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
or
<img id="ib0070" file="imgb0070.tif" wi="165" he="78" img-content="dna" img-format="tif"/></li>
</ul><!-- EPO <DP n="21"> -->
<img id="ib0071" file="imgb0071.tif" wi="165" he="86" img-content="dna" img-format="tif"/></p>
<p id="p0037" num="0037">In another implementation of the fourth aspect, the sequence {s(n)} may alternatively include at least one of the following sequences:
<img id="ib0072" file="imgb0072.tif" wi="165" he="43" img-content="dna" img-format="tif"/>
<img id="ib0073" file="imgb0073.tif" wi="165" he="94" img-content="dna" img-format="tif"/><!-- EPO <DP n="22"> -->
<img id="ib0074" file="imgb0074.tif" wi="165" he="86" img-content="dna" img-format="tif"/></p>
<p id="p0038" num="0038">According to a fifth aspect, a signal processing method is provided. The method includes:</p>
<p id="p0039" num="0039">When delta=0, the method further includes:
<ul id="ul0021" list-style="none" compact="compact">
<li>determining the first sequence based on a preset condition and a sequence {<i>S<sub>n</sub></i>}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0030" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0075" file="imgb0075.tif" wi="25" he="9" img-content="math" img-format="tif" inline="yes"/></maths> , M∈{0, 1, 2, ..., 5}, K=6, A is a non-zero complex number, and <maths id="math0031" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0076" file="imgb0076.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {<i>S<sub>n</sub></i>} includes at least one of the following sequences:
<img id="ib0077" file="imgb0077.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
or
<img id="ib0078" file="imgb0078.tif" wi="165" he="45" img-content="dna" img-format="tif"/></li>
</ul><!-- EPO <DP n="23"> -->
<img id="ib0079" file="imgb0079.tif" wi="165" he="37" img-content="dna" img-format="tif"/></p>
<p id="p0040" num="0040">According to a sixth aspect, a signal processing method is provided. The method includes:</p>
<p id="p0041" num="0041">When delta=1, the method further includes:
<ul id="ul0022" list-style="none" compact="compact">
<li>determining the first sequence based on a preset condition and a sequence {<i>S<sub>n</sub></i>}<i>,</i> where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0032" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0080" file="imgb0080.tif" wi="25" he="9" img-content="math" img-format="tif" inline="yes"/></maths> , M∈{0, 1<b>,</b> 2, ..., 5}, K=6, A is a non-zero complex number, and <maths id="math0033" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0081" file="imgb0081.tif" wi="14" he="7" img-content="math" img-format="tif" inline="yes"/></maths>; and</li>
<li>the sequence {<i>S<sub>n</sub></i>} includes at least one of the following sequences:
<img id="ib0082" file="imgb0082.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
or
<img id="ib0083" file="imgb0083.tif" wi="165" he="78" img-content="dna" img-format="tif"/></li>
</ul></p>
<p id="p0042" num="0042">Optionally, when delta=1, the method further includes:<!-- EPO <DP n="24"> -->
<ul id="ul0023" list-style="none" compact="compact">
<li>determining the first sequence based on a preset condition and a sequence {<i>S<sub>n</sub></i>}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0034" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>32</mn></mfrac></msup></math><img id="ib0084" file="imgb0084.tif" wi="25" he="9" img-content="math" img-format="tif" inline="yes"/></maths> , M∈{0, 1, 2, ..., 5}, K=6, A is a non-zero complex number, and <maths id="math0035" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0085" file="imgb0085.tif" wi="14" he="7" img-content="math" img-format="tif" inline="yes"/></maths>; and</li>
<li>the sequence {<i>S<sub>n</sub></i>} includes at least one of the following sequences:
<img id="ib0086" file="imgb0086.tif" wi="165" he="54" img-content="dna" img-format="tif"/></li>
</ul></p>
<p id="p0043" num="0043">Optionally, when delta=1, the method further includes:
<ul id="ul0024" list-style="none" compact="compact">
<li>determining the first sequence based on a preset condition and a sequence {s(n)}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0036" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>16</mn></mfrac></msup></math><img id="ib0087" file="imgb0087.tif" wi="25" he="9" img-content="math" img-format="tif" inline="yes"/></maths> , M∈{0, <b>1,</b> 2, ..., 5}, K=6, A is a non-zero complex number, and <maths id="math0037" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0088" file="imgb0088.tif" wi="15" he="7" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {<i>S<sub>n</sub></i>} includes at least one of the following sequences:
<img id="ib0089" file="imgb0089.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
<img id="ib0090" file="imgb0090.tif" wi="165" he="37" img-content="dna" img-format="tif"/><!-- EPO <DP n="25"> -->
<img id="ib0091" file="imgb0091.tif" wi="155" he="233" img-content="dna" img-format="tif"/><!-- EPO <DP n="26"> -->
<img id="ib0092" file="imgb0092.tif" wi="165" he="119" img-content="dna" img-format="tif"/>
<img id="ib0093" file="imgb0093.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
or
<img id="ib0094" file="imgb0094.tif" wi="165" he="70" img-content="dna" img-format="tif"/></li>
</ul><!-- EPO <DP n="27"> -->
<img id="ib0095" file="imgb0095.tif" wi="155" he="233" img-content="dna" img-format="tif"/><!-- EPO <DP n="28"> -->
<img id="ib0096" file="imgb0096.tif" wi="165" he="86" img-content="dna" img-format="tif"/></p>
<p id="p0044" num="0044">Optionally, when delta=1, the method further includes:
<ul id="ul0025" list-style="none" compact="compact">
<li>determining the first sequence based on a preset condition and a sequence {s(n)}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0038" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0097" file="imgb0097.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths> , M∈{0, <b>1,</b> 2, ..., 5}, K=6, A is a non-zero complex number, and <maths id="math0039" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0098" file="imgb0098.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {<i>S<sub>n</sub></i>} includes at least one of the following sequences:
<img id="ib0099" file="imgb0099.tif" wi="165" he="46" img-content="dna" img-format="tif"/>
or
<img id="ib0100" file="imgb0100.tif" wi="165" he="54" img-content="dna" img-format="tif"/></li>
</ul><!-- EPO <DP n="29"> -->
<img id="ib0101" file="imgb0101.tif" wi="165" he="29" img-content="dna" img-format="tif"/></p>
<p id="p0045" num="0045">According to a seventh aspect, a sequence-based signal processing method is provided. The method includes:
<ul id="ul0026" list-style="none" compact="compact">
<li>determining a sequence {<i>x<sub>n</sub></i>}, where <i>x<sub>n</sub></i> is an element in the sequence {<i>x<sub>n</sub></i>}, the sequence {<i>x<sub>n</sub></i>} is a sequence satisfying a preset condition, and the preset condition is:
<ul id="ul0027" list-style="none" compact="compact">
<li>the preset condition is <i>x<sub>n</sub></i> = <i>y</i><sub>(<i>n</i>+<i>M</i>)mod<i>K</i></sub>, where <maths id="math0040" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0102" file="imgb0102.tif" wi="24" he="10" img-content="math" img-format="tif" inline="yes"/></maths> , M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, <maths id="math0041" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0103" file="imgb0103.tif" wi="14" he="7" img-content="math" img-format="tif" inline="yes"/></maths> , and a set of a sequence {<i>S<sub>n</sub></i>} including an element <i>S<sub>n</sub></i> includes at least one of sequences in a first sequence set, where</li>
<li>the sequences in the first sequence set include:
<img id="ib0104" file="imgb0104.tif" wi="165" he="135" img-content="dna" img-format="tif"/><!-- EPO <DP n="30"> -->
<img id="ib0105" file="imgb0105.tif" wi="165" he="54" img-content="dna" img-format="tif"/>
<img id="ib0106" file="imgb0106.tif" wi="165" he="192" img-content="dna" img-format="tif"/><!-- EPO <DP n="31"> -->
<img id="ib0107" file="imgb0107.tif" wi="165" he="21" img-content="dna" img-format="tif"/>
<img id="ib0108" file="imgb0108.tif" wi="165" he="78" img-content="dna" img-format="tif"/>
<img id="ib0109" file="imgb0109.tif" wi="165" he="119" img-content="dna" img-format="tif"/>
<img id="ib0110" file="imgb0110.tif" wi="165" he="21" img-content="dna" img-format="tif"/><!-- EPO <DP n="32"> -->
<img id="ib0111" file="imgb0111.tif" wi="165" he="135" img-content="dna" img-format="tif"/>
<img id="ib0112" file="imgb0112.tif" wi="165" he="111" img-content="dna" img-format="tif"/><!-- EPO <DP n="33"> -->
<img id="ib0113" file="imgb0113.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
<img id="ib0114" file="imgb0114.tif" wi="165" he="103" img-content="dna" img-format="tif"/></li>
</ul></li>
<li>generating a first signal based on the sequence {<i>x<sub>n</sub></i>} ; and</li>
<li>sending the first signal.</li>
</ul></p>
<p id="p0046" num="0046">With reference to the seventh aspect, in a first implementation of the seventh aspect, the set of the sequence {<i>s<sub>n</sub></i>} includes at least one of sequences in a second sequence set, and the second sequence set includes some sequences in the first sequence set.</p>
<p id="p0047" num="0047">With reference to the seventh aspect, in a second implementation of the seventh aspect, the generating a first signal based on the sequence {<i>x<sub>n</sub></i>} includes:
<ul id="ul0028" list-style="none" compact="compact">
<li>performing discrete Fourier transform on N elements in the sequence {<i>x<sub>n</sub></i>} to obtain a sequence {<i>f<sub>n</sub></i>} including the N elements;</li>
<li>mapping the N elements in the sequence {<i>f<sub>n</sub></i>} to N subcarriers respectively, to obtain a frequency-domain signal including the N elements; and<!-- EPO <DP n="34"> --></li>
<li>generating the first signal based on the frequency-domain signal.</li>
</ul></p>
<p id="p0048" num="0048">With reference to the seventh aspect, in a third implementation of the seventh aspect, the N subcarriers are N consecutive subcarriers or N equi-spaced subcarriers.</p>
<p id="p0049" num="0049">With reference to the seventh aspect, in a fourth implementation of the seventh aspect, before the performing discrete Fourier transform on N elements in the sequence {<i>x<sub>n</sub></i>}, the first signal processing method further includes: filtering the sequence {<i>x<sub>n</sub></i>}; or<br/>
after the performing discrete Fourier transform on N elements in the sequence {<i>x<sub>n</sub></i>}, the first signal processing method further includes: filtering the sequence {<i>x<sub>n</sub></i>}.</p>
<p id="p0050" num="0050">With reference to the seventh aspect, in a fifth implementation of the seventh aspect, the first signal is a reference signal of a second signal, and a modulation scheme of the second signal is π/2 binary phase shift keying BPSK.</p>
<p id="p0051" num="0051">According to an eighth aspect, a sequence-based signal processing apparatus is provided. The apparatus includes:
<ul id="ul0029" list-style="none" compact="compact">
<li>a determining unit, configured to determine a sequence {<i>x<sub>n</sub></i>}<i>,</i> where <i>x<sub>n</sub></i> is an element in the sequence {<i>x<sub>n</sub></i>}<i>,</i> the sequence {<i>x<sub>n</sub></i>} is a sequence satisfying a preset condition, and the preset condition is:
<ul id="ul0030" list-style="none" compact="compact">
<li>the preset condition is <i>x<sub>n</sub></i> = <i>y</i><sub>(<i>n</i>+<i>M</i>)mod<i>K</i></sub>, where <maths id="math0042" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0115" file="imgb0115.tif" wi="25" he="9" img-content="math" img-format="tif" inline="yes"/></maths> , M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, <maths id="math0043" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0116" file="imgb0116.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>, and a set of a sequence {<i>S<sub>n</sub></i>} including an element <i>S<sub>n</sub></i> includes at least one of sequences in a first sequence set, where</li>
<li>the sequences in the first sequence set include:
<img id="ib0117" file="imgb0117.tif" wi="165" he="78" img-content="dna" img-format="tif"/></li>
</ul><!-- EPO <DP n="35"> -->
<img id="ib0118" file="imgb0118.tif" wi="165" he="111" img-content="dna" img-format="tif"/>
<img id="ib0119" file="imgb0119.tif" wi="165" he="135" img-content="dna" img-format="tif"/><!-- EPO <DP n="36"> -->
<img id="ib0120" file="imgb0120.tif" wi="165" he="78" img-content="dna" img-format="tif"/>
<img id="ib0121" file="imgb0121.tif" wi="165" he="78" img-content="dna" img-format="tif"/>
<img id="ib0122" file="imgb0122.tif" wi="165" he="54" img-content="dna" img-format="tif"/>
<img id="ib0123" file="imgb0123.tif" wi="165" he="29" img-content="dna" img-format="tif"/><!-- EPO <DP n="37"> -->
<img id="ib0124" file="imgb0124.tif" wi="165" he="29" img-content="dna" img-format="tif"/>
<img id="ib0125" file="imgb0125.tif" wi="165" he="160" img-content="dna" img-format="tif"/>
<img id="ib0126" file="imgb0126.tif" wi="165" he="54" img-content="dna" img-format="tif"/><!-- EPO <DP n="38"> -->
<img id="ib0127" file="imgb0127.tif" wi="165" he="103" img-content="dna" img-format="tif"/>
<img id="ib0128" file="imgb0128.tif" wi="165" he="103" img-content="dna" img-format="tif"/></li>
<li>a generation unit, configured to generate a first signal based on the sequence {<i>x<sub>n</sub></i>}; and</li>
<li>a sending unit, configured to send the first signal.</li>
</ul></p>
<p id="p0052" num="0052">With reference to the eighth aspect, in a first implementation of the eighth aspect, the set of the sequence {<i>S<sub>n</sub></i>} includes at least one of sequences in a second sequence set, and the second sequence set includes some<!-- EPO <DP n="39"> --> sequences in the first sequence set.</p>
<p id="p0053" num="0053">With reference to the eighth aspect, in a second implementation of the eighth aspect,
<ul id="ul0031" list-style="none" compact="compact">
<li>the generation unit is further configured to perform discrete Fourier transform on N elements in the sequence {<i>x<sub>n</sub></i>} to obtain a sequence {<i>f<sub>n</sub></i>} including the N elements;</li>
<li>the generation unit is further configured to map the N elements in the sequence {<i>f<sub>n</sub></i>} to N subcarriers respectively, to obtain a frequency-domain signal including the N elements; and</li>
<li>the generation unit is further configured to generate the first signal based on the frequency-domain signal.</li>
</ul></p>
<p id="p0054" num="0054">With reference to the eighth aspect, in a third implementation of the eighth aspect, the N subcarriers are N consecutive subcarriers or N equi-spaced subcarriers.</p>
<p id="p0055" num="0055">With reference to the eighth aspect, in a fourth implementation of the eighth aspect, the signal processing apparatus further includes a filter unit, configured to: filter the sequence {<i>x<sub>n</sub></i>} before the discrete Fourier transform is performed on the N elements in the sequence {<i>x<sub>n</sub></i>}; or<br/>
filter the sequence {<i>x<sub>n</sub></i>} after the discrete Fourier transform is performed on the N elements in the sequence {<i>x<sub>n</sub></i>}.</p>
<p id="p0056" num="0056">With reference to the eighth aspect, in a fifth implementation of the eighth aspect, the first signal is a reference signal of a second signal, and a modulation scheme of the second signal is π/2 binary phase shift keying BPSK.</p>
<p id="p0057" num="0057">According to a ninth aspect, a communications apparatus is provided. The apparatus may be a terminal, or may be a chip in a terminal. The apparatus has a function of implementing any one of the first aspect, the third aspect to the sixth aspect, the seventh aspect, and the possible implementations. This function may be implemented by hardware, or may be implemented by hardware executing corresponding software. The hardware or software includes one or more modules corresponding to the function.</p>
<p id="p0058" num="0058">In a possible design, the apparatus includes a processing module and a transceiver module. The transceiver module may be, for example, at least one of a transceiver, a receiver, or a transmitter. The transceiver module may include a radio frequency circuit or an antenna. The processing module may be a processor.</p>
<p id="p0059" num="0059">Optionally, the apparatus further includes a storage module, and the storage module may be, for example, a memory. When the storage module is included, the storage module is configured to store an instruction. The processing module is connected to the storage module, and the processing module may execute the instruction stored in the storage module or an instruction from another module, to enable the apparatus to perform the method according to any one of the first aspect, the third aspect, the sixth aspect, and the possible implementations.</p>
<p id="p0060" num="0060">In another possible design, when the apparatus is a chip, the chip includes a processing module.<!-- EPO <DP n="40"> --> Optionally, the chip further includes a transceiver module. The transceiver module may be, for example, an input/output interface, a pin, or a circuit on the chip. The processing module may be, for example, a processor. The processing module may execute an instruction, to enable the chip in the terminal to perform the method according to any one of the first aspect, the third aspect to the sixth aspect, the seventh aspect, and the possible implementations.</p>
<p id="p0061" num="0061">Optionally, the processing module may execute an instruction in a storage module, and the storage module may be a storage module in the chip, for example, a register or a cache. The storage module may alternatively be located inside a communications device but outside the chip, for example, a read-only memory (read-only memory, ROM), another type of static storage device that can store static information and instructions, or a random access memory (random access memory, RAM).</p>
<p id="p0062" num="0062">The processor mentioned above may be a general-purpose central processing unit (CPU), a microprocessor, an application-specific integrated circuit (application-specific integrated circuit, ASIC), or one or more integrated circuits configured to control program execution of the communication methods in the foregoing aspects.</p>
<p id="p0063" num="0063">According to a tenth aspect, a communications apparatus is provided. The apparatus may be a network device, or may be a chip in a network device. The apparatus has a function of implementing any one of the second aspect, the eighth aspect, and the possible implementations. This function may be implemented by hardware, or may be implemented by hardware executing corresponding software. The hardware or software includes one or more modules corresponding to the function.</p>
<p id="p0064" num="0064">In a possible design, the apparatus includes a processing module and a transceiver module. The transceiver module may be, for example, at least one of a transceiver, a receiver, or a transmitter. The transceiver module may include a radio frequency circuit or an antenna. The processing module may be a processor.</p>
<p id="p0065" num="0065">Optionally, the apparatus further includes a storage module, and the storage module may be, for example, a memory. When the storage module is included, the storage module is configured to store an instruction. The processing module is connected to the storage module, and the processing module may execute the instruction stored in the storage module or an instruction from another module, to enable the apparatus to perform the method according to any one of the second aspect, the eighth aspect, and the possible implementations. In this design, the apparatus may be a network device.</p>
<p id="p0066" num="0066">In another possible design, when the apparatus is a chip, the chip includes a transceiver module and a processing module. The transceiver module may be, for example, an input/output interface, a pin, or a circuit on the chip. The processing module may be, for example, a processor. The processing module may execute an instruction, to enable the chip in the terminal to perform the method according to any one of the second aspect, the eighth aspect,<!-- EPO <DP n="41"> --> and the possible implementations.</p>
<p id="p0067" num="0067">Optionally, the processing module may execute an instruction in a storage module, and the storage module may be a storage module in the chip, for example, a register or a cache. The storage module may alternatively be located inside a communications device but outside the chip, for example, a read-only memory, another type of static storage device that can store static information and instructions, or a random access memory.</p>
<p id="p0068" num="0068">The processor mentioned above may be a general-purpose central processing unit, a microprocessor, an application-specific integrated circuit, or one or more integrated circuits configured to control program execution of the communication methods in the foregoing aspects.</p>
<p id="p0069" num="0069">According to an eleventh aspect, a computer storage medium is provided. The computer storage medium stores program code. The program code is used to indicate an instruction for performing the method according to any one of the first aspect, the third aspect to the sixth aspect, the seventh aspect, and the possible implementations.</p>
<p id="p0070" num="0070">According to a twelfth aspect, a computer storage medium is provided. The computer storage medium stores program code. The program code is used to indicate an instruction for performing the method according to any one of the first aspect, the third aspect to the sixth aspect, the seventh aspect, and the possible implementations.</p>
<p id="p0071" num="0071">According to a thirteenth aspect, a computer program product including an instruction is provided. When the computer program product runs on a computer, the computer is enabled to perform the method according to any one of the first aspect, the third aspect to the sixth aspect, the seventh aspect, and the possible implementations.</p>
<p id="p0072" num="0072">According to a fourteenth aspect, a computer program product including an instruction is provided. When the computer program product runs on a computer, the computer is enabled to perform the method according to any one of the second aspect or the possible implementations thereof.</p>
<p id="p0073" num="0073">According to a fifteenth aspect, a processor is provided. The processor is configured to couple to a memory, and configured to perform the method according to any one of the first aspect, the third aspect to the sixth aspect, the seventh aspect, and the possible implementations.</p>
<p id="p0074" num="0074">According to a sixteenth aspect, a processor is provided. The processor is configured to couple to a memory, and configured to perform the method according to any one of the second aspect, the eighth aspect, and the possible implementations.</p>
<p id="p0075" num="0075">According to a seventeenth aspect, a chip is provided. The chip includes a processor and a communications interface. The communications interface is configured to communicate with an external component or an internal component. The processor is configured to implement the method according to any one of the first aspect, the third aspect to the sixth aspect, the seventh aspect, and the possible implementations.</p>
<p id="p0076" num="0076">Optionally, the chip may further include a memory. The memory stores an instruction. The processor is<!-- EPO <DP n="42"> --> configured to execute the instruction stored in the memory or an instruction from another module. When the instruction is executed, the processor is configured to implement the method according to any one of the first aspect, the third aspect to the sixth aspect, and the possible implementations.</p>
<p id="p0077" num="0077">Optionally, the chip may be integrated on a terminal.</p>
<p id="p0078" num="0078">According to an eighteenth aspect, a chip is provided. The chip includes a processor and a communications interface. The communications interface is configured to communicate with an external component or an internal component. The processor is configured to implement the method according to any one of the second aspect, the eighth aspect, and the possible implementations.</p>
<p id="p0079" num="0079">Optionally, the chip may further include a memory. The memory stores an instruction. The processor is configured to execute the instruction stored in the memory or an instruction from another module. When the instruction is executed, the processor is configured to implement the method according to any one of the second aspect, the eighth aspect, and the possible implementations.</p>
<p id="p0080" num="0080">Optionally, the chip may be integrated on a network device.</p>
<p id="p0081" num="0081">Based on the foregoing technical solution, in frequency-domain resources of a comb structure, reference signals mapped to frequency-domain resources on different combs may be generated by using different sequences. In other words, the reference signals on different frequency-domain resources may be generated by using the different sequences. This improves performance of the reference signals transmitted on the frequency-domain resources of the comb structure. According to the foregoing embodiments, auto-correlations and PAPRs of the reference signals transmitted on the frequency-domain resource of the comb structure are reduced, and a cross-correlation between reference signals that use different sequences and occupy a same frequency-domain resource is also reduced. This improves transmission performance of the reference signals.</p>
<heading id="h0004"><b>BRIEF DESCRIPTION OF DRAWINGS</b></heading>
<p id="p0082" num="0082">
<ul id="ul0032" list-style="none" compact="compact">
<li><figref idref="f0001">FIG. 1</figref> is a schematic diagram of a communications system according to this application;</li>
<li><figref idref="f0002">FIG. 2</figref> is a schematic flowchart of a signal transmission method according to a conventional solution;</li>
<li><figref idref="f0002">FIG. 3</figref> is a schematic flowchart of a signal processing method according to a conventional solution;</li>
<li><figref idref="f0003">FIG. 4</figref> is a schematic flowchart of a signal processing method according to an embodiment of this application;</li>
<li><figref idref="f0004">FIG. 5</figref> is a schematic flowchart of a signal processing method according to another embodiment of this application;<!-- EPO <DP n="43"> --></li>
<li><figref idref="f0005">FIG. 6</figref> is a schematic flowchart of a signal processing method according to another embodiment of this application;</li>
<li><figref idref="f0006">FIG. 7</figref> is a schematic flowchart of a signal processing method according to another embodiment of this application;</li>
<li><figref idref="f0006">FIG. 8</figref> is a schematic flowchart of a signal processing method according to another embodiment of this application;</li>
<li><figref idref="f0007">FIG. 9</figref> is a schematic flowchart of a signal processing method according to another embodiment of this application;</li>
<li><figref idref="f0007">FIG. 10</figref> is a schematic block diagram of a signal processing apparatus according to an embodiment of this application;</li>
<li><figref idref="f0008">FIG. 11</figref> is a schematic block diagram of a signal processing apparatus according to another embodiment of this application;</li>
<li><figref idref="f0008">FIG. 12</figref> is a schematic block diagram of a signal processing apparatus according to another embodiment of this application;</li>
<li><figref idref="f0009">FIG. 13</figref> is a schematic block diagram of a signal processing apparatus according to another embodiment of this application;</li>
<li><figref idref="f0009">FIG. 14</figref> is a schematic block diagram of a signal processing apparatus according to a specific embodiment of this application;</li>
<li><figref idref="f0010">FIG. 15</figref> is a schematic block diagram of a signal processing apparatus according to another specific embodiment of this application;</li>
<li><figref idref="f0011">FIG. 16</figref> is a schematic block diagram of a signal processing apparatus according to another specific embodiment of this application;</li>
<li><figref idref="f0012">FIG. 17</figref> is a schematic block diagram of a signal processing apparatus according to another specific embodiment of this application; and</li>
<li><figref idref="f0012">FIG. 18</figref> is a schematic diagram of a signal processing method according to another embodiment of this application.</li>
</ul></p>
<heading id="h0005"><b>DESCRIPTION OF EMBODIMENTS</b></heading>
<p id="p0083" num="0083">The following describes technical solutions of this application with reference to the accompanying drawings.<!-- EPO <DP n="44"> --></p>
<p id="p0084" num="0084">The technical solutions of embodiments of this application may be applied to various communications systems, such as a global system for mobile communications (global system for mobile communications, GSM), a code division multiple access (code division multiple access, CDMA) system, a wideband code division multiple access (wideband code division multiple access, WCDMA) system, a general packet radio service (general packet radio service, GPRS) system, a long term evolution (long term evolution, LTE) system, an LTE frequency division duplex (frequency division duplex, FDD) system, an LTE time division duplex (time division duplex, TDD) system, a universal mobile telecommunications system (universal mobile telecommunication system, UMTS), a worldwide interoperability for microwave access (worldwide interoperability for microwave access, WiMAX) communications system, and a future 5th generation (5th generation, 5G) system or new radio (new radio, NR) system.</p>
<p id="p0085" num="0085">A terminal device in the embodiments of this application may be user equipment, an access terminal, a subscriber unit, a subscriber station, a mobile station, a remote station, a remote terminal, a mobile device, a user terminal, a terminal, a wireless communications device, a user agent, or a user apparatus. The terminal device may alternatively be a cellular phone, a cordless phone, a session initiation protocol (session initiation protocol, SIP) phone, a wireless local loop (wireless local loop, WLL) station, a personal digital assistant (personal digital assistant, PDA), a handheld device having a wireless communication function, a computing device, another processing device connected to a wireless modem, a vehicle-mounted device, a wearable device, a terminal device in a future 5G network, or a terminal device in a future evolved public land mobile network (public land mobile network, PLMN). This is not limited in the embodiments of this application.</p>
<p id="p0086" num="0086">A network device in the embodiments this application may be a device configured to communicate with a terminal device. The network device may be a base transceiver station (base transceiver station, BTS) in a global system for mobile communications (global system for mobile communications, GSM) or a code division multiple access (code division multiple access, CDMA) system, or may be a NodeB (NodeB, NB) in a wideband code division multiple access (wideband code division multiple access, WCDMA) system, or may be an evolved NodeB (evolved NodeB, eNB or eNodeB) in an LTE system, or may be a radio controller in a cloud radio access network (cloud radio access network, CRAN) scenario, or the like. Alternatively, the network device may be a relay station, an access point, a vehicle-mounted device, a wearable device, a network device in a future 5G network, a network device in a future evolved PLMN network, or the like. This is not limited in the embodiments of this application.</p>
<p id="p0087" num="0087">In the embodiments of this application, the terminal device or the network device includes a hardware layer, an operating system layer running on the hardware layer, and an application layer running on the operating system layer. The hardware layer includes hardware such as a central processing unit (central processing unit, CPU), a memory management unit (memory management unit, MMU), and a memory (also referred to as main memory).<!-- EPO <DP n="45"> --> The operating system may be any one or more types of computer operating systems, for example, a Linux operating system, a Unix operating system, an Android operating system, an iOS operating system, or a Windows operating system, that implement service processing by using a process (process). The application layer includes applications such as a browser, an address book, word processing software, and instant messaging software. In addition, a specific structure of an execution body of a method provided in the embodiments of this application is not specifically limited in the embodiments of this application, provided that a program that records code of the method provided in the embodiments of this application can be run to perform communication according to the method provided in the embodiments of this application. For example, the execution body of the method provided in the embodiments of this application may be the terminal device or the network device, or a function module that can invoke and execute the program in the terminal device or the network device.</p>
<p id="p0088" num="0088">In addition, aspects or features of this application may be implemented as a method, an apparatus, or a product that uses standard programming and/or engineering technologies. The term "product" used in this application covers a computer program that can be accessed from any computer-readable component, carrier, or medium. For example, the computer-readable medium may include, but is not limited to, a magnetic storage component (for example, a hard disk, a floppy disk, or a magnetic tape), an optical disc (for example, a compact disc (compact disc, CD), or a digital versatile disc (digital versatile disc, DVD)), a smart card, and a flash memory component (for example, an erasable programmable read-only memory (erasable programmable read-only memory, EPROM), a card, a stick, or a key drive). In addition, various storage media described in this specification may indicate one or more devices and/or other machine-readable media that are configured to store information. The term "machine-readable media" may include, but is not limited to, a radio channel and various other media that can store, contain, and/or carry an instruction and/or data.</p>
<p id="p0089" num="0089"><figref idref="f0001">FIG. 1</figref> is a schematic diagram of a communications system according to this application. The communications system in <figref idref="f0001">FIG. 1</figref> may include at least one terminal (for example, a terminal 10, a terminal 20, a terminal 30, a terminal 40, a terminal 50, and a terminal 60) and a network device 70. The network device 70 is configured to: provide a communications service for the terminal, and connect the terminal to a core network. The terminal may access the network by searching for a synchronization signal, a broadcast signal, and the like sent by the network device 70, to communicate with the network. The terminal 10, the terminal 20, the terminal 30, the terminal 40, and the terminal 60 in <figref idref="f0001">FIG. 1</figref> may perform uplink and downlink transmission with the network device 70. For example, the network device 70 may send a downlink signal to the terminal 10, the terminal 20, the terminal 30, the terminal 40, and the terminal 60, and may also receive uplink signals that are sent by the terminal 10, the terminal 20, the terminal 30, the terminal 40, and the terminal 60.<!-- EPO <DP n="46"> --></p>
<p id="p0090" num="0090">In addition, the terminal 40, the terminal 50, and the terminal 60 may alternatively be considered as a communications system. The terminal 60 may send a downlink signal to the terminal 40 and the terminal 50, and may also receive uplink signals sent by the terminal 40 and the terminal 50.</p>
<p id="p0091" num="0091">In a conventional solution, a DMRS sequence having a length of 6 is used to support transmission of a PUSCH whose frequency-domain bandwidth includes 12 subcarriers. The DMRS sequence having the length of 6 is mapped to six equi-spaced subcarriers, for example, mapped to bandwidth having a spacing of one subcarrier. The DMRS sequence having the length of 6 is any group of elements ϕ(0), ... , ϕ(5) in Table 1. The DMRS sequence s(n) having the length of 6 is transformed into a sequence y(m), y(n)=[s(n)s(n)], that is, in y(n).</p>
<p id="p0092" num="0092">In the conventional solution, to support transmission of a PUSCH whose frequency-domain bandwidth includes 12 subcarriers (one RB), the DMRS sequence is determined based on a CGS sequence that is mapped to frequency domain to obtain a comb (comb)-2 structure. To be specific, a time-domain base sequence is repeated twice, an OCC[+1, +1] is used for one of the repeated time-domain base sequences, an OCC [+1, ―1] is used for the other one of the repeated time-domain base sequences, and then DFT transform is performed. To ensure a plurality of factors such as a low PAPR characteristic, good frequency-domain flatness, a good time-domain auto-correlation characteristic, and a low sequence cross-correlation characteristic, a modulation scheme used by the DMRS sequence is usually a high-order modulation scheme. For example, a generation manner of a sequence using 8PSK is s(n)=e<sup>jϕ(n)π/8</sup> with 0≤n≤5, where ϕ(n) may be determined based on Table 1.
<tables id="tabl0001" num="0001">
<table frame="all">
<title><b>Table 1</b></title>
<tgroup cols="3">
<colspec colnum="1" colname="col1" colwidth="9mm"/>
<colspec colnum="2" colname="col2" colwidth="42mm"/>
<colspec colnum="3" colname="col3" colwidth="21mm"/>
<thead>
<row>
<entry valign="top">u</entry>
<entry valign="top">ϕ(0), ... , ϕ(5)ϕ(0), ... , ϕ(5)</entry>
<entry valign="top">PAPR (dB)</entry></row></thead>
<tbody>
<row>
<entry>0</entry>
<entry>-7 5-7-3 -5 5</entry>
<entry>1.4610</entry></row>
<row>
<entry>1</entry>
<entry>-7 -3 -7 -3 7 5</entry>
<entry>1.4610</entry></row>
<row>
<entry>2</entry>
<entry>-7 -3 3 7 3 -3</entry>
<entry>1.5421</entry></row>
<row>
<entry>3</entry>
<entry>-7 5-7-3 7 5</entry>
<entry>1.6373</entry></row>
<row>
<entry>4</entry>
<entry>-7 -3 -7 -3 -5 5</entry>
<entry>1.6373</entry></row>
<row>
<entry>5</entry>
<entry>-7 1 -1 5 -7 5</entry>
<entry>1.6492</entry></row>
<row>
<entry>6</entry>
<entry>-7 5 -1 1 -3 1</entry>
<entry>1.8773</entry></row>
<row>
<entry>7</entry>
<entry>-7 -3 -7 -5 5 1</entry>
<entry>1.8773</entry></row>
<row>
<entry>8</entry>
<entry>-7 -5 3 7 5 -1</entry>
<entry>1.9518</entry></row>
<row>
<entry>9</entry>
<entry>-7 3 -3 -5 -1 7</entry>
<entry>1.9518</entry></row><!-- EPO <DP n="47"> -->
<row>
<entry>10</entry>
<entry>-7 1 -3 1 7 5</entry>
<entry>1.9574</entry></row>
<row>
<entry>11</entry>
<entry>-7 -3 -3 -1 -7 5</entry>
<entry>1.9661</entry></row>
<row>
<entry>12</entry>
<entry>-7 -7 -3 1 -3 7</entry>
<entry>1.9661</entry></row>
<row>
<entry>13</entry>
<entry>-7 5 -5 -1 -3 5</entry>
<entry>1.9682</entry></row>
<row>
<entry>14</entry>
<entry>-7 -1 5 7 5 -1</entry>
<entry>1.9911</entry></row>
<row>
<entry>15</entry>
<entry>-7 3 -3 -5 -3 3</entry>
<entry>1.9911</entry></row>
<row>
<entry>16</entry>
<entry>-7 -3 3 -1 -7 -5</entry>
<entry>1.9939</entry></row>
<row>
<entry>17</entry>
<entry>-7-3-5-373</entry>
<entry>1.9939</entry></row>
<row>
<entry>18</entry>
<entry>-7 -1 -3 -1 7 3</entry>
<entry>2.0232</entry></row>
<row>
<entry>19</entry>
<entry>-7 5 7 -1 -3 3</entry>
<entry>2.0314</entry></row>
<row>
<entry>20</entry>
<entry>-7 -1 -3 5 7 3</entry>
<entry>2.0314</entry></row>
<row>
<entry>21</entry>
<entry>-7 -1 3 7 3 -1</entry>
<entry>2.0425</entry></row>
<row>
<entry>22</entry>
<entry>-7 3 -1 -5 -1 3</entry>
<entry>2.0425</entry></row>
<row>
<entry>23</entry>
<entry>-7 3 3 7 -5 7</entry>
<entry>2.0490</entry></row>
<row>
<entry>24</entry>
<entry>-7 5 -7 -3 -3 7</entry>
<entry>2.0491</entry></row>
<row>
<entry>25</entry>
<entry>-7 -5 3 7 3 -3</entry>
<entry>2.0927</entry></row>
<row>
<entry>26</entry>
<entry>-7 3 -1 3 -5 -3</entry>
<entry>2.0928</entry></row>
<row>
<entry>27</entry>
<entry>-7 1 -3 5 7 5</entry>
<entry>2.1111</entry></row>
<row>
<entry>28</entry>
<entry>-7 5 -3 1 1 -1</entry>
<entry>2.1966</entry></row>
<row>
<entry>29</entry>
<entry>-777-53-1</entry>
<entry>2.1966</entry></row></tbody></tgroup>
</table>
</tables></p>
<p id="p0093" num="0093">The comb-2 structure used for DMRS mapping in frequency domain is shown in <figref idref="f0002">FIG. 2</figref>. To be specific, for a PUSCH of a user, a DMRS occupies only an odd-numbered subcarrier or an even-numbered subcarrier. For a system, a PUSCH of another user that is scheduled at the same time may occupy the other group of subcarriers.</p>
<p id="p0094" num="0094">Sequences in Table 1 are repeated by using [+1 +1] and [+1-1], and are transformed into the frequency domain for frequency-domain filtering. A sequence value on each subcarrier is finally output, as shown in Table 2. The foregoing transform process is shown in <figref idref="f0002">FIG. 3</figref>. For example, a base sequence S<sub>N/2</sub> having a length of N/2 is repeated to obtain s<sup>(0)</sup>=[s<sub>N/2</sub>, s<sub>N/2</sub>] and s<sup>(1)</sup>=[s<sub>N/2</sub>, ―s<sub>N/2</sub>], and then DFT transform is performed on s<sup>(0)</sup> and s<sup>(1)</sup>, to obtain s<sup>(0)</sup>=DFT(s<sup>(0)</sup>) and s<sup>(1)</sup>=DFT(s<sup>(1)</sup>), where the sequence s<sup>(0)</sup> having a length of N occupies only even-numbered subcarriers shown in <figref idref="f0002">FIG. 2</figref>, and the sequence s<sup>(1)</sup> having a length of N occupies only odd-numbered subcarriers shown<!-- EPO <DP n="48"> --> in <figref idref="f0002">FIG. 2</figref>.</p>
<p id="p0095" num="0095">It may be learned from the following Table 2 and the foregoing Table 1 that, a sequence s having a length of 6 may be searched for, where a PAPR value of a sequence obtained after the sequence s is repeated by using [+1 +1] is lower than a PAPR value of the sequence s in Table 1, but a PAPR value of a sequence obtained after the sequence s is repeated by using [+1 ―1] is higher than the PAPR value of the sequence s in Table 1. In other words, in the conventional solution, a proper sequence cannot be found, where both a PAPR value of a sequence obtained after the proper sequence is repeated by using [+1 +1] and a PAPR value of a sequence obtained after the proper sequence is repeated by using [+1 ―1] are lower than a PAPR value of a PUSCH.
<tables id="tabl0002" num="0002">
<table frame="all">
<title><b>Table 2</b></title>
<tgroup cols="4">
<colspec colnum="1" colname="col1" colwidth="9mm"/>
<colspec colnum="2" colname="col2" colwidth="44mm"/>
<colspec colnum="3" colname="col3" colwidth="46mm"/>
<colspec colnum="4" colname="col4" colwidth="46mm"/>
<thead>
<row>
<entry valign="top">u</entry>
<entry valign="top">ϕ(0), ... , ϕ(5)ϕ(0), ... , ϕ(5)</entry>
<entry valign="top">PAPR with [s s] structure (dB)</entry>
<entry valign="top">PAPR with [s -s] structure (dB)</entry></row></thead>
<tbody>
<row>
<entry>0</entry>
<entry>-7 5 -7 -3 -5 5</entry>
<entry>1.4610</entry>
<entry>1.4479</entry></row>
<row>
<entry>1</entry>
<entry>-7 -3 -7 -3 7 5</entry>
<entry>1.4610</entry>
<entry>1.5786</entry></row>
<row>
<entry>2</entry>
<entry>-7 -3 3 7 3 -3</entry>
<entry>1.5421</entry>
<entry>1.7852</entry></row>
<row>
<entry>3</entry>
<entry>-7 5 -7 -3 7 5</entry>
<entry>1.6373</entry>
<entry>2.1837</entry></row>
<row>
<entry>4</entry>
<entry>-7 -3 -7 -3 -5 5</entry>
<entry>1.6373</entry>
<entry>2.2430</entry></row>
<row>
<entry>5</entry>
<entry>-7 1 -1 5 -7 5</entry>
<entry>1.6492</entry>
<entry>2.3795</entry></row>
<row>
<entry>6</entry>
<entry>-7 5 -1 1 -3 1</entry>
<entry>1.8773</entry>
<entry>2.3797</entry></row>
<row>
<entry>7</entry>
<entry>-7 -3 -7 -5 5 1</entry>
<entry>1.8773</entry>
<entry>2.3797</entry></row>
<row>
<entry>8</entry>
<entry>-7 -5 3 7 5 -1</entry>
<entry>1.9518</entry>
<entry>2.3822</entry></row>
<row>
<entry>9</entry>
<entry>-7 3 -3 -5 -1 7</entry>
<entry>1.9518</entry>
<entry>2.3905</entry></row>
<row>
<entry>10</entry>
<entry>-7 1 -3 1 7 5</entry>
<entry>1.9574</entry>
<entry>2.3905</entry></row>
<row>
<entry>11</entry>
<entry>-7 -3 -3 -1 -7 5</entry>
<entry>1.9661</entry>
<entry>2.3905</entry></row>
<row>
<entry>12</entry>
<entry>-7 -7 -3 1 -3 7</entry>
<entry>1.9661</entry>
<entry>2.4530</entry></row>
<row>
<entry>13</entry>
<entry>-7 5 -5 -1 -3 5</entry>
<entry>1.9682</entry>
<entry>2.4702</entry></row>
<row>
<entry>14</entry>
<entry>-7 -1 5 7 5 -1</entry>
<entry>1.9911</entry>
<entry>2.5254</entry></row>
<row>
<entry>15</entry>
<entry>-7 3 -3 -5 -3 3</entry>
<entry>1.9911</entry>
<entry>2.5254</entry></row>
<row>
<entry>16</entry>
<entry>-7 -3 3 -1 -7 -5</entry>
<entry>1.9939</entry>
<entry>2.6289</entry></row>
<row>
<entry>17</entry>
<entry>-7 -3 -5 -3 7 3</entry>
<entry>1.9939</entry>
<entry>2.6671</entry></row><!-- EPO <DP n="49"> -->
<row>
<entry>18</entry>
<entry>-7 -1 -3 -1 7 3</entry>
<entry>2.0232</entry>
<entry>2.6671</entry></row>
<row>
<entry>19</entry>
<entry>-7 5 7 -1 -3 3</entry>
<entry>2.0314</entry>
<entry>2.9176</entry></row>
<row>
<entry>20</entry>
<entry>-7 -1 -3 5 7 3</entry>
<entry>2.0314</entry>
<entry>3.0113</entry></row>
<row>
<entry>21</entry>
<entry>-7 -1 3 7 3 -1</entry>
<entry>2.0425</entry>
<entry>3.4406</entry></row>
<row>
<entry>22</entry>
<entry>-7 3 -1 -5 -1 3</entry>
<entry>2.0425</entry>
<entry>3.4408</entry></row>
<row>
<entry>23</entry>
<entry>-7 3 3 7 -5 7</entry>
<entry>2.0490</entry>
<entry>3.4847</entry></row>
<row>
<entry>24</entry>
<entry>-7 5 -7 -3 -3 7</entry>
<entry>2.0491</entry>
<entry>3.5402</entry></row>
<row>
<entry>25</entry>
<entry>-7 -5 3 7 3 -3</entry>
<entry>2.0927</entry>
<entry>3.6761</entry></row>
<row>
<entry>26</entry>
<entry>-7 3 -1 3 -5 -3</entry>
<entry>2.0928</entry>
<entry>3.7384</entry></row>
<row>
<entry>27</entry>
<entry>-7 1 -3 5 7 5</entry>
<entry>2.1111</entry>
<entry>3.7385</entry></row>
<row>
<entry>28</entry>
<entry>-7 5 -3 1 1 -1</entry>
<entry>2.1966</entry>
<entry>4.0684</entry></row>
<row>
<entry>29</entry>
<entry>-7 7 7 -5 3 -1</entry>
<entry>2.1966</entry>
<entry>4.0686</entry></row></tbody></tgroup>
</table>
</tables></p>
<p id="p0096" num="0096">In another conventional solution, a DMRS sequence having a length of 6 is used to generate a DMRS of a PUSCH/PUCCH whose frequency-domain bandwidth includes 12 subcarriers. The DMRS sequence having the length of 6 is mapped to six equi-spaced subcarriers, for example, mapped to bandwidth having a spacing of one subcarrier. To be specific, only one of every two consecutive subcarriers carries a DMRS. The DMRS sequence having the length of 6 is generated based on any group of elements Φ(0),..., Φ(5) in Table 1a. A generation manner includes: Φ(0),..., Φ(5) are modulated by using 8PSK, and are mapped to odd-numbered subcarriers and even-numbered subcarriers in frequency domain in different repetition manners. Assuming that a number of a start subcarrier occupied by the DMRS is 0, the DMRS sequence may be mapped to the even-numbered subcarriers after DFT transform is performed by repetition way as {Φ(0),..., Φ(5), Φ(0),..., Φ(5)}, and the DMRS sequence may be mapped to the odd-numbered subcarriers after DFT transform is performed on by repetition way as {Φ(0),...,Φ(5),―Φ(0),...,―Φ(5)}.
<tables id="tabl0003" num="0003">
<table frame="all">
<title><b>Table 1a</b></title>
<tgroup cols="3">
<colspec colnum="1" colname="col1" colwidth="10mm"/>
<colspec colnum="2" colname="col2" colwidth="23mm"/>
<colspec colnum="3" colname="col3" colwidth="21mm"/>
<thead>
<row>
<entry valign="top">u</entry>
<entry valign="top">Φ(0),..., Φ(5)</entry>
<entry valign="top">PAPR (dB)</entry></row></thead>
<tbody>
<row>
<entry>0</entry>
<entry>-7 5-7-3 -5 5</entry>
<entry>1.4610</entry></row><!-- EPO <DP n="50"> -->
<row>
<entry>1</entry>
<entry>-7 -3 -7 -3 7 5</entry>
<entry>1.4610</entry></row>
<row>
<entry>2</entry>
<entry>-7 -3 3 7 3 -3</entry>
<entry>1.5421</entry></row>
<row>
<entry>3</entry>
<entry>-7 5 -7 -3 7 5</entry>
<entry>1.6373</entry></row>
<row>
<entry>4</entry>
<entry>-7 -3 -7 -3 -5 5</entry>
<entry>1.6373</entry></row>
<row>
<entry>5</entry>
<entry>-7 1 -1 5 -7 5</entry>
<entry>1.6492</entry></row>
<row>
<entry>6</entry>
<entry>-7 5 -1 1 -3 1</entry>
<entry>1.8773</entry></row>
<row>
<entry>7</entry>
<entry>-7 -3 -7 -5 5 1</entry>
<entry>1.8773</entry></row>
<row>
<entry>8</entry>
<entry>-7 -5 3 7 5 -1</entry>
<entry>1.9518</entry></row>
<row>
<entry>9</entry>
<entry>-7 3 -3 -5 -1 7</entry>
<entry>1.9518</entry></row>
<row>
<entry>10</entry>
<entry>-7 1 -3 1 7 5</entry>
<entry>1.9574</entry></row>
<row>
<entry>11</entry>
<entry>-7 -3 -3 -1 -7 5</entry>
<entry>1.9661</entry></row>
<row>
<entry>12</entry>
<entry>-7 -7 -3 1 -3 7</entry>
<entry>1.9661</entry></row>
<row>
<entry>13</entry>
<entry>-7 5 -5 -1 -3 5</entry>
<entry>1.9682</entry></row>
<row>
<entry>14</entry>
<entry>-7 -1 5 7 5 -1</entry>
<entry>1.9911</entry></row>
<row>
<entry>15</entry>
<entry>-7 3 -3 -5 -3 3</entry>
<entry>1.9911</entry></row>
<row>
<entry>16</entry>
<entry>-7 -3 3 -1 -7 -5</entry>
<entry>1.9939</entry></row>
<row>
<entry>17</entry>
<entry>-7 -3 -5 -3 7 3</entry>
<entry>1.9939</entry></row>
<row>
<entry>18</entry>
<entry>-7 -1 -3 -1 7 3</entry>
<entry>2.0232</entry></row>
<row>
<entry>19</entry>
<entry>-7 5 7 -1 -3 3</entry>
<entry>2.0314</entry></row>
<row>
<entry>20</entry>
<entry>-7 -1 -3 5 7 3</entry>
<entry>2.0314</entry></row>
<row>
<entry>21</entry>
<entry>-7 -1 3 7 3 -1</entry>
<entry>2.0425</entry></row>
<row>
<entry>22</entry>
<entry>-7 3 -1 -5 -1 3</entry>
<entry>2.0425</entry></row>
<row>
<entry>23</entry>
<entry>-7 3 3 7 -5 7</entry>
<entry>2.0490</entry></row>
<row>
<entry>24</entry>
<entry>-7 5 -7 -3 -3 7</entry>
<entry>2.0491</entry></row>
<row>
<entry>25</entry>
<entry>-7 -5 3 7 3 -3</entry>
<entry>2.0927</entry></row>
<row>
<entry>26</entry>
<entry>-7 3 -1 3 -5 -3</entry>
<entry>2.0928</entry></row>
<row>
<entry>27</entry>
<entry>-7 1 -3 5 7 5</entry>
<entry>2.1111</entry></row>
<row>
<entry>28</entry>
<entry>-7 5 -3 1 1 -1</entry>
<entry>2.1966</entry></row>
<row>
<entry>29</entry>
<entry>-7 7 7 -5 3 -1</entry>
<entry>2.1966</entry></row></tbody></tgroup>
</table>
</tables><!-- EPO <DP n="51"> --></p>
<p id="p0097" num="0097">A structure of comb-2 used for DMRS mapping in frequency domain is shown in <figref idref="f0002">FIG. 2</figref>. To be specific, for uplink transmission data of a user, a DMRS occupies only odd-numbered subcarriers or even-numbered subcarriers. For a system, uplink transmission data of another user that is scheduled at the same time may occupy the other group of subcarriers.</p>
<p id="p0098" num="0098">Sequences in Table 1a are modulated and then repeated in different manners, and are transformed, through DFT transform, into the frequency domain for frequency-domain filtering. PARP values of sequences are finally obtained, as shown in Table 2a. The foregoing transform process is shown in <figref idref="f0002">FIG. 3</figref>. For example, a modulated base sequence s<sub>N/2</sub> having a length of N/2 is repeated to obtain s<sup>(0)</sup>=[s<sub>N/2</sub>, s<sub>N/2</sub>] and s<sup>(1)</sup>=[s<sub>N/2</sub>, ―s<sub>N/2</sub>], and then DFT transform is performed on s<sup>(0)</sup> and s<sup>(1)</sup>, to obtain s<sup>(0)</sup>=DFT(s<sup>(0)</sup>) and s<sup>(1)</sup>=DFT(s<sup>(1)</sup>), where the sequence s<sup>(0)</sup> having a length of N occupies only even-numbered subcarriers shown in <figref idref="f0002">FIG. 2</figref>, and the sequence s<sup>(1)</sup> having a length of N occupies only odd-numbered subcarriers shown in <figref idref="f0002">FIG. 2</figref>.</p>
<p id="p0099" num="0099">It may be learned from the following Table 2a and the foregoing Table 1a that, after a base sequence S<sub>N/2</sub> having a length of 6 is repeated through {Φ(0),..., Φ(5), ―Φ(0),..., ―Φ(5) } , a PAPR is higher than a PAPR value of the data.
<tables id="tabl0004" num="0004">
<table frame="all">
<title><b>Table 2a</b></title>
<tgroup cols="4">
<colspec colnum="1" colname="col1" colwidth="9mm"/>
<colspec colnum="2" colname="col2" colwidth="24mm"/>
<colspec colnum="3" colname="col3" colwidth="63mm"/>
<colspec colnum="4" colname="col4" colwidth="71mm"/>
<thead>
<row>
<entry valign="top">u</entry>
<entry valign="top">Φ(0),..., Φ(5)</entry>
<entry valign="top">PAPR (dB) of {Φ(0),..., Φ(5), Φ(0),..., Φ(5)}</entry>
<entry valign="top">PAPR (dB) of {Φ(0),..., Φ(5), ―Φ(0),..., ―Φ(5)}</entry></row></thead>
<tbody>
<row>
<entry>0</entry>
<entry>-7 5 -7 -3 -5 5</entry>
<entry>1.4610</entry>
<entry>1.4479</entry></row>
<row>
<entry>1</entry>
<entry>-7 -3 -7 -3 7 5</entry>
<entry>1.4610</entry>
<entry>1.5786</entry></row>
<row>
<entry>2</entry>
<entry>-7 -3 3 7 3 -3</entry>
<entry>1.5421</entry>
<entry>1.7852</entry></row>
<row>
<entry>3</entry>
<entry>-7 5 -7 -3 7 5</entry>
<entry>1.6373</entry>
<entry>2.1837</entry></row>
<row>
<entry>4</entry>
<entry>-7 -3 -7 -3 -5 5</entry>
<entry>1.6373</entry>
<entry>2.2430</entry></row>
<row>
<entry>5</entry>
<entry>-7 1 -1 5 -7 5</entry>
<entry>1.6492</entry>
<entry>2.3795</entry></row>
<row>
<entry>6</entry>
<entry>-7 5 -1 1 -3 1</entry>
<entry>1.8773</entry>
<entry>2.3797</entry></row>
<row>
<entry>7</entry>
<entry>-7 -3 -7 -5 5 1</entry>
<entry>1.8773</entry>
<entry>2.3797</entry></row>
<row>
<entry>8</entry>
<entry>-7 -5 3 7 5 -1</entry>
<entry>1.9518</entry>
<entry>2.3822</entry></row>
<row>
<entry>9</entry>
<entry>-7 3-3-5-1 7</entry>
<entry>1.9518</entry>
<entry>2.3905</entry></row>
<row>
<entry>10</entry>
<entry>-7 1 -3 1 7 5</entry>
<entry>1.9574</entry>
<entry>2.3905</entry></row><!-- EPO <DP n="52"> -->
<row>
<entry>11</entry>
<entry>-7 -3 -3 -1 -7 5</entry>
<entry>1.9661</entry>
<entry>2.3905</entry></row>
<row>
<entry>12</entry>
<entry>-7 -7 -3 1 -3 7</entry>
<entry>1.9661</entry>
<entry>2.4530</entry></row>
<row>
<entry>13</entry>
<entry>-7 5 -5 -1 -3 5</entry>
<entry>1.9682</entry>
<entry>2.4702</entry></row>
<row>
<entry>14</entry>
<entry>-7 -1 5 7 5 -1</entry>
<entry>1.9911</entry>
<entry>2.5254</entry></row>
<row>
<entry>15</entry>
<entry>-7 3 -3 -5 -3 3</entry>
<entry>1.9911</entry>
<entry>2.5254</entry></row>
<row>
<entry>16</entry>
<entry>-7 -3 3 -1 -7 -5</entry>
<entry>1.9939</entry>
<entry>2.6289</entry></row>
<row>
<entry>17</entry>
<entry>-7 -3 -5 -3 7 3</entry>
<entry>1.9939</entry>
<entry>2.6671</entry></row>
<row>
<entry>18</entry>
<entry>-7 -1 -3 -1 7 3</entry>
<entry>2.0232</entry>
<entry>2.6671</entry></row>
<row>
<entry>19</entry>
<entry>-7 5 7 -1 -3 3</entry>
<entry>2.0314</entry>
<entry>2.9176</entry></row>
<row>
<entry>20</entry>
<entry>-7 -1 -3 5 7 3</entry>
<entry>2.0314</entry>
<entry>3.0113</entry></row>
<row>
<entry>21</entry>
<entry>- 7 -1 3 7 3 -1</entry>
<entry>2.0425</entry>
<entry>3.4406</entry></row>
<row>
<entry>22</entry>
<entry>-7 3 -1 -5 -1 3</entry>
<entry>2.0425</entry>
<entry>3.4408</entry></row>
<row>
<entry>23</entry>
<entry>-7 3 3 7 -5 7</entry>
<entry>2.0490</entry>
<entry>3.4847</entry></row>
<row>
<entry>24</entry>
<entry>-7 5 -7 -3 -3 7</entry>
<entry>2.0491</entry>
<entry>3.5402</entry></row>
<row>
<entry>25</entry>
<entry>-7 -5 3 7 3 -3</entry>
<entry>2.0927</entry>
<entry>3.6761</entry></row>
<row>
<entry>26</entry>
<entry>-7 3 -1 3 -5 -3</entry>
<entry>2.0928</entry>
<entry>3.7384</entry></row>
<row>
<entry>27</entry>
<entry>-7 1 -3 5 7 5</entry>
<entry>2.1111</entry>
<entry>3.7385</entry></row>
<row>
<entry>28</entry>
<entry>-7 5 -3 1 1 -1</entry>
<entry>2.1966</entry>
<entry>4.0684</entry></row>
<row>
<entry>29</entry>
<entry>-7 7 7 -5 3 -1</entry>
<entry>2.1966</entry>
<entry>4.0686</entry></row></tbody></tgroup>
</table>
</tables></p>
<p id="p0100" num="0100"><figref idref="f0003">FIG. 4</figref> is a schematic flowchart of signal processing according to an embodiment of this application.</p>
<p id="p0101" num="0101">In this embodiment of this application, a transmit end may be a terminal, and a corresponding receive end is a network device; or a transmit end is a network device, and a receive end is a terminal. The following embodiment is described by using an example in which the transmit end is a terminal, and the receive end is a network device. This is not limited in this application.</p>
<p id="p0102" num="0102">401: The terminal determines a first frequency-domain resource, where the first frequency-domain resource includes K subcarriers each having a subcarrier number of k, k= u+L<sup>∗</sup>n+delta, n=0, 1, ..., K―1, L is an integer greater than or equal to 2, delta∈{0, 1, ..., L-1}, u is an integer, and the subcarrier numbers are sequentially numbered in ascending or descending order of frequencies.<!-- EPO <DP n="53"> --></p>
<p id="p0103" num="0103">Specifically, when n is 0, 1, ..., or K―1, subcarriers obtained based on k=u+L<sup>∗</sup>n+delta may constitute a comb structure. k is the subcarrier number, u may be the subcarrier number of the first subcarrier in the K subcarriers, and a value of L may be determined based on the comb (comb) structure. For example, for a comb-2 structure (as shown in <figref idref="f0002">FIG. 2</figref>), L is 2. For a comb-4 structure (as shown in <figref idref="f0004">FIG. 5</figref>), L is 4. A delta value may be any one of 0, 1, ..., and L-1. The obtained first frequency-domain resource varies as the delta value varies. In other words, different delta values correspond to subcarrier combinations on different combs. For example, as shown in <figref idref="f0002">FIG. 2</figref>, when delta=0, the first frequency-domain resource may include a subcarrier corresponding to a comb 1. When delta=1, the first frequency-domain resource may include a subcarrier corresponding to a comb 2. That n is 0, 1, ..., or K―1 means that n is valued 0, 1, ..., or K―1.</p>
<p id="p0104" num="0104">It should be understood that, in this embodiment of this application, a frequency-domain resource is described by using a "subcarrier" as an example, but the frequency-domain resource may alternatively be a carrier or another frequency-domain unit. This is not limited in this application.</p>
<p id="p0105" num="0105">It should be further understood that, the value of L varies as the comb structure comb-L varies, and may be another value. This is not limited in this application.</p>
<p id="p0106" num="0106">It should be understood that, the foregoing step of determining the first sequence may be optional, or may be replaced with another step. In an embodiment, before the reference signal is generated, the method further includes: determining a first sequence based on the delta value. Specifically, the first sequence is determined based on a mapping relationship. The mapping relationship may be stored after being configured by another device or apparatus, or may be predefined. The mapping relationship may be a mapping relationship between a delta and the first sequence, or may be a parameter in a generation formula. In another embodiment, the first sequence may alternatively be directly generated based on the delta value. The first sequence is associated with the delta value.</p>
<p id="p0107" num="0107">In another embodiment, the reference signal is sent on the first frequency-domain resource. The first frequency-domain resource includes a first subcarrier set, and there is a fixed subcarrier spacing between subcarriers in the first subcarrier set, for example, the first subcarrier set is in the foregoing comb-shaped form. For example, a subcarrier spacing in the first subcarrier set is one subcarrier. Using 6 as an example, the first subcarrier set is {a0, a1, a2, a3, a4, a5}. If the spacing is one subcarrier, subcarriers that are in the first subcarrier set and arranged in ascending order in frequency domain may be {a0, b, a1, c, a2, d, a3, e, a4, f, a5, g}, where b, c, d, e, f, and g are other subcarriers. When the first frequency-domain resource is determined, a used first sequence is determined based on an offset value of the first subcarrier set. The offset value may be a relative offset value or an absolute offset value. In an embodiment, if b, c, d, e, f, and g belong to a second subcarrier set, and all or some of b, c, d, e, f, and g constitute a second resource. That is, b, c, d, e, f, and g are {b0, b1, b2, b3, b4, b5} respectively. The subcarriers that are in the subcarrier set and<!-- EPO <DP n="54"> --> arranged in ascending order in frequency domain are {a0, b0, a1, b1, a2, b2, a3, b3, a4, b4, a5, b5}. Based on the relative offset value, because a position of a start subcarrier in the first subcarrier set is a0, and a position of a start subcarrier in the second subcarrier set is b0, a0 may be configured to generate the first sequence, and b0 may be configured to generate a second sequence (which is similar to the first sequence and is equivalent to a first sequence of b0). That is, the first sequence and the second sequence are determined based on a relative position of a start position of the first frequency-domain resource. Because the two subcarrier sets are arranged in a comb-shaped manner, the first sequence and the second sequence may alternatively be directly determined based on positions of the two subcarrier sets. The relative position may be determined through comparison, and the absolute position may be determined through calculation, for example, may be determined directly based on a parameter in a preset calculation rule (similar to delta in the foregoing embodiment), or may be determined directly based on an association relationship between a parameter and the first sequence. For example, in this embodiment, k=u+L<sup>∗</sup>n+delta; when delta=0, the subcarriers correspond to the first sequence; and when delta=1, the subcarriers correspond to the second sequence. In this case, when (or before) sending the reference signal, the transmit end may determine, directly based on a resource corresponding to each reference signal in the foregoing formula, a position and a first sequence, where the first sequence is used at the position to generate the reference signal.</p>
<p id="p0108" num="0108">In another embodiment, calculation may be performed based on an offset value. For uplink data transmission, for example, when transmission precoding is disabled,
<ul id="ul0033" list-style="none" compact="compact">
<li>a transmission sequence r(m) may be first mapped to a median value <maths id="math0044" num=""><math display="inline"><msubsup><mover accent="true"><mi>a</mi><mo>˜</mo></mover><mrow><mi>k</mi><mo>,</mo><mi>l</mi></mrow><mfenced><msub><mover accent="true"><mi>p</mi><mo>˜</mo></mover><mi>j</mi></msub><mi>μ</mi></mfenced></msubsup></math><img id="ib0129" file="imgb0129.tif" wi="11" he="7" img-content="math" img-format="tif" inline="yes"/></maths> based on the following relationship: <maths id="math0045" num=""><math display="block"><msubsup><mover accent="true"><mi>a</mi><mo>˜</mo></mover><mrow><mi>k</mi><mo>,</mo><mi>l</mi></mrow><mfenced><msub><mover accent="true"><mi>p</mi><mo>˜</mo></mover><mi>j</mi></msub><mi>μ</mi></mfenced></msubsup><mo>=</mo><msub><mi>w</mi><mi mathvariant="normal">f</mi></msub><mfenced separators=""><mi>k</mi><mo>′</mo></mfenced><msub><mi>w</mi><mi mathvariant="normal">t</mi></msub><mfenced separators=""><mi>l</mi><mo>′</mo></mfenced><mi>r</mi><mfenced separators=""><mn>2</mn><mi>n</mi><mo>+</mo><mi>k</mi><mo>′</mo></mfenced></math><img id="ib0130" file="imgb0130.tif" wi="61" he="8" img-content="math" img-format="tif"/></maths> <maths id="math0046" num=""><math display="block"><mi>k</mi><mo>=</mo><mrow><mo>{</mo><mtable><mtr><mtd><mrow><mn>4</mn><mi>n</mi><mo>+</mo><mn>2</mn><mi>k</mi><mo>′</mo><mo>+</mo><mi>Δ</mi></mrow></mtd><mtd><mrow><mi>Configuration</mi><mspace width="1ex"/><mi>type</mi><mspace width="1ex"/><mn>1</mn></mrow></mtd></mtr><mtr><mtd><mrow><mn>6</mn><mi>n</mi><mo>+</mo><mi>k</mi><mo>′</mo><mo>+</mo><mi>Δ</mi></mrow></mtd><mtd><mrow><mi>Configuration</mi><mspace width="1ex"/><mi>type</mi><mspace width="1ex"/><mn>2</mn></mrow></mtd></mtr></mtable></mrow></math><img id="ib0131" file="imgb0131.tif" wi="76" he="14" img-content="math" img-format="tif"/></maths> <maths id="math0047" num=""><math display="block"><mi>k</mi><mo>′</mo><mo>=</mo><mn>0,1</mn></math><img id="ib0132" file="imgb0132.tif" wi="16" he="5" img-content="math" img-format="tif"/></maths> <maths id="math0048" num=""><math display="block"><mi>l</mi><mo>=</mo><mover accent="true"><mi>l</mi><mo>‾</mo></mover><mo>+</mo><mi>l</mi><mo>′</mo></math><img id="ib0133" file="imgb0133.tif" wi="17" he="6" img-content="math" img-format="tif"/></maths> <maths id="math0049" num=""><math display="block"><mi>n</mi><mo>=</mo><mn>0,1</mn><mo>,</mo><mo>…</mo></math><img id="ib0134" file="imgb0134.tif" wi="19" he="5" img-content="math" img-format="tif"/></maths> <maths id="math0050" num=""><math display="block"><mi>j</mi><mo>=</mo><mn>0,1</mn><mo>,</mo><mo>…</mo><mi>υ</mi><mo>−</mo><mn>1</mn></math><img id="ib0135" file="imgb0135.tif" wi="77" he="7" img-content="math" img-format="tif"/></maths> and</li>
<li>when the transmission precoding is enabled:<br/>
the transmission sequence r(m) may be first mapped to a median value <maths id="math0051" num=""><math display="inline"><msubsup><mover accent="true"><mi>a</mi><mo>˜</mo></mover><mrow><mi>k</mi><mo>,</mo><mi>l</mi></mrow><mfenced><msub><mover accent="true"><mi>p</mi><mo>˜</mo></mover><mi>j</mi></msub><mi>μ</mi></mfenced></msubsup></math><img id="ib0136" file="imgb0136.tif" wi="12" he="8" img-content="math" img-format="tif" inline="yes"/></maths> based on the following relationship:<!-- EPO <DP n="55"> --> <maths id="math0052" num=""><math display="block"><msubsup><mover accent="true"><mi>a</mi><mo>˜</mo></mover><mrow><mi>k</mi><mo>,</mo><mi>l</mi></mrow><mfenced><msub><mover accent="true"><mi>p</mi><mo>˜</mo></mover><mn>0</mn></msub><mi>μ</mi></mfenced></msubsup><mo>=</mo><msub><mi>w</mi><mi mathvariant="normal">f</mi></msub><mfenced separators=""><mi>k</mi><mo>′</mo></mfenced><msub><mi>w</mi><mi mathvariant="normal">t</mi></msub><mfenced separators=""><mi>l</mi><mo>′</mo></mfenced><mi>r</mi><mfenced separators=""><mn>2</mn><mi>n</mi><mo>+</mo><mi>k</mi><mo>′</mo></mfenced></math><img id="ib0137" file="imgb0137.tif" wi="60" he="7" img-content="math" img-format="tif"/></maths> <maths id="math0053" num=""><math display="block"><mi>k</mi><mo>=</mo><mn>4</mn><mi>n</mi><mo>+</mo><mn>2</mn><mi>k</mi><mo>′</mo><mo>+</mo><mi>Δ</mi></math><img id="ib0138" file="imgb0138.tif" wi="31" he="5" img-content="math" img-format="tif"/></maths> <maths id="math0054" num=""><math display="block"><mi>k</mi><mo>′</mo><mo>=</mo><mn>0,1</mn></math><img id="ib0139" file="imgb0139.tif" wi="16" he="5" img-content="math" img-format="tif"/></maths> <maths id="math0055" num=""><math display="block"><mi>l</mi><mo>=</mo><mover accent="true"><mi>l</mi><mo>‾</mo></mover><mo>+</mo><mi>l</mi><mo>′</mo></math><img id="ib0140" file="imgb0140.tif" wi="17" he="6" img-content="math" img-format="tif"/></maths> <maths id="math0056" num=""><math display="block"><mi>n</mi><mo>=</mo><mn>0,1</mn><mo>,</mo><mo>…</mo></math><img id="ib0141" file="imgb0141.tif" wi="19" he="5" img-content="math" img-format="tif"/></maths></li>
</ul></p>
<p id="p0109" num="0109">A manner of mapping a sequence to a frequency-domain resource in the present invention is applicable to the foregoing configuration type 1.</p>
<p id="p0110" num="0110">Optionally, the median value is a signal, and after being transformed, the signal is mapped to a time-frequency resource including k subcarriers and one OFDM symbol.</p>
<p id="p0111" num="0111">The configuration type (configuration type) may be configured by using higher layer signaling. For example, for <i>DMRS-UplinkConfig,</i> both <i>k'</i> and Δ correspond to <i>p̃</i><sub>0</sub>, ... , <i>p̃</i><sub><i>v</i>―1</sub>. (In an embodiment, Δ in the formula is delta in the foregoing embodiment). When k' or Δ does not correspond to <i>p̃</i><sub>0</sub>, ... , <i>p̃</i><sub><i>v</i>―1</sub>, a value of Δ may satisfy the following relationship (in an embodiment, for the first configuration manner type 1):
<tables id="tabl0005" num="0005">
<table frame="all">
<tgroup cols="7">
<colspec colnum="1" colname="col1" colwidth="8mm"/>
<colspec colnum="2" colname="col2" colwidth="21mm"/>
<colspec colnum="3" colname="col3" colwidth="8mm"/>
<colspec colnum="4" colname="col4" colwidth="14mm"/>
<colspec colnum="5" colname="col5" colwidth="13mm"/>
<colspec colnum="6" colname="col6" colwidth="13mm"/>
<colspec colnum="7" colname="col7" colwidth="11mm"/>
<thead>
<row rowsep="0">
<entry morerows="1" rowsep="1" valign="top"><i>p̃</i></entry>
<entry morerows="1" rowsep="1" valign="top">CDM group</entry>
<entry morerows="1" rowsep="1" valign="top">Δ</entry>
<entry colsep="0" valign="top"><i>w</i><sub>f</sub>(<i>k</i>')</entry>
<entry valign="top"/>
<entry colsep="0" valign="top"><i>w</i><sub>t</sub>(<i>l</i>')</entry>
<entry valign="top"/></row>
<row>
<entry valign="top"><i>k' =</i> 0</entry>
<entry valign="top"><i>k'</i> = 1</entry>
<entry valign="top"><i>l</i>' = 0</entry>
<entry valign="top"><i>l</i>' = 1</entry></row></thead>
<tbody>
<row>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>+1</entry></row>
<row>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>+1</entry>
<entry>-1</entry>
<entry>+1</entry>
<entry>+1</entry></row>
<row>
<entry>2</entry>
<entry>1</entry>
<entry>1</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>+1</entry></row>
<row>
<entry>3</entry>
<entry>1</entry>
<entry>1</entry>
<entry>+1</entry>
<entry>-1</entry>
<entry>+1</entry>
<entry>+1</entry></row>
<row>
<entry>4</entry>
<entry>0</entry>
<entry>0</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>-1</entry></row>
<row>
<entry>5</entry>
<entry>0</entry>
<entry>0</entry>
<entry>+1</entry>
<entry>-1</entry>
<entry>+1</entry>
<entry>-1</entry></row>
<row>
<entry>6</entry>
<entry>1</entry>
<entry>1</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>-1</entry></row>
<row>
<entry>7</entry>
<entry>1</entry>
<entry>1</entry>
<entry>+1</entry>
<entry>-1</entry>
<entry>+1</entry>
<entry>-1</entry></row></tbody></tgroup>
</table>
</tables></p>
<p id="p0112" num="0112">(In an embodiment, for the first configuration manner type 2):
<tables id="tabl0006" num="0006">
<table frame="all">
<tgroup cols="7">
<colspec colnum="1" colname="col1" colwidth="9mm"/>
<colspec colnum="2" colname="col2" colwidth="21mm"/>
<colspec colnum="3" colname="col3" colwidth="8mm"/>
<colspec colnum="4" colname="col4" colwidth="14mm"/>
<colspec colnum="5" colname="col5" colwidth="13mm"/>
<colspec colnum="6" colname="col6" colwidth="13mm"/>
<colspec colnum="7" colname="col7" colwidth="11mm"/>
<thead>
<row rowsep="0">
<entry morerows="1" rowsep="1" valign="top"><i>p̃</i></entry>
<entry morerows="1" rowsep="1" valign="top">CDM group</entry>
<entry morerows="1" rowsep="1" valign="top">Δ</entry>
<entry colsep="0" valign="top"><i>w</i><sub>f</sub> (<i>k'</i>)</entry>
<entry valign="top"/>
<entry colsep="0" valign="top"><i>w</i><sub>t</sub> (/')</entry>
<entry valign="top"/></row>
<row>
<entry valign="top"><i>k' =</i> 0</entry>
<entry valign="top"><i>k'</i> = 1</entry>
<entry valign="top"><i>l</i>' = 0</entry>
<entry valign="top"><i>l</i>' = 1</entry></row></thead>
<tbody>
<row>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>+1</entry></row>
<row>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>+1</entry>
<entry>-1</entry>
<entry>+1</entry>
<entry>+1</entry></row>
<row>
<entry>2</entry>
<entry>1</entry>
<entry>2</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>+1</entry></row>
<row>
<entry>3</entry>
<entry>1</entry>
<entry>2</entry>
<entry>+1</entry>
<entry>-1</entry>
<entry>+1</entry>
<entry>+1</entry></row><!-- EPO <DP n="56"> -->
<row>
<entry>4</entry>
<entry>2</entry>
<entry>4</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>+1</entry></row>
<row>
<entry>5</entry>
<entry>2</entry>
<entry>4</entry>
<entry>+1</entry>
<entry>-1</entry>
<entry>+1</entry>
<entry>+1</entry></row>
<row>
<entry>6</entry>
<entry>0</entry>
<entry>0</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>-1</entry></row>
<row>
<entry>7</entry>
<entry>0</entry>
<entry>0</entry>
<entry>+1</entry>
<entry>-1</entry>
<entry>+1</entry>
<entry>-1</entry></row>
<row>
<entry>8</entry>
<entry>1</entry>
<entry>2</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>-1</entry></row>
<row>
<entry>9</entry>
<entry>1</entry>
<entry>2</entry>
<entry>+1</entry>
<entry>-1</entry>
<entry>+1</entry>
<entry>-1</entry></row>
<row>
<entry>10</entry>
<entry>2</entry>
<entry>4</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>+1</entry>
<entry>-1</entry></row>
<row>
<entry>11</entry>
<entry>2</entry>
<entry>4</entry>
<entry>+1</entry>
<entry>-1</entry>
<entry>+1</entry>
<entry>-1</entry></row></tbody></tgroup>
</table>
</tables></p>
<p id="p0113" num="0113">Optionally, downlink data is also applicable to the foregoing method.</p>
<p id="p0114" num="0114">Optionally, based on the foregoing association relationship, in this embodiment of the present invention, the first sequence is directly determined based on the foregoing <i><sup>p̃</sup></i> and CDM group.</p>
<p id="p0115" num="0115">Optionally, based on the foregoing association relationship, in this embodiment of the present invention, the first sequence is determined directly based on a time-frequency resource of the first signal.</p>
<p id="p0116" num="0116">Optionally, there is at least one first sequence group. In a same sequence length, a first sequence group includes two different sequences.</p>
<p id="p0117" num="0117">In an embodiment, L=2, K=6, n=0, 1, 2, 3, 4, and 5, and delta=0.</p>
<p id="p0118" num="0118">Specifically, L=2 indicates that the comb structure is the comb-2. K=6 indicates that the first frequency-domain resource includes six subcarriers. With reference to n=0, 1, 2, 3, 4, and 5, delta=0, and k=u+L<sup>∗</sup>n+delta, the terminal may determine that the first frequency domain includes subcarriers at odd-numbered positions, namely, combs 1 in <figref idref="f0002">FIG. 2</figref>. In addition, based on K=6 and L=2, it may be further learned that the first frequency-domain resource may include subcarriers at odd-numbered positions in 12 subcarriers in one RB.</p>
<p id="p0119" num="0119">In another embodiment, if L=2, K=6, n=0, 1, 2, 3, 4, and 5, and delta=1, the first frequency-domain resource may include subcarriers shown by combs 2 in <figref idref="f0002">FIG. 2</figref>.</p>
<p id="p0120" num="0120">402: The terminal determines the first sequence based on the delta value, where the first sequence varies as the delta values varies, and a length of the first sequence is K.</p>
<p id="p0121" num="0121">Specifically, that a length of the first sequence is K indicates that the first sequence includes K elements. The different delta values may correspond to different sequences. For example, a plurality of delta values may have a one-to-one mapping relationship with a plurality of sequences. In this case, the terminal may determine, based on the<!-- EPO <DP n="57"> --> mapping relationship, a sequence corresponding to a delta value. It should be noted that the mapping relationship may be represented in a form of a list.</p>
<p id="p0122" num="0122">Optionally, the first sequence is neither a sequence modulated by using BPSK nor a sequence modulated by using pi/2 BPSK.</p>
<p id="p0123" num="0123">Optionally, the first sequence is a sequence modulated by using any one of 8PSK, 16PSK, or 32PSK.</p>
<p id="p0124" num="0124">Specifically, different modulation schemes correspond to different quantities of sequences. A quantity of sequences corresponding to any one modulation scheme of 8PSK, 16PSK, or 32PSK is greater than a quantity of sequences corresponding to the modulation scheme pi/2 BPSK. This helps select sequences with low correlations for frequency-domain resources on different combs, to improve efficiency of communication on the frequency-domain resources on different combs.</p>
<p id="p0125" num="0125">In an embodiment, the terminal may determine the first sequence group based on the delta value.</p>
<p id="p0126" num="0126">Specifically, frequency-domain resources corresponding to different delta values may be different subcarrier combinations. For example, as shown in <figref idref="f0002">FIG. 2</figref>, if delta=0, the first frequency-domain resource includes the subcarriers shown by the combs 1; and if delta=1, the first frequency-domain resource includes the subcarriers shown by the combs 2. A plurality of delta values have a mapping relationship with a plurality of sequence groups. In this case, the terminal may determine, based on the mapping relationship, the first sequence group corresponding to a value (for example, a first delta value).</p>
<p id="p0127" num="0127">Different modulation schemes correspond to different quantities of sequences. A quantity of sequences corresponding to any one modulation scheme of 8PSK, 16PSK, or 32PSK is greater than a quantity of sequences corresponding to the modulation scheme pi/2 BPSK. In this case, PAPRs of DMRS sequences carried on frequency-domain resources on different combs are relatively low, so that out-of-band spurious emission and in-band signal loss are avoided, or uplink coverage is improved. In addition, it may further be ensured that characteristics such as an auto-correlation and frequency-domain flatness of DMRS sequences carried on the frequency-domain resources of different combs are relatively low, so that DMRS-based channel estimation performance is improved.</p>
<p id="p0128" num="0128">In an embodiment, the terminal may determine the first sequence based on the delta value and a cell identifier or a sequence group identifier.</p>
<p id="p0129" num="0129">Specifically, frequency-domain resources corresponding to different delta values may be different subcarrier combinations. For example, as shown in <figref idref="f0002">FIG. 2</figref>, if delta=0, the first frequency-domain resource includes the subcarriers shown by the combs 1; and if delta=1, the first frequency-domain resource includes the subcarriers shown by the combs 2. A plurality of delta values have a mapping relationship with a plurality of sequence sets. The mapping relationship may be predefined. In this way, the terminal may determine, based on the mapping relationship<!-- EPO <DP n="58"> --> and a delta value (for example, a first delta value) at a current transmission moment, a sequence set in the plurality of sequence sets. The sequence set corresponds to the first delta value. The terminal may determine, based on the cell identifier or the sequence group identifier, a sequence in the sequence set as a sequence for generating a DMRS.</p>
<p id="p0130" num="0130">Optionally, the terminal may determine the first sequence based on the cell identifier or the sequence group identifier.</p>
<p id="p0131" num="0131">Specifically, both the terminal and the network device prestore a plurality of sequence groups, and each sequence group corresponds to a cell identifier or a sequence group identifier. The terminal may determine, based on configuration information by the network device, a sequence group used to transmit a DMRS, where the configuration information includes the cell identifier or the sequence group identifier. Therefore, different cells may use different sequence groups, thereby reducing inter-cell signal interference. Further, a plurality of delta values have a predefined mapping relationship with a plurality of sequences in a sequence group, and the terminal determines, based on the delta value, a sequence in the sequence group as a sequence for generating the DMRS.</p>
<p id="p0132" num="0132">Optionally, the terminal may determine the first sequence based on the cell identifier or the sequence group identifier.</p>
<p id="p0133" num="0133">Specifically, the terminal may group sequences having a same cell identifier into one sequence group. In other words, different sequence groups serve different cells respectively. Alternatively, the terminal may agree on a sequence group identifier with the network device, and different sequence group identifiers correspond to different sequence groups. In this way, the terminal may determine a corresponding sequence group based on the sequence group identifier configured by the network device. To be specific, the terminal may select a sequence from the proper sequence group to generate the reference signal, so that the first signal can be accurately demodulated. This improves data transmission quality.</p>
<p id="p0134" num="0134">Optionally, the terminal receives indication information. The indication information is used to indicate a sequence that is in each of at least two sequence groups and used to generate the reference signal. Correspondingly, the network device sends the indication information.</p>
<p id="p0135" num="0135">Specifically, the network device may send the indication information to the terminal, to indicate the sequence in each of the at least two sequence groups by using the indication information, that is, further notify the terminal to use the sequence in the sequence group. In this way, the terminal generates the reference signal based on the sequence indicated by the indication information. Compared with a manner in which indication information is configured to select a sequence from each sequence group, in this embodiment of this application, signaling overheads can be reduced. It should be understood that step 401 and step 402 are two optional steps.</p>
<p id="p0136" num="0136">403: The terminal generates the reference signal of the first signal based on the first sequence, where the<!-- EPO <DP n="59"> --> first signal is a signal modulated by using pi/2 BPSK.</p>
<p id="p0137" num="0137">Specifically, the terminal may map K elements in the first sequence to K subcarriers respectively on the first frequency-domain resource, to obtain the reference signal.</p>
<p id="p0138" num="0138">It should be noted that, reference signals mapped to frequency-domain resources corresponding to different delta values may be different reference signals of a same terminal, or may be reference signals of different terminals. This is not limited in this application.</p>
<p id="p0139" num="0139">It should be understood that, the first signal may be data or signaling modulated by using pi/2 BPSK. This is not limited in this application.</p>
<p id="p0140" num="0140">It should be further understood that, the reference signal may be a demodulation reference signal (demodulation reference signal, DMRS), UCI, an SRS, and a PTRS, or may be acknowledgment (acknowledgment, ACK) information, negative acknowledgment (negative acknowledgment, NACK) information, or uplink scheduling request (scheduling request, SR) information. This is not limited in this application.</p>
<p id="p0141" num="0141">Optionally, when delta=0, the generating the reference signal of the first signal includes:
<ul id="ul0034" list-style="none" compact="compact">
<li>performing discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)} with t=0, ..., L<sup>∗</sup>K―1, where when t=0, 1, ..., L<sup>∗</sup>K―1, z(t)=x(t mod K), and x(t) represents the first sequence; and</li>
<li>mapping elements numbered L<sup>∗</sup>p+delta in the sequence {f(t)} to subcarriers each having the subcarrier number of u+L<sup>∗</sup>p+delta respectively, to generate the reference signal, where p=0, ..., K―1.</li>
</ul></p>
<p id="p0142" num="0142">Optionally, when L=2 and delta=1, the generating the reference signal of the first signal includes:
<ul id="ul0035" list-style="none" compact="compact">
<li>performing discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)} with t=0, ..., L<sup>∗</sup>K―1, where when t=0, ..., K―1, z(t)=x(t), when t=K, ..., L<sup>∗</sup>K―1, z(t)=-x(t mod K), and x(t) represents the first sequence; and</li>
<li>mapping elements numbered L<sup>∗</sup>p+delta in the sequence {f(t)} to subcarriers each having the subcarrier number of L<sup>∗</sup>p+delta respectively, to generate the reference signal, where p=0, ..., K―1.</li>
</ul></p>
<p id="p0143" num="0143">Optionally, when L=4, the generating the reference signal of the first signal includes:
<ul id="ul0036" list-style="none" compact="compact">
<li>performing discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)} with t=0, ..., 4K-1, where when t=0, 1, ..., 4K-1, <maths id="math0057" num=""><math display="inline"><mi>z</mi><mfenced><mi>t</mi></mfenced><mo>=</mo><msub><mi>w</mi><mi mathvariant="italic">delta</mi></msub><mfenced separators=""><mo>⌊</mo><mfrac><mi>t</mi><mi>K</mi></mfrac><mo>⌋</mo></mfenced><mi>x</mi><mfenced separators=""><mi>t</mi><mspace width="1ex"/><mi>mod</mi><mspace width="1ex"/><mi>K</mi></mfenced></math><img id="ib0142" file="imgb0142.tif" wi="50" he="11" img-content="math" img-format="tif" inline="yes"/></maths> , where w<sub>0</sub> = (1,1,1,1), w<sub>1</sub> = (1,-1,1 - 1), w<sub>2</sub> = (1,1, -1, -1), w<sub>3</sub> = (1,-1,-1,1), [<i>c</i>] represents rounding down of c, and x(t) represents the first sequence, where in another embodiment, <i>w</i><sub>0</sub> = (1, 1, 1, 1) , <i>w</i><sub>1</sub> =(1,<i>j,</i> ―1, ―<i>j)</i>, <i>w</i><sub>2</sub> = (1, ―1, 1, ―1), and <i>w</i><sub>3</sub> = (1, <i>―j,</i> ―1, <i>j</i>); and<!-- EPO <DP n="60"> --></li>
<li>mapping elements numbered 4p+delta in the sequence {f(t)} to subcarriers each having the subcarrier number of u+L<sup>∗</sup>p+delta respectively, to generate the reference signal, where p=0, ..., K―1, and w<sub>delta</sub> may represent a different OCC value when the delta varies.</li>
</ul></p>
<p id="p0144" num="0144">Optionally, the generating the reference signal of the first signal includes:
<ul id="ul0037" list-style="none" compact="compact">
<li>performing discrete Fourier transform on elements in a sequence {x(t)} to obtain a sequence {f(t)} with t=0, ..., K―1, where x(t) represents the first sequence; and</li>
<li>mapping elements numbered p in the sequence {f(t)} to subcarriers each having the subcarrier number of u+L<sup>∗</sup>p+delta respectively, to generate the reference signal, where p=0, ..., K―1.</li>
</ul></p>
<p id="p0145" num="0145">Specifically, the terminal and the network device may pre-agree on sequence combinations corresponding to different modulation schemes. For example, 30 sequences are selected from a plurality of sequences modulated by using 16 PSK, and the 30 sequences may be sequences used to generate reference signals with relatively high performance. The terminal then selects the first sequence from the sequence combination to generate the reference signal. Therefore, efficiency of communication between the terminal and the network device is improved. Correspondingly, the terminal or the network device may alternatively select 30 sequences from a plurality of sequences modulated by using 8PSK, or may alternatively select 30 sequences from a plurality of sequences modulated by using 32PSK. Herein, a principle of x<i><sub>n</sub></i> obtained by using the following two formulas may be further described. In this case, for the comb-2 structure, the terminal may determine, based on a preset condition and a sequence {s(n)}, the first sequence used to generate the reference signal transmitted on the combs 1 in the comb-2.</p>
<p id="p0146" num="0146">Optionally, when delta=0, the method further includes:
<ul id="ul0038" list-style="none">
<li>determining the first sequence {x(n)} based on the preset condition and the sequence {s(n)}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0058" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>16</mn></mfrac></msup></math><img id="ib0143" file="imgb0143.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0059" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0144" file="imgb0144.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</li>
<li>the sequence {s(n)} includes at least one of the following sequences:
<img id="ib0145" file="imgb0145.tif" wi="165" he="53" img-content="dna" img-format="tif"/>
or</li>
</ul><!-- EPO <DP n="61"> -->
<img id="ib0146" file="imgb0146.tif" wi="165" he="184" img-content="dna" img-format="tif"/></p>
<p id="p0147" num="0147">Optionally, when delta=1, the method further includes:
<ul id="ul0039" list-style="none" compact="compact">
<li>determining the first sequence based on the preset condition and the sequence {s(n)}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0060" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>16</mn></mfrac></msup></math><img id="ib0147" file="imgb0147.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M ∈ {0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0061" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0148" file="imgb0148.tif" wi="15" he="7" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {s(n)} includes at least one of the following sequences:
<img id="ib0149" file="imgb0149.tif" wi="151" he="5" img-content="dna" img-format="tif"/><!-- EPO <DP n="62"> -->
<img id="ib0150" file="imgb0150.tif" wi="165" he="37" img-content="dna" img-format="tif"/>
or
<img id="ib0151" file="imgb0151.tif" wi="165" he="168" img-content="dna" img-format="tif"/></li>
</ul></p>
<p id="p0148" num="0148">Optionally, when delta=0, the method further includes:
<ul id="ul0040" list-style="none" compact="compact">
<li>determining the first sequence {x(n)} based on the preset condition and the sequence {s(n)}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0062" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>16</mn></mfrac></msup></math><img id="ib0152" file="imgb0152.tif" wi="25" he="10" img-content="math" img-format="tif" inline="yes"/></maths>, M ∈ {0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0063" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0153" file="imgb0153.tif" wi="15" he="7" img-content="math" img-format="tif" inline="yes"/></maths>; and<!-- EPO <DP n="63"> --></li>
<li>the sequence {s(n)} includes at least one of the following sequences:
<img id="ib0154" file="imgb0154.tif" wi="165" he="54" img-content="dna" img-format="tif"/>
or
<img id="ib0155" file="imgb0155.tif" wi="165" he="168" img-content="dna" img-format="tif"/></li>
</ul></p>
<p id="p0149" num="0149">Optionally, when delta=1, the method further includes:
<ul id="ul0041" list-style="none" compact="compact">
<li>determining the first sequence based on the preset condition and the sequence {s(n)}, where the preset<!-- EPO <DP n="64"> --> condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0064" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>16</mn></mfrac></msup></math><img id="ib0156" file="imgb0156.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0065" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0157" file="imgb0157.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {s(n)} includes at least one of the following sequences:
<img id="ib0158" file="imgb0158.tif" wi="165" he="54" img-content="dna" img-format="tif"/>
or
<img id="ib0159" file="imgb0159.tif" wi="165" he="152" img-content="dna" img-format="tif"/></li>
</ul><!-- EPO <DP n="65"> -->
<img id="ib0160" file="imgb0160.tif" wi="165" he="37" img-content="dna" img-format="tif"/></p>
<p id="p0150" num="0150">Optionally, when delta=0, the method further includes:
<ul id="ul0042" list-style="none" compact="compact">
<li>determining the first sequence based on the preset condition and a sequence {s<sub>n</sub>}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0066" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0161" file="imgb0161.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0067" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0162" file="imgb0162.tif" wi="15" he="6" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {s<sub>n</sub>} includes at least one of the following sequences:
<img id="ib0163" file="imgb0163.tif" wi="165" he="54" img-content="dna" img-format="tif"/>
or
<img id="ib0164" file="imgb0164.tif" wi="165" he="95" img-content="dna" img-format="tif"/></li>
</ul><!-- EPO <DP n="66"> --></p>
<p id="p0151" num="0151">Optionally, when delta=0, the method further includes:
<ul id="ul0043" list-style="none" compact="compact">
<li>determining the first sequence based on the preset condition and a sequence {s<sub>n</sub>}, where the preset condition is <i>x<sub>n</sub> = y</i><sub>(<i>n+M</i>)mod <i>K</i></sub> , where <maths id="math0068" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0165" file="imgb0165.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0069" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0166" file="imgb0166.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</li>
<li>the sequence {s<sub>n</sub>} includes at least one of the following sequences:
<img id="ib0167" file="imgb0167.tif" wi="165" he="192" img-content="dna" img-format="tif"/><!-- EPO <DP n="67"> -->
where a largest PAPR value of this group of sequences is lower than 2.41, and an auto-correlation of the sequences is lower than 0.236, thereby ensuring transmission performance and demodulation performance of the DMRS; or
<img id="ib0168" file="imgb0168.tif" wi="165" he="225" img-content="dna" img-format="tif"/>
where a largest PAPR value of this group of sequences is lower than 2.11, and an auto-correlation of the sequences is lower than 0.334, thereby ensuring transmission performance<!-- EPO <DP n="68"> --> and demodulation performance of the DMRS.</li>
</ul></p>
<p id="p0152" num="0152">Optionally, when delta=1, the method further includes:
<ul id="ul0044" list-style="none" compact="compact">
<li>determining the first sequence based on the preset condition and a sequence {s<sub>n</sub>}, where the preset condition is <i>x<sub>n</sub></i> = <i>y</i><sub>(<i>n+M</i>)mod <i>K</i></sub> , where <maths id="math0070" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0169" file="imgb0169.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0071" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0170" file="imgb0170.tif" wi="15" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</li>
<li>the sequence {s<sub>n</sub>} includes at least one of the following sequences:
<ul id="ul0045" list-style="none" compact="compact">
<li>a third sequence set, including:
<img id="ib0171" file="imgb0171.tif" wi="165" he="86" img-content="dna" img-format="tif"/></li>
<li>a fourth sequence set, including:
<img id="ib0172" file="imgb0172.tif" wi="165" he="62" img-content="dna" img-format="tif"/></li>
<li>a fifth sequence set, including:
<img id="ib0173" file="imgb0173.tif" wi="165" he="29" img-content="dna" img-format="tif"/><!-- EPO <DP n="69"> -->
<img id="ib0174" file="imgb0174.tif" wi="165" he="29" img-content="dna" img-format="tif"/></li>
<li>a sixth sequence set, including:
<img id="ib0175" file="imgb0175.tif" wi="165" he="168" img-content="dna" img-format="tif"/></li>
<li>a seventh sequence set, including:
<img id="ib0176" file="imgb0176.tif" wi="165" he="45" img-content="dna" img-format="tif"/><!-- EPO <DP n="70"> -->
<img id="ib0177" file="imgb0177.tif" wi="165" he="119" img-content="dna" img-format="tif"/>
or
<img id="ib0178" file="imgb0178.tif" wi="165" he="103" img-content="dna" img-format="tif"/></li>
</ul></li>
</ul></p>
<p id="p0153" num="0153">Optionally, when delta=1, the method further includes:
<ul id="ul0046" list-style="none" compact="compact">
<li>determining the first sequence based on the preset condition and a sequence {s<sub>n</sub>}, where the preset<!-- EPO <DP n="71"> --> condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0072" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0179" file="imgb0179.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0073" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0180" file="imgb0180.tif" wi="15" he="7" img-content="math" img-format="tif" inline="yes"/></maths>; and</li>
<li>the sequence {s<sub>n</sub>} includes at least one of the following sequences:
<img id="ib0181" file="imgb0181.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
or
<img id="ib0182" file="imgb0182.tif" wi="165" he="86" img-content="dna" img-format="tif"/></li>
</ul></p>
<p id="p0154" num="0154">Optionally, when delta=0, the method further includes:
<ul id="ul0047" list-style="none" compact="compact">
<li>determining the first sequence based on the preset condition and a sequence {s<sub>n</sub>}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0074" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>32</mn></mfrac></msup></math><img id="ib0183" file="imgb0183.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0075" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0184" file="imgb0184.tif" wi="15" he="7" img-content="math" img-format="tif" inline="yes"/></maths> ; and</li>
<li>the sequence {s<sub>n</sub>} includes at least one of the following sequences:
<img id="ib0185" file="imgb0185.tif" wi="165" he="21" img-content="dna" img-format="tif"/></li>
</ul><!-- EPO <DP n="72"> -->
<img id="ib0186" file="imgb0186.tif" wi="165" he="37" img-content="dna" img-format="tif"/></p>
<p id="p0155" num="0155">Optionally, when delta=1, the method further includes:
<ul id="ul0048" list-style="none" compact="compact">
<li>determining the first sequence based on the preset condition and a sequence {s<sub>n</sub>}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0076" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>32</mn></mfrac></msup></math><img id="ib0187" file="imgb0187.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0077" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0188" file="imgb0188.tif" wi="15" he="7" img-content="math" img-format="tif" inline="yes"/></maths>; and</li>
<li>the sequence {s<sub>n</sub>} includes at least one of the following sequences:
<img id="ib0189" file="imgb0189.tif" wi="165" he="62" img-content="dna" img-format="tif"/></li>
</ul></p>
<p id="p0156" num="0156">Optionally, when delta=1, the method further includes:
<ul id="ul0049" list-style="none" compact="compact">
<li>determining the first sequence based on the preset condition and the sequence {s(n)}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0078" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>16</mn></mfrac></msup></math><img id="ib0190" file="imgb0190.tif" wi="25" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0079" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0191" file="imgb0191.tif" wi="15" he="7" img-content="math" img-format="tif" inline="yes"/></maths>; and</li>
<li>the sequence {s<sub>n</sub>} includes at least one of the following sequences:
<img id="ib0192" file="imgb0192.tif" wi="165" he="37" img-content="dna" img-format="tif"/><!-- EPO <DP n="73"> -->
<img id="ib0193" file="imgb0193.tif" wi="165" he="13" img-content="dna" img-format="tif"/>
or
<img id="ib0194" file="imgb0194.tif" wi="165" he="233" img-content="dna" img-format="tif"/></li>
</ul><!-- EPO <DP n="74"> -->
<img id="ib0195" file="imgb0195.tif" wi="165" he="184" img-content="dna" img-format="tif"/></p>
<p id="p0157" num="0157">Optionally, when delta=1, the method further includes:
<ul id="ul0050" list-style="none" compact="compact">
<li>determining the first sequence based on the preset condition and the sequence {s(n)}, where the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, where <maths id="math0080" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0196" file="imgb0196.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0081" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0197" file="imgb0197.tif" wi="15" he="7" img-content="math" img-format="tif" inline="yes"/></maths>; and</li>
<li>the sequence {s<sub>n</sub>} includes at least one of the following sequences:
<img id="ib0198" file="imgb0198.tif" wi="151" he="5" img-content="dna" img-format="tif"/><!-- EPO <DP n="75"> -->
<img id="ib0199" file="imgb0199.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
or
<img id="ib0200" file="imgb0200.tif" wi="165" he="86" img-content="dna" img-format="tif"/></li>
</ul></p>
<p id="p0158" num="0158">Specifically, for the comb-2 structure, the terminal may determine, based on the preset condition and the sequence {s(n)}, the first sequence used to generate the reference signal transmitted on the combs 2 in the comb-2. {s(n)} may be selected from a sequence combination (referred to as a "sequence set 4" below). The sequence set 4 may be 100 sequences modulated by using 8PSK, or may be 100 sequences modulated by using 16PSK, or may be 100 sequences modulated by using 32PSK.</p>
<p id="p0159" num="0159">In addition, for the comb-2 structure, the terminal may determine, based on the preset condition and the sequence {s(n)}, the first sequence used to generate the reference signal transmitted on the combs 2 in the comb-2. {s(n)} may be determined in the sequence combination (referred to as the "sequence set 4" below). The sequence set 4 may be some of a plurality of sequences modulated by using 8PSK, or may be some of a plurality of sequences modulated by using 16PSK, or may be some of a plurality of sequences modulated by using 32PSK.</p>
<p id="p0160" num="0160">In the following, unless otherwise specified, the first sequence, the sequence {x(n)}, or the sequence {<i>x<sub>n</sub></i>} may be obtained through transform by using the sequence sets A to P and the first sequence set to the eighth sequence set as base sequences.<!-- EPO <DP n="76"> --></p>
<p id="p0161" num="0161">It should be noted that some or all sequences included in the sequence combination 3 may be the same as sequences in the sequence combination 4. This is not limited in this application.</p>
<p id="p0162" num="0162">Optionally, A may be a modulation symbol, and may be carried on the K elements included in the sequence. A does not change with n.</p>
<p id="p0163" num="0163">Optionally, A is a constant. For example, A=1. For example, A may be a symbol known to both the terminal device and the network device. A may alternatively represent an amplitude.</p>
<p id="p0164" num="0164">It should be noted that, that A is a constant in a transmission time unit does not mean that A is fixed. When the first signal is sent at different moments, A may be variable. For example, all N elements included in the sequence {x(n)} are equivalent to the reference signal, and A is an amplitude of the reference signal. When sending the signal for the first time, the terminal device may send the signal based on A=1. When sending the signal for the second time, the terminal device may send the signal based on A=2.</p>
<p id="p0165" num="0165">Optionally, that the reference signal is generated by using the first sequence may be specifically: The first sequence is repeated, and DFT transform is performed to generate the reference signal.</p>
<p id="p0166" num="0166">Specifically, for the comb-2 structure, the terminal may repeat the first sequence by using [+1 +1] or [+1 -1]. After repeating the first sequence by using [+1 +1] and performing the DFT transform, the terminal may map odd-numbered sequences (which may be represented as 2p+delta, where p=0, ..., L-1) in the 2K sequences to the combs 1 in the comb-2, to generate the reference signal. After repeating the first sequence by using [+1 -1] and performing the DFT transform, the terminal may map even-numbered sequences in the 2K sequences to the combs 2 in the comb-2, to generate the reference signal.</p>
<p id="p0167" num="0167">In the following embodiments, Φ(0),..., Φ(5) are used to represent elements in {x(n)}.</p>
<p id="p0168" num="0168">In another embodiment, for the comb-2 structure, after repeating the first sequence, the terminal may obtain {Φ(0),..., Φ(5), Φ(0),..., Φ(5)} or {Φ(0),..., Φ(5), ―Φ(0),..., ―Φ(5)} . After performing the DFT transform on {Φ(0),..., Φ(5), Φ(0),..., Φ(5)}, the terminal may map a sequence including 12 elements to the combs 1 in the comb-2, to obtain a frequency-domain reference signal on even-numbered subcarriers. After performing the DFT transform on {Φ(0),..., Φ(5), ―Φ(0),..., ―Φ(5)} , the terminal may map a sequence including 12 elements to the combs 2 in the comb-2, to obtain a frequency-domain reference signal on odd-numbered subcarriers.</p>
<p id="p0169" num="0169">For the comb-4 structure, the terminal may repeat the first sequence by using [+1 +1 +1 +1], [+1 ―1 +1 ―1], [+1 +1 ―1 ―1], or [+1 ―1 +1 ―1]. After repeating the first sequence by using [+1 +1 +1 +1] and performing the DFT transform, the terminal may map sequences numbered 4p+delta (delta=0) in the 4K sequences to combs 1 shown<!-- EPO <DP n="77"> --> in <figref idref="f0004">FIG. 5</figref>, to generate the reference signal. After repeating the first sequence by using [+1 -1 +1 -1] and performing the DFT transform, the terminal may map sequences numbered 4p+delta (delta=l) in the 4K sequences to combs 2 shown in <figref idref="f0004">FIG. 5</figref>, to generate the reference signal. After repeating the first sequence by using [+1 -1 +1 -1] and performing the DFT transform, the terminal may map sequences numbered 4p+delta (delta=2) in the 4K sequences to combs 3 shown in <figref idref="f0004">FIG. 5</figref>, to generate the reference signal. After repeating the first sequence by using [+1 -1 +1 -1] and performing the DFT transform, the terminal may map sequences numbered 4p+delta (delta=3) in the 4K sequences to combs 4 shown in <figref idref="f0004">FIG. 5</figref>, to generate the reference signal.</p>
<p id="p0170" num="0170">In another embodiment, for the comb-4 structure, after repeating the first sequence, the terminal may obtain {Φ(0),..., Φ(5), Φ(0),..., Φ(5), Φ(0),..., Φ(5),Φ(0),..., Φ(5)} {Φ(0),..., Φ(5), <i>j</i> × Φ(0),..., <i>j</i> × Φ(5), ―Φ(0),..., ―Φ(5), ― <i>j</i> × (Φ(0),..., ― <i>j</i> × Φ(5)}, {Φ(0),..., Φ(5), ―Φ(0),..., ―Φ(5), Φ(0),..., Φ(5), ―Φ(0),..., ―Φ(5)}, or {Φ(0),..., Φ(5), ― <i>j</i> × Φ(0),..., ― <i>j</i> × Φ(5), ―Φ(0),..., ―Φ(5), <i>j</i> × Φ(0),..., <i>j</i> × Φ(5)}. After performing the DFT transform on {Φ(0),..., Φ(5), Φ(0),..., Φ(5), Φ(0),..., Φ(5), Φ(0),..., Φ(5)}, the terminal may map the sequences each having the number of 4p+delta (delta=0) in the 4K sequences to the combs 1 shown in <figref idref="f0004">FIG. 5</figref>, to generate the reference signal. After performing the DFT transform on {Φ(0),..., Φ(5), <i>j</i> × Φ(0),..., <i>j</i> × Φ(5), ―Φ(0),..., ―Φ(5), ― <i>j</i> × Φ(0),..., <i>― j</i> × Φ(5)}, the terminal may map the sequences each having the number of 4p+delta (delta=l) in the 4K sequences to the combs 2 shown in <figref idref="f0004">FIG. 5</figref>, to generate the reference signal. After performing the DFT transform on {Φ(0),..., Φ(5), ―Φ(0),..., ―Φ(5), Φ(0),..., Φ(5), ―Φ(0),..., ―Φ(5)}, the terminal may map the sequences each having the number of 4p+delta (delta=2) in the 4K sequences to the combs 3 shown in <figref idref="f0004">FIG. 5</figref>, to generate the reference signal. After performing the DFT transform on {Φ(0),..., Φ(5), ― <i>j</i> × Φ(0),..., ― <i>j</i> × Φ(5), ―Φ(0),..., ―Φ(5), <i>j</i> × Φ(0),..., <i>j</i> × Φ(5)} , the terminal may map the sequences each having the number of 4p+delta (delta=3) in the 4K sequences to the combs 4 shown in <figref idref="f0004">FIG. 5</figref>, to generate the reference signal.</p>
<p id="p0171" num="0171">It should be noted that, when K=6, to be specific, the first sequence is a sequence having a length of 6, and the first frequency-domain resource includes six subcarriers, the comb-4 structure needs to occupy 4K=24 subcarriers (namely, two RBs), so that six subcarriers satisfying a requirement can be selected from the comb-4 structure. The comb-2 structure needs to occupy 2K=12 subcarriers (namely, two RBs), so that subcarriers satisfying a requirement can be selected from the comb-2 structure.</p>
<p id="p0172" num="0172">Optionally, when L=2, K=6, n=0, 1, 2, 3, 4, and 5, and delta=0, the generating the reference signal of the first signal includes: performing discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence<!-- EPO <DP n="78"> --> {f(t)}, where t=0, ..., 2K―1; a sequence {z(a)}=the sequence {x(n)}, and a=0, ..., K―1; a sequence {z(b)}=the sequence {x(n)}, and b=K, ..., 2K―1; and x(n) represents the first sequence; and mapping elements numbered 2p+delta in the sequence {f(t)} to the K subcarriers numbered k, to generate the reference signal, where p=0, ..., L―1.</p>
<p id="p0173" num="0173">Specifically, the sequence {z(t)} may be obtained by repeating the first sequence {x(n)} by using [+1 +1]. To be specific, when t=a, {z(a)}=the sequence {x(n)}, and a=0, ..., K―1; when t=b, the sequence {z(b)}=the sequence {x(n)}, and b=K, ..., 2K―1. Then, the terminal may perform the discrete Fourier transform (discrete fourier transform, DFT) on the elements in the sequence {z(t)} to obtain the sequence {f(t)}, and map k elements numbered 2p+delta (delta=0) in the sequence {f(t)} to the K subcarriers on the first frequency-domain resource, to generate the reference signal. In this embodiment of this application, the time-domain sequence {z(t)} can be transformed into a frequency-domain sequence, and the frequency-domain sequence is mapped to corresponding subcarriers.</p>
<p id="p0174" num="0174">For example, K elements in the sequence {f(t)} are mapped to K equi-spaced subcarriers respectively. As shown in <figref idref="f0005">FIG. 6</figref>, a spacing between the N subcarriers is 1, and the K subcarriers are equally spaced in frequency domain. A spacing between subcarriers to which elements f(0) to f(K-1) in the sequence {f(t)} are mapped is one subcarrier. Specifically, the elements f(0) to f(K-1) are mapped to the K equi-spaced subcarriers respectively, subcarrier numbers are s+0, s+2, ..., s+2(K―1), and s represents an index, of the first subcarrier of the K subcarriers to which the sequence {f(t)} is mapped, in subcarriers in a communications system.</p>
<p id="p0175" num="0175">Optionally, when L=2, K=6, n=0, 1, 2, 3, 4, and 5, and delta=1, the generating the reference signal of the first signal includes: performing discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)}, where t=0, ..., 2K―1; a sequence {z(a)}=the sequence {―1·x(n)}, and a=0, ..., K―1; a sequence {z(b)}=the sequence {x(n)}, and b=K, ..., 2K―1; and x(n) represents the first sequence; and mapping elements numbered 2p+delta in the sequence {f(t)} to the K subcarriers each having a subcarrier number of k, to generate the reference signal, where p=0, ..., L―1. It should be understood that L=2 may be merely an example, and when a value of L is another value, the method for generating the reference signal of the first signal is also applicable.</p>
<p id="p0176" num="0176">Specifically, the sequence {z(t)} may be obtained by repeating the first sequence {x(n)} by using [+1 ― 1]. To be specific, when t=a, {z(a)}=the sequence {x(n)}, and a=0, ..., K―1; when t=b, the sequence {z(b)}=the sequence {x(n)}, and b=K, ..., 2K―1. Then, the terminal may perform the discrete Fourier transform on the elements in the sequence {z(t)} to obtain the sequence {f(t)}, and map k elements numbered 2p+delta (delta=l) in the sequence {f(t)} to the K subcarriers on the first frequency-domain resource, to generate the reference signal.</p>
<p id="p0177" num="0177">Optionally, when L=4, K=6, n=0, 1, 2, and 3, and delta=0, the generating the reference signal of the first signal includes: performing discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence sequence {f(t)} with t=0, ..., 4K―1, where a sequence {z(a)}=the sequence {x(n)}, and a=0, ..., K―1; a sequence {z(b)}=the<!-- EPO <DP n="79"> --> sequence {x(n)}, and b=K, ..., 2K-1; a sequence {z(c)}=the sequence {x(n)}, and c=2K, ..., 3K-1; a sequence {z(d)}=the sequence {x(n)}, and d=3K, ..., 4K-1; and x(n) represents the first sequence; and mapping elements numbered 4p+delta in the sequence {f(t)} to the K subcarriers each having a subcarrier number of k, to generate the reference signal, where p=0, ..., L-1.</p>
<p id="p0178" num="0178">Specifically, the terminal may repeat the sequence {x(n)} by using [+1 +1 +1 +1] to obtain the sequence {z(t)}, perform the DFT on the sequence {z(t)} to obtain {f(t)}, and map elements numbered 4p (p=0, 1, 2, and 3) in the sequence to subcarriers numbered u+4<sup>∗</sup>n (where n=0, 1, 2, and 3).</p>
<p id="p0179" num="0179">Optionally, when L=4, K=6, n=0, 1, 2, and 3, and delta=1, the generating the reference signal of the first signal includes: performing discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)}, where a sequence {z(a)}=the sequence {x(n)}, and a=0, ..., K―1; a sequence {z(b)}=the sequence {―1 ·x(n)}, and b=K, ..., 2K―1; a sequence {z(c)}=the sequence {x(n)}, and c=2K, ..., 3K―1; a sequence {z(d)}=the sequence {-1·x(n)}, and d=3K, ..., 4K―1; and x(n) represents the first sequence; and mapping elements numbered 4p+delta in the sequence {f(t)} to the K subcarriers each having a subcarrier number of k, to generate the reference signal, where p=0, ..., L-1.</p>
<p id="p0180" num="0180">Specifically, the terminal may repeat the sequence {x(n)} by using [+1 ―1 +1 ―1] to obtain the sequence {z(t)}, perform the DFT on the sequence {z(t)} to obtain {f(t)}, and map elements numbered 4p+1 (p=0, 1, 2, and 3) in the sequence to subcarriers numbered u+4<sup>∗</sup>n+1 (where n=0, 1, 2, and 3).</p>
<p id="p0181" num="0181">Optionally, when L=4, K=6, n=0, 1, 2, and 3, and delta=2, the generating the reference signal of the first signal includes: performing discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)}, where a sequence {z(a)}=the sequence {x(n)}, and a=0, ..., K-1; a sequence {z(b)}=the sequence {x(n)}, and b=K, ..., 2K―1; a sequence {z(c)}=the sequence {―1·x(n)}, and c=2K, ..., 3K―1; a sequence {z(d)}=the sequence {―1·x(n)}, and d=3K, ..., 4K―1; and x(n) represents the first sequence; and mapping elements numbered 4p+delta in the sequence {f(t)} to the K subcarriers each having a subcarrier number of k, to generate the reference signal, where p=0, ..., L-1.</p>
<p id="p0182" num="0182">Specifically, the terminal may repeat the sequence {x(n)} by using [+1 +1 -1 -1] to obtain the sequence {z(t)}, perform the DFT on the sequence {z(t)} to obtain {f(t)}, and map elements numbered 4p+2 (p=0, 1, 2, and 3) in the sequence to subcarriers numbered u+4<sup>∗</sup>n+2 (where n=0, 1, 2, and 3).</p>
<p id="p0183" num="0183">Optionally, when L=4, K=6, n=0, 1, 2, and 3, and delta=3, the generating the reference signal of the first signal includes: performing discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)}, where a sequence {z(a)}=the sequence {x(n)}, and a=0, ..., K―1; a sequence {z(b)}=the sequence {―1·x(n)}, and b=K, ..., 2K―1; a sequence {z(c)}=the sequence {―1·x(n)}, and c=2K, ..., 3K―1; a sequence {z(d)}=the sequence<!-- EPO <DP n="80"> --></p>
<p id="p0184" num="0184">{x(n)}, and d=3K, ..., 4K-1; and x(n) represents the first sequence; and mapping elements numbered 4p+delta in the sequence {f(t)} to the K subcarriers each having a subcarrier number of k, to generate the reference signal, where p=0, ..., L―1.</p>
<p id="p0185" num="0185">Specifically, the terminal may repeat the sequence {x(n)} by using [+1 ―1+1 ―1] to obtain the sequence {z(t)}, perform the DFT on the sequence {z(t)} to obtain {f(t)}, and map elements numbered 4p+3 (p=0, 1, 2, and 3) in the sequence to subcarriers numbered u+4<sup>∗</sup>n+3 (where n=0, 1, 2, and 3).</p>
<p id="p0186" num="0186">Optionally, step 403 may specifically include: Filter the first sequence, then perform DFT transform, and map a sequence obtained after the filtering and the DFT to the first frequency-domain resource, to obtain the reference signal. For example, as shown in <figref idref="f0006">FIG. 7</figref>, {f(t)} is obtained after filtering is performed on the first sequence {x(n)} and then the DFT is performed.</p>
<p id="p0187" num="0187">Optionally, step 403 may specifically include: Perform DFT transform on the first sequence, then perform filtering, and map a sequence obtained after the DFT and the filtering to the first frequency-domain resource, to obtain the reference signal. For example, as shown in <figref idref="f0006">FIG. 8</figref>, {f(t)} is obtained after the DFT is performed on the first sequence {x(n)} and then filtering is performed.</p>
<p id="p0188" num="0188">Optionally, the terminal device performs DFT processing on the N elements in the sequence {<i>x<sub>n</sub></i>}, to obtain a sequence {<i>f<sub>n</sub></i> }. Herein, this mainly means that the terminal device performs DFT processing by using N elements in a configured sequence {<i>x<sub>n</sub>}</i> to obtain a frequency-domain sequence. The frequency-domain sequence is the sequence {<i>f<sub>n</sub></i>}. Then, the terminal device maps the sequence {<i>f<sub>n</sub></i> } to the N subcarriers, to generate the first signal, and sends the first signal to the network device.</p>
<p id="p0189" num="0189">Optionally, a specific process in which the terminal device performs DFT processing on the sequence {<i>x<sub>n</sub></i>} including N elements, to obtain a frequency-domain sequence, then maps the frequency-domain sequence to the N subcarriers respectively, to generate the first signal, and sends the first signal to the network device includes the following steps.</p>
<p id="p0190" num="0190">The terminal device performs the DFT processing on the sequence {<i>x<sub>n</sub></i>} including the N elements, to obtain the sequence {<i>f<sub>n</sub></i>}.</p>
<p id="p0191" num="0191">With reference to the foregoing descriptions, in a single embodiment, refer to <figref idref="f0012">FIG. 18</figref>. During execution of S301, in a process in which the terminal device performs the DFT processing on the sequence to obtain the sequence {<i>f<sub>n</sub></i>}, a filter may not be used. Optionally, in a process in which the terminal device performs the DFT processing on<!-- EPO <DP n="81"> --> the sequence {<i>x<sub>n</sub></i>} to obtain the sequence {<i>f<sub>n</sub></i>}, DFT processing may be performed after the filter is used. Optionally, in a process in which the terminal device performs the DFT processing on the sequence {<i>x<sub>n</sub></i>} to obtain the sequence {<i>f<sub>n</sub></i>}, the terminal device may obtain the sequence by using a filter after performing DFT processing.</p>
<p id="p0192" num="0192">S302: The terminal device maps the sequence to the N subcarriers respectively, to obtain an N-point frequency-domain signal.</p>
<p id="p0193" num="0193">In a specific implementation, the N-point frequency-domain signal includes frequency-domain signals of N elements.</p>
<p id="p0194" num="0194">In the following embodiments of this application, s represents an index, of the first subcarrier of the K subcarriers to which the sequence {<i>f<sub>n</sub></i>} is mapped, in subcarriers in a communications system.</p>
<p id="p0195" num="0195">Optionally, the terminal device maps N elements in the sequence {<i>f<sub>n</sub></i>} to N consecutive subcarriers respectively. Optionally, elements <i>f</i><sub>0</sub> to <i>f</i><sub><i>N</i>-1</sub> in the sequence {<i>f<sub>n</sub></i>} are mapped to N consecutive subcarriers, and reference signs of the subcarrier are s+0, s+1, ..., s+N―1.</p>
<p id="p0196" num="0196">In a possible example, the terminal device sequentially maps the N elements in the sequence {<i>f<sub>n</sub></i>} to the N subcarriers in descending order of the subcarriers. One element in the sequence {<i>f<sub>n</sub></i> }is mapped to one frequency-domain subcarrier. The frequency-domain subcarrier is a minimum unit of a frequency-domain resource, and is used to carry data information.</p>
<p id="p0197" num="0197">In a possible example, the terminal device sequentially maps the N elements in the sequence {<i>f<sub>n</sub></i>} to the N subcarriers in ascending order of the subcarriers. One element in the sequence {<i>f<sub>n</sub></i>} is mapped to one subcarrier, and the subcarrier carries the element. After the mapping, when the terminal device sends data by using a radio frequency, it is equivalent to that the element is sent on the subcarrier. In the communications system, different terminal devices may send data by occupying different subcarriers. Positions of the N subcarriers in a plurality of subcarriers in the communications system may be predefined or configured by the network device by using signaling.</p>
<p id="p0198" num="0198">Optionally, the N elements in the sequence may alternatively be mapped to N equi-spaced subcarriers respectively. Optionally, a spacing between the N subcarriers is 1, and the N subcarriers are equally spaced in frequency domain. A spacing between the subcarriers to which the elements <i>f</i><sub>0</sub> to <i>f</i><sub><i>N</i>-1</sub> in the sequence {<i>f<sub>n</sub></i>} are mapped is one subcarrier. Specifically, the elements <i>f</i><sub>0</sub> to <i>f</i><sub><i>N</i>-1</sub> are mapped to the N equi-spaced subcarriers respectively, and subcarrier numbers are s+0, s+2, ..., s+2(N-1).<!-- EPO <DP n="82"> --></p>
<p id="p0199" num="0199">In the embodiments of this application, a manner in which the N elements in the sequence {<i>f<sub>n</sub></i>} are mapped to the N subcarriers respectively is not limited to the foregoing manners.</p>
<p id="p0200" num="0200">S303: The terminal device performs inverse fast Fourier transform (inverse fast Fourier transformation, IFFT) on the frequency-domain signal including the N elements, to obtain a corresponding time-domain signal, and adds a cyclic prefix to the time-domain signal, to generate the first signal.</p>
<p id="p0201" num="0201">S304: The terminal device sends the first signal by using the radio frequency.</p>
<p id="p0202" num="0202">Optionally, when S303 is performed, the time-domain signal obtained by the terminal device by performing the IFFT on the generated N-point frequency-domain signal is an orthogonal frequency division multiplexing (orthogonal frequency division multiplexing, OFDM) symbol. When S303 is performed, the terminal device sends the first signal by using the radio frequency. In other words, the terminal device sends, on the N subcarriers, the first signal that carries the sequence {<i>f<sub>n</sub></i>}.</p>
<p id="p0203" num="0203">Optionally, the terminal device may send, on one OFDM symbol, the first signal that carries the sequence {<i>f<sub>n</sub></i>}, or may send, on a plurality of OFDM symbols, the first signal that carries the sequence {<i>f<sub>n</sub></i>}.</p>
<p id="p0204" num="0204">It should be noted that, in the embodiments of this application, a manner of generating the first signal is not limited to the foregoing implementation in which the terminal device performs the DFT processing on the sequence {x(n)} including the N elements to obtain the frequency-domain sequence, then maps the frequency-domain sequence to the N subcarriers respectively, to generate the first signal, and sends the first signal to the network device.</p>
<p id="p0205" num="0205">Optionally, a sequence {<i>y<sub>n</sub></i>} may be obtained by using a shaping filter for the sequence {x(n)}, then the sequence {<i>y<sub>n</sub></i>}is modulated to a carrier to generate the first signal, and the first signal is sent to the network device.</p>
<p id="p0206" num="0206">It should be understood that, after the DFT transform is performed on the first sequence in step 403, filtering may not be performed, and a sequence obtained after the DFT is directly mapped to the first frequency-domain resource to obtain the reference signal. As shown in <figref idref="f0007">FIG. 9</figref>, {f(t)} is obtained after the DFT transform is performed on the first sequence {x(n)}.</p>
<p id="p0207" num="0207">It should be noted that, that an element in a sequence is mapped to one subcarrier may be understood as that the subcarrier carries the element. After the mapping, the terminal may perform sending by using a radio frequency.</p>
<p id="p0208" num="0208">404: The network device generates a local sequence, where the local sequence may be the first sequence or a conjugate transpose of the first sequence.</p>
<p id="p0209" num="0209">Specifically, the network device may prestore a mapping relationship between the first sequence and a<!-- EPO <DP n="83"> --> frequency-domain resource, or agree on a mapping relationship in a protocol. In this way, the network device may determine first sequences corresponding to different frequency-domain resources. Alternatively, if the network device determines to receive the reference signal only on some frequency-domain resources of the comb structure, the network device may generate only first sequences corresponding to the some frequency-domain resources.</p>
<p id="p0210" num="0210">For example, after accessing a network, the terminal may send a PUSCH or a DMRS by using the configured sequence {x(n)}, and the network device receives the PUSCH or the DMRS by using the sequence {x(n)} configured for the terminal device.</p>
<p id="p0211" num="0211">405: The terminal sends the reference signal on the first frequency-domain resource. Correspondingly, the network device receives the reference signal on the first frequency-domain resource.</p>
<p id="p0212" num="0212">Specifically, in frequency-domain resources of a comb structure, reference signals mapped to frequency-domain resources on different combs may be generated by using different sequences. In other words, the reference signals on different frequency-domain resources may be generated by selecting different sequences as required, thereby improving performance of the reference signals transmitted on the frequency-domain resources of the comb structure. For example, the performance may be at least one of a relatively low peak to average power ratio (peak to average power ratio, PAPR), a relatively low correlation, relatively good frequency-domain flatness, and a relatively good time-domain auto-correlation.</p>
<p id="p0213" num="0213">It should be noted that the terminal may further send the first signal on the first frequency-domain resource. The first frequency-domain resource may be the same as a frequency-domain resource for sending the reference signal, but a time-domain resource for sending the first signal is different from a time-domain resource for sending the reference signal. This is not limited in this application.</p>
<p id="p0214" num="0214">406: The network device processes the first signal based on the local sequence.</p>
<p id="p0215" num="0215">Specifically, the terminal device determines a corresponding local sequence based on the first frequency-domain resource for receiving the reference signal, determines channel quality information based on the local sequence and the reference signal, and then processes the first signal based on the channel quality information. When the local sequence is the first sequence, the network device may determine the channel quality information based on a ratio of the reference signal to the first sequence. When the local sequence is a conjugate of the first sequence, the network device may determine the channel quality information based on a product of the reference signal and the conjugate of the first sequence.</p>
<p id="p0216" num="0216">The following describes another embodiment of the present invention. The embodiment relates to a sequence-based signal processing method, including:<!-- EPO <DP n="84"> -->
<ul id="ul0051" list-style="none" compact="compact">
<li>determining a sequence {<i>x<sub>n</sub></i>}<i>,</i> where <i>x<sub>n</sub></i> is an element in the sequence {<i>x<sub>n</sub></i>}<i>,</i> the sequence {<i>x<sub>n</sub></i>} is a sequence satisfying a preset condition, and the preset condition is:
<ul id="ul0052" list-style="none" compact="compact">
<li>the preset condition is <i>x<sub>n</sub></i> = <i>y</i><sub>(<i>n</i>+<i>M</i>)mod <i>K</i></sub>, where <maths id="math0082" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0201" file="imgb0201.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M ∈{0, 1, 2, ..., 5}, K=6, A is a non-zero complex number, <maths id="math0083" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0202" file="imgb0202.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>, and a set of sequence {<i>s<sub>n</sub></i>} including an element <i>S<sub>n</sub></i> includes at least one of sequences in a first sequence set; and</li>
<li>the sequences included in the first sequence set include:
<img id="ib0203" file="imgb0203.tif" wi="165" he="184" img-content="dna" img-format="tif"/><!-- EPO <DP n="85"> -->
<img id="ib0204" file="imgb0204.tif" wi="42" he="5" img-content="dna" img-format="tif"/>
<img id="ib0205" file="imgb0205.tif" wi="165" he="217" img-content="dna" img-format="tif"/>
<img id="ib0206" file="imgb0206.tif" wi="165" he="21" img-content="dna" img-format="tif"/><!-- EPO <DP n="86"> -->
<img id="ib0207" file="imgb0207.tif" wi="165" he="54" img-content="dna" img-format="tif"/>
<img id="ib0208" file="imgb0208.tif" wi="165" he="54" img-content="dna" img-format="tif"/>
<img id="ib0209" file="imgb0209.tif" wi="165" he="62" img-content="dna" img-format="tif"/>
<img id="ib0210" file="imgb0210.tif" wi="165" he="70" img-content="dna" img-format="tif"/><!-- EPO <DP n="87"> -->
<img id="ib0211" file="imgb0211.tif" wi="165" he="86" img-content="dna" img-format="tif"/>
<img id="ib0212" file="imgb0212.tif" wi="165" he="160" img-content="dna" img-format="tif"/>
or<!-- EPO <DP n="88"> -->
<img id="ib0213" file="imgb0213.tif" wi="165" he="103" img-content="dna" img-format="tif"/></li>
</ul></li>
<li>generating a first signal based on the sequence {<i>x<sub>n</sub></i>}; and</li>
<li>sending the first signal.</li>
</ul></p>
<p id="p0217" num="0217">In an embodiment, the set of the sequence {<i>s<sub>n</sub></i>} includes at least one of sequences in a second sequence set, and the second sequence set includes some of the sequences in the first sequence set.</p>
<p id="p0218" num="0218">In an embodiment, the generating a first signal based on the sequence {<i>x<sub>n</sub></i>} includes:
<ul id="ul0053" list-style="none" compact="compact">
<li>performing discrete Fourier transform on N elements in the sequence {<i>x<sub>n</sub></i>} to obtain a sequence {<i>f<sub>n</sub></i>} including N elements;</li>
<li>mapping the N elements in the sequence {<i>f<sub>n</sub></i>} to N subcarriers respectively, to obtain a frequency-domain signal including the N elements; and</li>
<li>generating the first signal based on the frequency-domain signal.</li>
</ul></p>
<p id="p0219" num="0219">In an embodiment, the N subcarriers are N consecutive subcarriers, or N equi-spaced subcarriers.</p>
<p id="p0220" num="0220">In an embodiment, before the performing discrete Fourier transform on N elements in the sequence {<i>x<sub>n</sub></i>}, the first signal processing method further includes: filtering the sequence {<i>x<sub>n</sub></i>}; or<br/>
after the performing discrete Fourier transform on N elements in the sequence {<i>x<sub>n</sub></i>}, the first signal processing method further includes: filtering the sequence {<i>x<sub>n</sub></i>}.</p>
<p id="p0221" num="0221">In an embodiment, the first signal is a reference signal of a second signal, and a modulation scheme of the second signal is π/2 binary phase shift keying BPSK.<!-- EPO <DP n="89"> --></p>
<p id="p0222" num="0222">The following describes another embodiment of the present invention. The embodiment relates to a sequence-based signal processing apparatus, including:
<ul id="ul0054" list-style="none">
<li>a determining unit, configured to determine a sequence {<i>x<sub>n</sub></i>}, where <i>x<sub>n</sub></i> is an element in the sequence {<i>x<sub>n</sub></i>} , the sequence {<i>x<sub>n</sub></i>} is a sequence satisfying a preset condition, and the preset condition is:
<ul id="ul0055" list-style="none" compact="compact">
<li>the preset condition is <i>x<sub>n</sub></i> = <i>y</i><sub>(<i>n</i>+<i>M</i>)mod <i>K</i></sub>, where <maths id="math0084" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0214" file="imgb0214.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, <maths id="math0085" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0215" file="imgb0215.tif" wi="15" he="6" img-content="math" img-format="tif" inline="yes"/></maths>, and a set of sequence {<i>s<sub>n</sub></i>} including an element <i>s<sub>n</sub></i> includes at least one of sequences in a first sequence set; and</li>
<li>the sequences included in the first sequence set include:
<img id="ib0216" file="imgb0216.tif" wi="165" he="168" img-content="dna" img-format="tif"/><!-- EPO <DP n="90"> -->
<img id="ib0217" file="imgb0217.tif" wi="165" he="21" img-content="dna" img-format="tif"/>
<img id="ib0218" file="imgb0218.tif" wi="165" he="217" img-content="dna" img-format="tif"/>
<img id="ib0219" file="imgb0219.tif" wi="151" he="5" img-content="dna" img-format="tif"/><!-- EPO <DP n="91"> -->
<img id="ib0220" file="imgb0220.tif" wi="165" he="70" img-content="dna" img-format="tif"/>
<img id="ib0221" file="imgb0221.tif" wi="165" he="54" img-content="dna" img-format="tif"/>
<img id="ib0222" file="imgb0222.tif" wi="165" he="62" img-content="dna" img-format="tif"/>
<img id="ib0223" file="imgb0223.tif" wi="165" he="54" img-content="dna" img-format="tif"/><!-- EPO <DP n="92"> -->
<img id="ib0224" file="imgb0224.tif" wi="165" he="103" img-content="dna" img-format="tif"/>
<img id="ib0225" file="imgb0225.tif" wi="165" he="144" img-content="dna" img-format="tif"/><!-- EPO <DP n="93"> -->
<img id="ib0226" file="imgb0226.tif" wi="165" he="12" img-content="dna" img-format="tif"/>
or
<img id="ib0227" file="imgb0227.tif" wi="165" he="103" img-content="dna" img-format="tif"/></li>
</ul></li>
<li>a generation unit, configured to generate a first signal based on the sequence {<i>x<sub>n</sub></i>} : and</li>
<li>a sending unit, configured to send the first signal.</li>
</ul></p>
<p id="p0223" num="0223">In an embodiment, the set of the sequence {<i>s<sub>n</sub></i>} includes at least one of sequences in a second sequence set, and the second sequence set includes some of the sequences in the first sequence set.</p>
<p id="p0224" num="0224">In an embodiment, the apparatus further includes:
<ul id="ul0056" list-style="none" compact="compact">
<li>the generation unit is further configured to perform discrete Fourier transform on N elements in the sequence {<i>x<sub>n</sub></i>} to obtain a sequence {<i>f<sub>n</sub></i>} including N elements;</li>
<li>the generation unit is further configured to map the N elements in the sequence {<i>f<sub>n</sub></i>} to N subcarriers respectively, to obtain a frequency-domain signal including the N elements; and</li>
<li>the generation unit is further configured to generate the first signal based on the frequency-domain signal.</li>
</ul></p>
<p id="p0225" num="0225">In an embodiment, the N subcarriers are N consecutive subcarriers, or N equi-spaced subcarriers.</p>
<p id="p0226" num="0226">In an embodiment, the signal processing apparatus further includes a filter unit, configured to: filter the sequence {<i>x<sub>n</sub></i>} before the discrete Fourier transform is performed on the N elements; or<br/>
filter the sequence {<i>x<sub>n</sub></i>} after the discrete Fourier transform is performed on the N elements.</p>
<p id="p0227" num="0227">In an embodiment, the first signal is a reference signal of a second signal, and a modulation scheme of<!-- EPO <DP n="94"> --> the second signal is π/2 binary phase shift keying BPSK.</p>
<p id="p0228" num="0228">A plurality of orthogonal frequency division DMRS ports are supported in the foregoing process. For example, in a comb-2, two orthogonal DMRS ports are supported to occupy different subcarriers. In a comb-4, four orthogonal DMRS ports are supported to occupy different subcarriers. To support more users, more DMRS orthogonal ports need to be supported on a same frequency-domain resource through code division multiplexing.</p>
<p id="p0229" num="0229">Specifically, a sequence used by a DMRS port 0 is represented as {Φ(0),..., Φ(5), Φ(0), ..., Φ(5)} , and DFT transform is performed on the sequence used by the DMRS port 0. Optionally, IDFT transform is performed after a sequence obtained after the DFT transform is filtered, to form the DMRS port 0. The DMRS port 0 occupies frequency-domain combs 1. In an orthogonal manner 1, a DMRS port 2 that occupies frequency-domain combs 2 may use a sequence {Φ(0),..., Φ(5), ―Φ(0),..., ―Φ(5)}, and DFT transform is performed on the sequence. Optionally, IDFT transform is performed after a sequence obtained after the DFT transform is filtered, to form the DMRS port 2.</p>
<p id="p0230" num="0230">In an orthogonal manner 2, a DMRS port 2 that occupies frequency-domain combs 2 may alternatively use a sequence {Φ(0),..., Φ(5)} , and DFT transform is performed on the sequence. Then, a tensor product operation (Kronecker) is performed by using a vector [0 1] to form a sequence having a length of 12. For example, {<i>β</i>(0),...,<i>β</i>(5)} is a sequence obtained after the DFT transform is performed on {Φ(0),..., Φ(5)} . In this case, the Kronecker operation is [<i>β</i>(0) ... <i>β</i>(5)]⊗[0 1]=[0 <i>β</i>(0) 0 <i>β</i>(1) ...0 <i>β</i>(5)]. Optionally, IDFT transform is performed after a sequence obtained after the DFT transform is filtered, to form the DMRS port 2.</p>
<p id="p0231" num="0231">In an orthogonal manner 3, a DMRS port 2 that occupies frequency-domain combs 2 may use a sequence [Φ(0),..., Φ(5), Φ(0),..., Φ(5)] · [<i>e</i><sup><i>π</i>×<i>j</i>×0/6</sup> <i>e</i><sup><i>π</i>×<i>j</i>×1/6</sup> ... <i>e</i><sup><i>π</i>×<i>j</i>×11/6</sup>], and <b>DFT</b> transform is performed on the sequence. Optionally, IDFT transform is performed after a sequence obtained after the DFT transform is filtered, to form the DMRS port 2. In the orthogonal manners 1, 2, and 3, orthogonal DMRS ports occupying different subcarriers are formed.</p>
<p id="p0232" num="0232">In an orthogonal manner 4, a cyclic shift (cyclic shift, CS) operation is performed on the sequence used by the DMRS port 0. In a cyclic shift manner, the sequence is shifted by 1/4 of the length of the sequence to the left, to form a sequence of the DMRS port 1. For example, the DMRS port 1 is {Φ(3), Φ(4), Φ(5), Φ(0),..., Φ(5), Φ(0), Φ(1), Φ(2)}. DFT transform is performed on the sequence used by the DMRS port 1. Optionally, IDFT transform is performed after a sequence obtained after the DFT transform is filtered, to form the DMRS port 1, and the DMRS port 1 occupies the frequency-domain combs 1.</p>
<p id="p0233" num="0233">In an orthogonal manner 5, a point multiplication operation is performed on the DMRS port 0 and Walsh code to form the sequence of the DMRS port 1. The Walsh code may be [1 ―1 1 ―1 1 ―1 1 ―1 1 ―1 1 ―1], [1 1 1 ―1 ―1<!-- EPO <DP n="95"> --> ―1 1 1 1 ―1 ―1 ―1], or [<i>e</i><sup>2×<i>π</i>×<i>j</i>×0/6</sup> <i>e</i><sup>2×<i>π</i>×<i>j</i>×1/6</sup> ... <i>e</i><sup>2×<i>π</i>×<i>j</i>×11/6</sup>]. For example, if the Walsh code [1 ―1 1 ―1 1 ―1 1 ―1 1 -1 1 -1] is used, the DMRS port 1 is {Φ(0), Φ(1), Φ(2), ―Φ(3), ―Φ(4), ―Φ(5), Φ(0), Φ(1), Φ(2), ―Φ(3), ―Φ(4), ―Φ(5)}. DFT transform is performed on the sequence used by the DMRS port 1. Optionally, IDFT transform is performed after a sequence obtained after the DFT transform is filtered, to form the DMRS port 1, and the DMRS port 1 occupies the frequency-domain combs 1.</p>
<p id="p0234" num="0234">The third sequence set is used in the orthogonal manner 1 to form the DMRS port 2, and used in the orthogonal manner 4 to form the DMRS port 1 based on the DMRS port 0 and form a DMRS port 3 based on the DMRS port 2.</p>
<p id="p0235" num="0235">The fourth sequence set and the fifth sequence set are used in the orthogonal manner 1 to form the DMRS port 2, and used in the orthogonal manner 5 to form the DMRS port 1 based on the DMRS port 0 and form the DMRS port 3 based on the DMRS port 2.</p>
<p id="p0236" num="0236">The sixth sequence set is used in the orthogonal manner 2 to form the DMRS port 2, and used in the orthogonal manner 4 to form the DMRS port 1 based on the DMRS port 0 and form the DMRS port 3 based on the DMRS port 2.</p>
<p id="p0237" num="0237">The seventh sequence set is used in the orthogonal manner 3 to form the DMRS port 2, and used in the orthogonal manner 4 to form the DMRS port 1 based on the DMRS port 0 and form the DMRS port 3 based on the DMRS port 2.</p>
<p id="p0238" num="0238">The eighth sequence set is used in the orthogonal manner 5 to form the DMRS port 2, and used in the orthogonal manner 5 to form the DMRS port 1 based on the DMRS port 0 and form the DMRS port 3 based on the DMRS port 2.</p>
<p id="p0239" num="0239">The following describes another embodiment of the present invention. The embodiment relates to a sequence-based signal processing method, including:
<ul id="ul0057" list-style="none" compact="compact">
<li>determining a sequence {<i>x<sub>n</sub></i>}, where <i>x<sub>n</sub></i> is an element in the sequence {<i>x<sub>n</sub></i>} , the sequence {<i>x<sub>n</sub></i>} is a sequence satisfying a preset condition, and the preset condition is:
<ul id="ul0058" list-style="none" compact="compact">
<li>the preset condition is <i>x<sub>n</sub></i> = <i>y</i><sub>(<i>n</i>+<i>M)</i>mod <i>K</i></sub> , where <maths id="math0086" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0228" file="imgb0228.tif" wi="25" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, <maths id="math0087" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0229" file="imgb0229.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>, and a set of sequence {<i>s<sub>n</sub></i>} including an element <i>s<sub>n</sub></i> includes at least one of sequences in a first sequence set; and</li>
<li>the sequences included in the first sequence set include:<!-- EPO <DP n="96"> -->
<img id="ib0230" file="imgb0230.tif" wi="165" he="192" img-content="dna" img-format="tif"/>
<img id="ib0231" file="imgb0231.tif" wi="165" he="54" img-content="dna" img-format="tif"/><!-- EPO <DP n="97"> -->
<img id="ib0232" file="imgb0232.tif" wi="165" he="160" img-content="dna" img-format="tif"/>
<img id="ib0233" file="imgb0233.tif" wi="165" he="78" img-content="dna" img-format="tif"/>
<img id="ib0234" file="imgb0234.tif" wi="151" he="5" img-content="dna" img-format="tif"/><!-- EPO <DP n="98"> -->
<img id="ib0235" file="imgb0235.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
<img id="ib0236" file="imgb0236.tif" wi="165" he="62" img-content="dna" img-format="tif"/>
<img id="ib0237" file="imgb0237.tif" wi="165" he="135" img-content="dna" img-format="tif"/><!-- EPO <DP n="99"> -->
<img id="ib0238" file="imgb0238.tif" wi="165" he="21" img-content="dna" img-format="tif"/>
<img id="ib0239" file="imgb0239.tif" wi="165" he="160" img-content="dna" img-format="tif"/>
<img id="ib0240" file="imgb0240.tif" wi="165" he="62" img-content="dna" img-format="tif"/><!-- EPO <DP n="100"> -->
<img id="ib0241" file="imgb0241.tif" wi="165" he="37" img-content="dna" img-format="tif"/></li>
</ul></li>
<li>generating a first signal based on the sequence {<i>x<sub>n</sub></i>} ; and</li>
<li>sending the first signal.</li>
</ul></p>
<p id="p0240" num="0240">It should be understood that, after the sequence {<i>x<sub>n</sub></i>} is generated, the sequence may further be processed according to some or all of steps S301 to S304 in the foregoing embodiment. The terminal device may alternatively be another network device.</p>
<p id="p0241" num="0241">In an embodiment, the set of the sequence {<i>s<sub>n</sub></i>} includes at least one of sequences in a second sequence set, and the second sequence set includes some of the sequences in the first sequence set.</p>
<p id="p0242" num="0242">In an embodiment, the generating a first signal based on the sequence {<i>x<sub>n</sub></i>} includes:
<ul id="ul0059" list-style="none" compact="compact">
<li>performing discrete Fourier transform on N elements in the sequence {<i>x<sub>n</sub></i>} to obtain a sequence {<i>f<sub>n</sub></i>} including N elements;</li>
<li>mapping the N elements in the sequence {<i>f<sub>n</sub></i>} to N subcarriers respectively, to obtain a frequency-domain signal including the N elements; and</li>
<li>generating the first signal based on the frequency-domain signal.</li>
</ul></p>
<p id="p0243" num="0243">In an embodiment, the N subcarriers are N consecutive subcarriers, or N equi-spaced subcarriers.</p>
<p id="p0244" num="0244">In an embodiment, before the performing discrete Fourier transform on N elements in the sequence {<i>x<sub>n</sub></i>}, the first signal processing method further includes: filtering the sequence {<i>x<sub>n</sub></i>}; or<br/>
after the performing discrete Fourier transform on N elements in the sequence {<i>x<sub>n</sub></i>}, the first signal processing method further includes: filtering the sequence {<i>x<sub>n</sub></i>}.</p>
<p id="p0245" num="0245">In an embodiment, the first signal is a reference signal of a second signal, and a modulation scheme of the second signal is π/2 binary phase shift keying BPSK.</p>
<p id="p0246" num="0246">The following describes another embodiment of the present invention. The embodiment relates to a sequence-based signal processing apparatus, including:
<ul id="ul0060" list-style="none">
<li>a determining unit, configured to determine a sequence {<i>x<sub>n</sub></i>}. where <i>x<sub>n</sub></i> is an element in the sequence {<i>x<sub>n</sub></i>}, the sequence {<i>x<sub>n</sub></i>} is a sequence satisfying a preset condition, and the preset condition is:<!-- EPO <DP n="101"> -->
<ul id="ul0061" list-style="none" compact="compact">
<li>the preset condition is <i>x<sub>n</sub></i>= <i>y</i><sub>(<i>n</i>+<i>M</i>)mod<i>K</i></sub> , where <maths id="math0088" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0242" file="imgb0242.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, <maths id="math0089" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0243" file="imgb0243.tif" wi="14" he="7" img-content="math" img-format="tif" inline="yes"/></maths>, and a set of sequence {<i>S<sub>n</sub></i>} including an element <i>S<sub>n</sub></i> includes at least one of sequences in a first sequence set; and</li>
<li>the sequences included in the first sequence set include:
<img id="ib0244" file="imgb0244.tif" wi="165" he="192" img-content="dna" img-format="tif"/>
<img id="ib0245" file="imgb0245.tif" wi="151" he="5" img-content="dna" img-format="tif"/><!-- EPO <DP n="102"> -->
<img id="ib0246" file="imgb0246.tif" wi="165" he="209" img-content="dna" img-format="tif"/>
<img id="ib0247" file="imgb0247.tif" wi="165" he="37" img-content="dna" img-format="tif"/><!-- EPO <DP n="103"> -->
<img id="ib0248" file="imgb0248.tif" wi="165" he="37" img-content="dna" img-format="tif"/>
<img id="ib0249" file="imgb0249.tif" wi="165" he="54" img-content="dna" img-format="tif"/>
<img id="ib0250" file="imgb0250.tif" wi="165" he="62" img-content="dna" img-format="tif"/>
<img id="ib0251" file="imgb0251.tif" wi="165" he="86" img-content="dna" img-format="tif"/><!-- EPO <DP n="104"> -->
<img id="ib0252" file="imgb0252.tif" wi="165" he="70" img-content="dna" img-format="tif"/>
<img id="ib0253" file="imgb0253.tif" wi="165" he="160" img-content="dna" img-format="tif"/>
<img id="ib0254" file="imgb0254.tif" wi="165" he="13" img-content="dna" img-format="tif"/><!-- EPO <DP n="105"> -->
<img id="ib0255" file="imgb0255.tif" wi="165" he="86" img-content="dna" img-format="tif"/></li>
</ul></li>
<li>a generation unit, configured to generate a first signal based on the sequence {<i>x<sub>n</sub></i>}; and</li>
<li>a sending unit, configured to send the first signal.</li>
</ul></p>
<p id="p0247" num="0247">It should be understood that, the foregoing sequence may further be processed according to some or all of steps S301 to S304 in the foregoing embodiment. S301 to S304 may be implemented by one or more individual processing units or processors. The terminal device may alternatively be another network device.</p>
<p id="p0248" num="0248">In an embodiment, the set of the sequence {<i>s<sub>n</sub></i>} includes at least one of sequences in a second sequence set, and the second sequence set includes some of the sequences in the first sequence set.</p>
<p id="p0249" num="0249">In an implementation of this embodiment,
<ul id="ul0062" list-style="none" compact="compact">
<li>the generation unit is further configured to perform discrete Fourier transform on N elements in the sequence {<i>x<sub>n</sub></i>} to obtain a sequence {<i>f<sub>n</sub></i>} including N elements;</li>
<li>the generation unit is further configured to map the N elements in the sequence {<i>f<sub>n</sub></i>} to N subcarriers respectively, to obtain a frequency-domain signal including the N elements; and</li>
<li>the generation unit is further configured to generate the first signal based on the frequency-domain signal.</li>
</ul></p>
<p id="p0250" num="0250">In an implementation of this embodiment, the N subcarriers are N consecutive subcarriers, or N equi-spaced subcarriers.</p>
<p id="p0251" num="0251">In an implementation of this embodiment, in a fourth implementation of the eighth aspect, the signal processing apparatus further includes a filter unit, configured to: filter the sequence {<i>x<sub>n</sub></i>} before the discrete Fourier transform is performed on the N elements; or<br/>
filter the sequence {<i>x<sub>n</sub></i>} after the discrete Fourier transform is performed on the N elements.<!-- EPO <DP n="106"> --></p>
<p id="p0252" num="0252">In an implementation of this embodiment, in a fifth implementation of the eighth aspect, the first signal is a reference signal of a second signal, and a modulation scheme of the second signal is π/2 binary phase shift keying BPSK.</p>
<p id="p0253" num="0253">The foregoing describes in detail the signal processing method according to the embodiments of this application, and the following describes a signal processing apparatus in the embodiments of this application.</p>
<p id="p0254" num="0254"><figref idref="f0007">FIG. 10</figref> is a schematic block diagram of a signal processing apparatus 1000 according to an embodiment of this application.</p>
<p id="p0255" num="0255">It should be understood that, the apparatus 1000 may correspond to the terminal in the embodiment shown in <figref idref="f0003">FIG. 4</figref>, and may have any function of the terminal in the method. The apparatus 1000 includes a transceiver module 1020 and a processing module 1010.</p>
<p id="p0256" num="0256">The processing module 1010 is configured to generate a reference signal of a first signal. The first signal is a signal modulated by using pi/2 BPSK, the reference signal is generated by using a first sequence, and a length of the first sequence is K.</p>
<p id="p0257" num="0257">The transceiver module 1020 is configured to send the reference signal on a first frequency-domain resource. The first frequency-domain resource includes K subcarriers each having a subcarrier number of k, k=u+L<sup>∗</sup>n+delta, n=0, 1, ..., K―1, L is an integer greater than or equal to 2, delta∈{0, 1, ..., L―1}, u is an integer, and the subcarrier numbers are numbered in ascending or descending order of frequencies.</p>
<p id="p0258" num="0258">The processing module 1010 is specifically configured to:<br/>
determine the first sequence, where the first sequence varies as a delta value varies. In an embodiment, that the first sequence varies means that a base sequence {s(n)} of the first sequence varies as the delta value varies.</p>
<p id="p0259" num="0259">Optionally, a modulation scheme of the first sequence is neither BPSK modulation nor π/2 BPSK modulation.</p>
<p id="p0260" num="0260">Optionally, the first sequence is a sequence modulated by using any one of 8PSK, 16PSK, or 32PSK.</p>
<p id="p0261" num="0261">Optionally, the processing module is further configured to determine the first sequence in a first sequence group. The first sequence group is one of a plurality of sequence groups, and the first sequence is determined, based on the delta value, in a plurality of sequences that are in the first sequence group and whose length is K.</p>
<p id="p0262" num="0262">Optionally, the processing module is further configured to determine the first sequence group based on a cell identifier or a sequence group identifier.</p>
<p id="p0263" num="0263">Optionally, the transceiver module is further configured to receive indication information, and the indication information is used to indicate a sequence that is in each of at least two sequence groups and used to generate the reference signal.<!-- EPO <DP n="107"> --></p>
<p id="p0264" num="0264">Optionally, when delta=0, the processing module is specifically configured to:
<ul id="ul0063" list-style="none" compact="compact">
<li>perform discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)} with t=0, ..., L<sup>∗</sup>K―1, where when t=0, 1, ..., L<sup>∗</sup>K―1, z(t)=x(t mod K), and x(t) represents the first sequence; and</li>
<li>map elements numbered L<sup>∗</sup>p+delta in the sequence {f(t)} to the subcarriers each having the subcarrier number of u+L<sup>∗</sup>p+delta respectively, to generate the reference signal, where p=0, ..., K―1.</li>
</ul></p>
<p id="p0265" num="0265">Optionally, when L=2 and delta=1, the processing module is specifically configured to:
<ul id="ul0064" list-style="none" compact="compact">
<li>perform discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)} with t=0, ..., L<sup>∗</sup>K―1, where when t=0, ..., K―1, z(t)=x(t), when t=K, ..., L<sup>∗</sup>K―1, z(t)=―x(t mod K), and x(t) represents the first sequence; and</li>
<li>map elements numbered L<sup>∗</sup>p+delta in the sequence {f(t)} to the subcarriers each having the subcarrier number of u+L<sup>∗</sup>p+delta respectively, to generate the reference signal, where p=0, ..., K-1.</li>
</ul></p>
<p id="p0266" num="0266">Optionally, when L=4, the processing module is specifically configured to:
<ul id="ul0065" list-style="none" compact="compact">
<li>perform discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)} with t=0, ..., 4K―1, where when t=0, 1, ..., 4K―1, <maths id="math0090" num=""><math display="inline"><mi>z</mi><mfenced><mi>t</mi></mfenced><mo>=</mo><msub><mi>w</mi><mi mathvariant="italic">delta</mi></msub><mfenced separators=""><mo>⌊</mo><mfrac><mi>t</mi><mi>K</mi></mfrac><mo>⌋</mo></mfenced><mi>x</mi><mfenced separators=""><mi>t</mi><mspace width="1ex"/><mi>mod</mi><mspace width="1ex"/><mi>K</mi></mfenced></math><img id="ib0256" file="imgb0256.tif" wi="51" he="11" img-content="math" img-format="tif" inline="yes"/></maths>, where w<sub>0</sub> = (1,1,1,1), w<sub>1</sub> = (1,―1,1,―1), w<sub>2</sub> = (1,1,―1,―1), w<sub>3</sub> = (1,―1,―1,1), <maths id="math0091" num=""><math display="inline"><mo>⌊</mo><mi>c</mi><mo>⌋</mo></math><img id="ib0257" file="imgb0257.tif" wi="5" he="5" img-content="math" img-format="tif" inline="yes"/></maths>represents rounding down of c, and x(t) represents the first sequence, where in another embodiment, w<sub>0</sub>= (1,1,1,1), <i>w</i><sub>1</sub> = (1,<i>j,</i>―1,―<i>j</i>), w<sub>2</sub> = (1,―1,1,―1), and <i>w</i><sub>3</sub> =(1, ― <i>j</i>, ― 1, <i>j</i>); and</li>
<li>map elements numbered 4p+delta in the sequence {f(t)} to the subcarriers each having the subcarrier number of u+L<sup>∗</sup>p+delta respectively, to generate the reference signal, where p=0, ..., K―1.</li>
</ul></p>
<p id="p0267" num="0267">Optionally, the processing module is specifically configured to:
<ul id="ul0066" list-style="none" compact="compact">
<li>perform discrete Fourier transform on elements in a sequence {x(t)} to obtain a sequence {f(t)} with t=0, ..., K-1, where x(t) represents the first sequence; and</li>
<li>map elements numbered p in the sequence {f(t)} to the subcarriers each having the subcarrier number of u+L<sup>∗</sup>p+delta respectively, to generate the reference signal, where p=0, ..., K-1.</li>
</ul></p>
<p id="p0268" num="0268">Optionally, the processing module is specifically configured to:
<ul id="ul0067" list-style="none" compact="compact">
<li>perform discrete Fourier transform on the sequence {z(t)}; and</li>
<li>filter a sequence obtained after the discrete Fourier transform, to generate the sequence {f(t)}.</li>
</ul></p>
<p id="p0269" num="0269"><figref idref="f0008">FIG. 11</figref> is a schematic block diagram of a signal processing apparatus 1100 according to an embodiment of this application. The apparatus 1100 may be the terminal shown in <figref idref="f0001">FIG. 1</figref> and the terminal shown in <figref idref="f0003">FIG. 4</figref>. The<!-- EPO <DP n="108"> --> apparatus may use a hardware architecture shown in <figref idref="f0008">FIG. 11</figref>. The apparatus may include a processor 1110 and a transceiver 1120. Optionally, the apparatus may further include a memory 1130. The processor 1110, the transceiver 1120, and the memory 1130 communicate with each other through an internal connection path. A related function implemented by the processing module 1020 in <figref idref="f0007">FIG. 10</figref> may be implemented by the processor 1110, and a related function implemented by the transceiver module 1010 may be implemented by the processor 1110 by controlling the transceiver 1120.</p>
<p id="p0270" num="0270">Optionally, the processor 1110 may be a general-purpose central processing unit (central processing unit, CPU), a microprocessor, an application-specific integrated circuit (application-specific integrated circuit, ASIC), a dedicated processor, or one or more integrated circuits configured to perform the technical solutions in the embodiments of this application. Alternatively, the processor may be one or more devices, circuits, and/or processing cores for processing data (for example, a computer program instruction). For example, the processor may be a baseband processor or a central processing unit. The baseband processor may be configured to process a communication protocol and communication data. The central processing unit may be configured to: control the apparatus (for example, a base station, a terminal, or a chip), execute a software program, and process data of the software program.</p>
<p id="p0271" num="0271">Optionally, the processor 1110 may include one or more processors, for example, include one or more central processing units (central processing unit, CPU). When the processor is one CPU, the CPU may be a single-core CPU or a multi-core CPU.</p>
<p id="p0272" num="0272">The transceiver 1120 is configured to: send data and/or a signal, and receive data and/or a signal. The transceiver may include a transmitter and a receiver. The transmitter is configured to send data and/or a signal, and the receiver is configured to receive data and/or a signal.</p>
<p id="p0273" num="0273">The memory 1130 includes but is not limited to a random access memory (random access memory, RAM), a read-only memory (read-only memory, ROM), an erasable programmable read-only memory (erasable programmable read only memory, EPROM), and a compact disc read-only memory (compact disc read-only memory, CD-ROM). The memory 1130 is configured to store a related instruction and related data.</p>
<p id="p0274" num="0274">The memory 1130 is configured to store program code and data of the terminal, and may be a separate component or integrated into the processor 1110.</p>
<p id="p0275" num="0275">Specifically, the processor 1110 is configured to control the transceiver to perform information transmission with a network device. For details, refer to the descriptions in the foregoing method embodiments. Details are not described herein again.</p>
<p id="p0276" num="0276">It may be understood that <figref idref="f0008">FIG. 11</figref> shows merely a simplified design of the signal processing apparatus.<!-- EPO <DP n="109"> --> During actual application, the apparatus may further include other necessary elements, including but not limited to any quantity of transceivers, processors, controllers, memories, and the like, and all terminals that can implement this application shall fall within the protection scope of this application.</p>
<p id="p0277" num="0277">In a possible design, the apparatus 1100 may be a chip, for example, may be a communications chip that can be used in the terminal, and is configured to implement a related function of the processor 1110 in the terminal. The chip may be a field programmable gate array, dedicated integrated chip, system chip, central processing unit, network processor, digital signal processing circuit, or microcontroller that implements a related function, or may be a programmable controller or another integrated chip. Optionally, the chip may include one or more memories, configured to store program code. When the code is executed, the processor is enabled to implement a corresponding function.</p>
<p id="p0278" num="0278">During specific implementation, in an embodiment, the apparatus 1100 may further include an output device and an input device. The output device communicates with the processor 1110, and may display information in a plurality of manners. For example, the output device may be a liquid crystal display (liquid crystal display, LCD), a light emitting diode (light emitting diode, LED) display device, a cathode ray tube (cathode ray tube, CRT) display device, a projector (projector), or the like. When communicating with the processor 1001, the input device may receive an input of a user in a plurality of manners. For example, the input device may be a mouse, a keyboard, a touchscreen device, or a sensing device.</p>
<p id="p0279" num="0279"><figref idref="f0008">FIG. 12</figref> is a schematic block diagram of a signal processing apparatus 1200 according to an embodiment of this application.</p>
<p id="p0280" num="0280">It should be understood that, the apparatus 1200 may correspond to the network device in the embodiment shown in <figref idref="f0003">FIG. 4</figref>, and may have any function of the network device in the method. The apparatus 1200 includes a transceiver module 1220 and a processing module 1210.</p>
<p id="p0281" num="0281">The processing module 1210 is configured to generate a local sequence. The local sequence is a first sequence or a conjugate transpose of a first sequence, and the local sequence is used to process a first signal. The first signal is a signal modulated by using pi/2 BPSK.</p>
<p id="p0282" num="0282">The transceiver module 1220 is configured to receive a reference signal of the first signal on a first frequency-domain resource. The first frequency-domain resource includes K subcarriers each having a subcarrier number of k, k=u+M<sup>∗</sup>n+delta, n=0, 1, ..., K―1, M is an integer greater than or equal to 2, delta∈{0, 1, ..., M―1}, u is an integer, and the subcarrier numbers are numbered in ascending or descending order of frequencies. The reference signal is generated by using the first sequence. The first sequence varies as a delta value varies.</p>
<p id="p0283" num="0283">Optionally, the transceiver module is further configured to send indication information. The indication<!-- EPO <DP n="110"> --> information is used to indicate a sequence that is in each of at least two sequence groups and used to generate the reference signal.</p>
<p id="p0284" num="0284"><figref idref="f0009">FIG. 13</figref> shows a signal processing apparatus 1300 according to an embodiment of this application. The apparatus 1300 may be the network device shown in <figref idref="f0001">FIG. 1</figref> and the network device in <figref idref="f0003">FIG. 4</figref>. The apparatus may use a hardware architecture shown in <figref idref="f0009">FIG. 13</figref>. The apparatus may include a processor 1310 and a transceiver 1320. Optionally, the apparatus may further include a memory 1330. The processor 1310, the transceiver 1320, and the memory 1330 communicate with each other through an internal connection path. A related function implemented by the processing module 1220 in <figref idref="f0008">FIG. 12</figref> may be implemented by the processor 1310, and a related function implemented by the transceiver module 1210 may be implemented by the processor 1310 by controlling the transceiver 1320.</p>
<p id="p0285" num="0285">Optionally, the processor 1310 may be a general-purpose central processing unit (central processing unit, CPU), a microprocessor, an application-specific integrated circuit (application-specific integrated circuit, ASIC), a dedicated processor, or one or more integrated circuits configured to perform the technical solutions in the embodiments of this application. Alternatively, the processor may be one or more devices, circuits, and/or processing cores for processing data (for example, a computer program instruction). For example, the processor may be a baseband processor or a central processing unit. The baseband processor may be configured to process a communication protocol and communication data. The central processing unit may be configured to: control the apparatus (for example, a base station, a terminal, or a chip), execute a software program, and process data of the software program.</p>
<p id="p0286" num="0286">Optionally, the processor 1310 may include one or more processors, for example, include one or more central processing units (central processing unit, CPU). When the processor is one CPU, the CPU may be a single-core CPU or a multi-core CPU.</p>
<p id="p0287" num="0287">The transceiver 1320 is configured to: send data and/or a signal, and receive data and/or a signal. The transceiver may include a transmitter and a receiver. The transmitter is configured to send data and/or a signal, and the receiver is configured to receive data and/or a signal.</p>
<p id="p0288" num="0288">The memory 1330 includes but is not limited to a random access memory (random access memory, RAM), a read-only memory (read-only memory, ROM), an erasable programmable read-only memory (erasable programmable read only memory, EPROM), and a compact disc read-only memory (compact disc read-only memory, CD-ROM). The memory 1330 is configured to store a related instruction and related data.</p>
<p id="p0289" num="0289">The memory 1330 is configured to store program code and data of the terminal, and may be a separate component or integrated into the processor 1310.<!-- EPO <DP n="111"> --></p>
<p id="p0290" num="0290">Specifically, the processor 1310 is configured to control the transceiver to perform information transmission with the network device. For details, refer to the descriptions in the foregoing method embodiments. Details are not described herein again.</p>
<p id="p0291" num="0291">During specific implementation, in an embodiment, the apparatus 1300 may further include an output device and an input device. The output device communicates with the processor 1310, and may display information in a plurality of manners. For example, the output device may be a liquid crystal display (liquid crystal display, LCD), a light emitting diode (light emitting diode, LED) display device, a cathode ray tube (cathode ray tube, CRT) display device, a projector (projector), or the like. When communicating with the processor 1001, the input device may receive an input of a user in a plurality of manners. For example, the input device may be a mouse, a keyboard, a touchscreen device, or a sensing device.</p>
<p id="p0292" num="0292">It may be understood that <figref idref="f0009">FIG. 13</figref> shows merely a simplified design of the signal processing apparatus. During actual application, the apparatus may further include other necessary elements, including but not limited to any quantity of transceivers, processors, controllers, memories, and the like, and all terminals that can implement this application shall fall within the protection scope of this application.</p>
<p id="p0293" num="0293">In a possible design, the apparatus 1300 may be a chip, for example, may be a communications chip that can be used in the terminal, and is configured to implement a related function of the processor 1310 in the terminal. The chip may be a field programmable gate array, dedicated integrated chip, system chip, central processing unit, network processor, digital signal processing circuit, or microcontroller that implements a related function, or may be a programmable controller or another integrated chip. Optionally, the chip may include one or more memories, configured to store program code. When the code is executed, the processor is enabled to implement a corresponding function.</p>
<p id="p0294" num="0294">An embodiment of this application further provides an apparatus. The apparatus may be a terminal or a circuit. The apparatus may be configured to perform an action performed by the terminal in the foregoing method embodiments.</p>
<p id="p0295" num="0295">Optionally, when the apparatus in this embodiment is a terminal, <figref idref="f0009">FIG. 14</figref> is a simplified schematic structural diagram of a terminal. For ease of understanding and convenience of figure illustration, an example in which the terminal is a mobile phone is used in <figref idref="f0009">FIG. 14</figref>. As shown in <figref idref="f0009">FIG. 14</figref>, the terminal includes a processor, a memory, a radio frequency circuit, an antenna, and an input/output apparatus. The processor is mainly configured to: process a communication protocol and communication data, and control the terminal to execute a software program, process data of the software program, and so on. The memory is mainly configured to store the software program and data. The radio frequency circuit is mainly configured to: perform conversion between a baseband signal and a radio<!-- EPO <DP n="112"> --> frequency signal, and process the radio frequency signal. The antenna is mainly configured to send and receive a radio frequency signal in an electromagnetic wave form. The input/output apparatus, such as a touchscreen, a display, or a keyboard, is mainly configured to receive data input by a user and data output to the user. It should be noted that some types of terminals may not have an input/output apparatus.</p>
<p id="p0296" num="0296">When data needs to be sent, the processor performs baseband processing on the to-be-sent data, and then outputs a baseband signal to the radio frequency circuit. The radio frequency circuit performs radio frequency processing on the baseband signal, and then sends the radio frequency signal in an electromagnetic wave form via the antenna. When data is sent to the terminal, the radio frequency circuit receives a radio frequency signal via the antenna, converts the radio frequency signal into a baseband signal, and outputs the baseband signal to the processor. The processor converts the baseband signal into data, and processes the data. For ease of description, <figref idref="f0009">FIG. 14</figref> shows only one memory and one processor. In an actual terminal product, there may be one or more processors and one or more memories. The memory may also be referred to as a storage medium, a storage device, or the like. The memory may be disposed independent of the processor, or may be integrated with the processor. This is not limited in this embodiment of this application.</p>
<p id="p0297" num="0297">In this embodiment of this application, an antenna and a radio frequency circuit that have receiving and sending functions may be considered as a transceiver unit of the terminal, and a processor that has a processing function may be considered as a processing unit of the terminal. As shown in <figref idref="f0009">FIG. 14</figref>, the terminal includes a transceiver unit 1410 and a processing unit 1420. The transceiver unit may also be referred to as a transceiver, a transceiver machine, a transceiver apparatus, or the like. The processing unit may also be referred to as a processor, a processing board, a processing module, a processing apparatus, or the like. Optionally, a component that is in the transceiver unit 1410 and that is configured to implement a receiving function may be considered as a receiving unit, and a component that is in the transceiver unit 1410 and that is configured to implement a sending function may be considered as a sending unit. In other words, the transceiver unit 1410 includes the receiving unit and the sending unit. The transceiver unit sometimes may also be referred to as a transceiver machine, a transceiver, a transceiver circuit, or the like. The receiving unit sometimes may also be referred to as a receiver machine, a receiver, a receiving circuit, or the like. The sending unit sometimes may also be referred to as a transmitter machine, a transmitter, a transmitter circuit, or the like.</p>
<p id="p0298" num="0298">It should be understood that the transceiver unit 1410 is configured to perform a sending operation and a receiving operation on the terminal side in the foregoing method embodiments, and the processing unit 1420 is configured to perform another operation other than the sending and receiving operations of the terminal in the foregoing method embodiments.<!-- EPO <DP n="113"> --></p>
<p id="p0299" num="0299">For example, in an implementation, the processing unit 1420 is configured to perform an operation in step 403 in <figref idref="f0003">FIG. 4</figref>, and/or the processing unit 1420 is further configured to perform another processing step on the terminal side in the embodiments of this application. The transceiver unit 1410 is configured to perform sending and receiving operations in step 401, step 402, and/or step 404 in <figref idref="f0003">FIG. 4</figref>, and/or the transceiver unit 1410 is further configured to perform other sending and receiving steps on the terminal side in the embodiments of this application.</p>
<p id="p0300" num="0300">When the communications apparatus is a chip, the chip includes a transceiver unit and a processing unit. The transceiver unit may be an input/output circuit or a communications interface. The processing unit is a processor, a microprocessor, or an integrated circuit, integrated on the chip.</p>
<p id="p0301" num="0301">Optionally, when the apparatus is a terminal, reference may be further made to a device shown in <figref idref="f0010">FIG. 15</figref>. In an example, the device may implement a function similar to that of the processor 1410 in <figref idref="f0009">FIG. 14</figref>. In <figref idref="f0010">FIG. 15</figref>, the device includes a processor 1501, a data sending processor 1503, and a data receiving processor 1505. The processing module 610 and the processing module 1720 in the foregoing embodiments each may be the processor 1501 in <figref idref="f0010">FIG. 15</figref>, and complete a corresponding function. The transceiver module 620 and the transceiver module 610 in the foregoing embodiments may be the data sending processor 1503 and the data receiving processor 1505 in <figref idref="f0010">FIG. 15</figref>. Although a channel encoder and a channel decoder are shown in the <figref idref="f0010">FIG. 15</figref>, it may be understood that the modules are merely an example, and do not constitute a limitation on this embodiment.</p>
<p id="p0302" num="0302"><figref idref="f0011">FIG. 16</figref> shows another form of this embodiment. A processing apparatus 1600 includes modules such as a modulation subsystem, a central processing subsystem, and a peripheral subsystem. A communications device in this embodiment may be used as the modulation subsystem in the processing apparatus 1600. Specifically, the modulation subsystem may include a processor 1603 and an interface 1604. The processor 1603 implements a function of the processing module 610, and the interface 1604 implements a function of the transceiver module 620. In another variant, the modulation subsystem includes a memory 1606, a processor 1603, and a program that is stored in the memory 1603 and that can be run by the processor. When executing the program, the processor implements the method according to any one of Embodiment 1 to Embodiment 5. It should be noted that the memory 1606 may be nonvolatile or volatile. The memory 1606 may be located in the modulation subsystem, or may be located in the processing apparatus 1600, as long as the memory 1606 can be connected to the processor 1603.</p>
<p id="p0303" num="0303">When the apparatus in this embodiment is a network device, the network device may be shown in <figref idref="f0012">FIG. 17</figref>. An apparatus 1700 includes one or more radio frequency units, such as a remote radio unit (remote radio unit, RRU) 1710, and one or more baseband units (baseband unit, BBU) (which may also be referred to as a digital unit, digital unit, DU) 1720. The RRU 1710 may be referred to as a transceiver module, and corresponds to the transceiver unit 810 in <figref idref="f0006">FIG. 8</figref>. Optionally, the transceiver module may also be referred to as a transceiver machine, a transceiver<!-- EPO <DP n="114"> --> circuit, a transceiver, or the like, and may include at least one antenna 1715 and a radio frequency unit 1716. The RRU 1710 is mainly configured to: receive and send a radio frequency signal, and perform conversion between a radio frequency signal and a baseband signal, for example, configured to send indication information to a terminal device. The BBU 1710 is mainly configured to: perform baseband processing, control a base station, and so on. The RRU 1710 and the BBU 1720 may be physically disposed together, or may be physically separated, namely, a distributed base station.</p>
<p id="p0304" num="0304">The BBU 1720 is a control center of the base station, and may also be referred to as a processing module. The BBU 1720 may correspond to the processing unit 820 in <figref idref="f0006">FIG. 8</figref>, and is mainly configured to implement a baseband processing function, for example, channel coding, multiplexing, modulation, or spreading. For example, the BBU (processing module) may be configured to control the base station to execute an operation procedure related to the network device in the foregoing method embodiments, for example, to generate the indication information.</p>
<p id="p0305" num="0305">In an example, the BBU 1720 may include one or more boards, and a plurality of boards may jointly support a radio access network (such as an LTE network) having a single access standard, or may separately support radio access networks (for example, an LTE network, a 5G network, or another network) having different access standards. The BBU 1720 further includes a memory 1721 and a processor 1722. The memory 1721 is configured to store a necessary instruction and necessary data. The processor 1722 is configured to control the base station to perform a necessary action, for example, configured to control the base station to perform an operation procedure related to the network device in the foregoing method embodiments. The memory 1721 and the processor 1722 may serve one or more boards. In other words, a memory and a processor may be independently disposed on each board. Alternatively, a plurality of boards may share a same memory and a same processor. In addition, a necessary circuit may further be disposed on each board.</p>
<p id="p0306" num="0306">In another form of this embodiment, a computer-readable storage medium is provided. The computer-readable storage medium stores an instruction. When the instruction is executed, a method in the foregoing method embodiments is performed.</p>
<p id="p0307" num="0307">In another form of this embodiment, a computer program product including an instruction is provided. When the instruction is executed, a method in the foregoing method embodiments is performed.</p>
<p id="p0308" num="0308">All or some of the foregoing embodiments may be implemented by using software, hardware, firmware, or any combination thereof. When being implemented by using the software, all or some of the embodiments may be implemented in a form of a computer program product. The computer program product includes one or more computer instructions. When the computer instructions are loaded and executed on a computer, the procedures or functions according to the embodiments of this application are all or partially generated. The computer may be a general-purpose<!-- EPO <DP n="115"> --> computer, a dedicated computer, a computer network, or another programmable apparatus. The computer instructions may be stored in a computer-readable storage medium or may be transmitted from a computer-readable storage medium to another computer-readable storage medium. For example, the computer instructions may be transmitted from a website, computer, server, or data center to another website, computer, server, or data center in a wired (for example, a coaxial cable, an optical fiber, or a digital subscriber line (DSL)) or wireless (for example, infrared, radio, and microwave, or the like) manner. The computer-readable storage medium may be any usable medium accessible by a computer, or a data storage device, such as a server or a data center, integrating one or more usable media. The usable medium may be a magnetic medium (for example, a floppy disk, a hard disk, or a magnetic tape), an optical medium (for example, a high density digital video disc (digital video disc, DVD)), a semiconductor medium (for example, a solid-state drive (solid state disk, SSD)), or the like.</p>
<p id="p0309" num="0309">It should be understood that, the processor may be an integrated circuit chip, and has a signal processing capability. In an implementation process, the steps in the foregoing method embodiments may be completed by using a hardware integrated logical circuit in the processor or an instruction in a form of software. The foregoing processor may be a general-purpose processor, a digital signal processor (digital signal processor, DSP), an application-specific integrated circuit (application specific integrated circuit, ASIC), a field programmable gate array (field programmable gate array, FPGA) or another programmable logic device, a discrete gate or a transistor logic device, or a discrete hardware component. The methods, the steps, and logical block diagrams that are disclosed in the embodiments of this application may be implemented or performed. The general-purpose processor may be a microprocessor, or the processor may be any conventional processor or the like. The steps of the methods disclosed with reference to the embodiments of this application may be directly executed and completed by using a hardware decoding processor, or may be executed and completed by using a combination of hardware and software modules in the decoding processor. A software module may be located in a mature storage medium in the art, such as a random access memory, a flash memory, a read-only memory, a programmable read-only memory, an electrically erasable programmable memory, a register, or the like. The storage medium is located in the memory, and the processor reads information in the memory and completes the steps in the foregoing methods in combination with hardware of the processor.</p>
<p id="p0310" num="0310">It may be understood that the memory in the embodiments of this application may be a volatile memory or a nonvolatile memory, or may include both a volatile memory and a nonvolatile memory. The nonvolatile memory may be a read-only memory (read-only memory, ROM), a programmable read-only memory (programmable ROM, PROM), an erasable programmable read-only memory (erasable PROM, EPROM), an electrically erasable programmable read-only memory (electrically EPROM, EEPROM), or a flash memory. The volatile memory may be a random access memory (random access memory, RAM), used as an external cache. Through examples but not<!-- EPO <DP n="116"> --> limitative descriptions, RAMs in many forms are used, for example, a static random access memory (static RAM, SRAM), a dynamic random access memory (dynamic RAM, DRAM), a synchronous dynamic random access memory (synchronous DRAM, SDRAM), a double data rate synchronous dynamic random access memory (double data rate SDRAM, DDR SDRAM), an enhanced synchronous dynamic random access memory (enhanced SDRAM, ESDRAM), a synchronous link dynamic random access memory (synchronous link DRAM, SLDRAM), and a direct rambus random access memory (direct rambus RAM, DR RAM).</p>
<p id="p0311" num="0311">In this application, "at least one" means one or more, and "a plurality of" means two or more. The term "and/or" describes an association relationship between associated objects and may indicate three relationships. For example, A and/or B may indicate the following cases: Only A exists, both A and B exist, and only B exists, where A and B may be singular or plural. The character "/" generally indicates an "or" relationship between the associated objects. "At least one item (piece) of the following" or a similar expression thereof means any combination of these items, including any combination of singular items (pieces) or plural items (pieces). For example, at least one (piece) of a, b, or c may indicate: a, b, c, a-b, a-c, b-c, or a-b-c, where a, b, and c may be singular or plural.</p>
<p id="p0312" num="0312">It should be understood that "one embodiment" or "an embodiment" mentioned in the whole specification means that particular features, structures, or characteristics related to the embodiment are included in at least one embodiment of the present invention. Therefore, "in one embodiment" or "in an embodiment" appearing throughout the entire specification does not necessarily refer to a same embodiment. In addition, these particular features, structures, or characteristics may be combined in one or more embodiments in any appropriate manner. It should be understood that sequence numbers of the foregoing processes do not mean execution sequences in various embodiments of the present invention. The execution sequences of the processes should be determined based on functions and internal logic of the processes, and should not be construed as any limitation on the implementation processes of the embodiments of the present invention.</p>
<p id="p0313" num="0313">Terms such as "part", "module", and "system" used in this specification are used to indicate computer-related entities, hardware, firmware, combinations of hardware and software, software, or software being executed. For example, a part may be, but is not limited to, a process, processor, object, executable file, thread of execution, program, and/or computer that runs on a processor. As shown in figures, both a computing device and an application running on a computing device may be parts. One or more parts may reside within a process and/or a thread of execution, and the part may be located on one computer and/or distributed between two or more computers. In addition, these parts may be executed from various computer-readable media that store various data structures. For example, the parts may communicate by using a local and/or remote process and based on, for example, a signal having one or more data packets (for example, data from two parts interacting with another part in a local system, a distributed<!-- EPO <DP n="117"> --> system, and/or across a network such as the internet interacting with other systems by using the signal).</p>
<p id="p0314" num="0314">It should be understood that, first, second, and various numerical symbols are for distinguishing only for ease of description, and are not used to limit a scope of the embodiments of this application.</p>
<p id="p0315" num="0315">It should be understood that the term "and/or" in this specification describes only an association relationship for describing associated objects and represents that three relationships may exist. For example, A and/or B may represent the following three cases: Only A exists, both A and B exist, and only B exists. A or B exists separately, and a quantity of A or B is not limited. In an example in which only A exists, it may be understood that there is one or more As.</p>
<p id="p0316" num="0316">A person of ordinary skill in the art may be aware that, in combination with the examples described in the embodiments disclosed in this specification, units and algorithm steps may be implemented by electronic hardware or a combination of computer software and electronic hardware. Whether the functions are performed by hardware or software depends on particular applications and design constraint conditions of the technical solutions. A person skilled in the art may use different methods to implement the described functions for each particular application, but it should not be considered that the implementation goes beyond the scope of this application.</p>
<p id="p0317" num="0317">It may be clearly understood by the person skilled in the art that, for the purpose of convenient and brief description, for a detailed working process of the foregoing system, apparatus, and unit, refer to a corresponding process in the foregoing method embodiments, and details are not described herein again.</p>
<p id="p0318" num="0318">In the several embodiments provided in this application, it should be understood that the disclosed system, apparatus, and method may be implemented in another manner. For example, the apparatus embodiments described above are merely examples. For example, division into the units is merely logical function division, and may be other division in actual implementation. For example, a plurality of units or components may be combined or integrated into another system, or some features may be ignored or not performed. In addition, the displayed or discussed mutual couplings or direct couplings or communication connections may be implemented through some interfaces. The indirect couplings or communication connections between the apparatuses or units may be implemented in electronic, mechanical, or other forms.</p>
<p id="p0319" num="0319">The units described as separate parts may or may not be physically separate, and parts displayed as units may or may not be physical units, may be located in one position, or may be distributed to a plurality of network units. Some or all of the units may be selected based on actual requirements to achieve the objectives of the solutions of the embodiments.</p>
<p id="p0320" num="0320">In addition, function units in the embodiments of this application may be integrated into one processing unit, or each of the units may exist alone physically, or two or more units are integrated into one unit.<!-- EPO <DP n="118"> --></p>
<p id="p0321" num="0321">When the functions are implemented in a form of a software function unit and sold or used as an independent product, the functions may be stored in a computer-readable storage medium. Based on such an understanding, the technical solutions of this application essentially, or the part contributing to the prior art, or some of the technical solutions may be implemented in a form of a software product. The software product is stored in a storage medium, and includes several instructions for instructing a computer device (which may be a personal computer, a server, or a network device) to perform all or some of the steps of the method described in the embodiments of this application. The foregoing storage medium includes: any medium that can store program code, such as a USB flash drive, a removable hard disk, a read-only memory (read-only memory, ROM), a random access memory (random access memory, RAM), a magnetic disk, or an optical disc.</p>
<p id="p0322" num="0322">The foregoing descriptions are merely specific implementations of this application, but are not intended to limit the protection scope of this application. Any variation or replacement readily figured out by the person skilled in the art within the technical scope disclosed in this application shall fall within the protection scope of this application. Therefore, the protection scope of this application shall be subject to the protection scope of the claims.</p>
</description>
<claims id="claims01" lang="en"><!-- EPO <DP n="119"> -->
<claim id="c-en-0001" num="0001">
<claim-text>A signal processing method, comprising:
<claim-text>generating a reference signal of a first signal, wherein the first signal is a signal modulated by using π/2 binary phase shift keying BPSK, the reference signal is generated by using a first sequence, and a length of the first sequence is K; and</claim-text>
<claim-text>sending the reference signal on a first frequency-domain resource, wherein the first frequency-domain resource comprises K subcarriers each having a subcarrier number of k, k=u+L<sup>∗</sup>n+delta, n=0, 1, ..., K―1, L is an integer greater than or equal to 2, delta∈{0, 1, ..., L―1}, u is an integer, and the subcarrier numbers are numbered in ascending or descending order of frequencies, wherein</claim-text>
<claim-text>before the reference signal is generated, the method further comprises:<br/>
determining the first sequence, wherein the first sequence varies as a delta value varies.</claim-text></claim-text></claim>
<claim id="c-en-0002" num="0002">
<claim-text>The method according to claim 1, wherein a modulation scheme of the first sequence is neither BPSK modulation nor pi/2 BPSK modulation.</claim-text></claim>
<claim id="c-en-0003" num="0003">
<claim-text>The method according to claim 1 or 2, wherein the first sequence is a sequence modulated by using any one of 8PSK, 16PSK, or 32PSK.</claim-text></claim>
<claim id="c-en-0004" num="0004">
<claim-text>The method according to any one of claims 1 to 3, wherein the method further comprises:<br/>
determining the first sequence in a first sequence group, wherein the first sequence group is one of a plurality of sequence groups, and the first sequence is determined, based on the delta value, in a plurality of sequences that are in the first sequence group and whose length is K.</claim-text></claim>
<claim id="c-en-0005" num="0005">
<claim-text>The method according to claim 4, wherein the method further comprises:<br/>
determining the first sequence group based on a cell identifier or a sequence group identifier.</claim-text></claim>
<claim id="c-en-0006" num="0006">
<claim-text>The method according to claim 4 or 5, wherein the method further comprises:<br/>
receiving indication information, wherein the indication information is used to indicate a sequence that is in each of at least two sequence groups and used to generate the reference signal.</claim-text></claim>
<claim id="c-en-0007" num="0007">
<claim-text>The method according to claim 1, wherein when delta=0, the generating a reference signal of a first signal comprises:
<claim-text>performing discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)} with t=0, ..., L<sup>∗</sup>K―1, wherein when t=0, 1, ..., L<sup>∗</sup>K―1, z(t)=x(t mod K), and x(t) represents the first sequence; and</claim-text>
<claim-text>mapping elements numbered L<sup>∗</sup>p+delta in the sequence {f(t)} to the subcarriers each having the subcarrier<!-- EPO <DP n="120"> --> number of u+L*p+delta respectively, to generate the reference signal, wherein p=0, ..., K―1.</claim-text></claim-text></claim>
<claim id="c-en-0008" num="0008">
<claim-text>The method according to claim 1, wherein when delta=1, the generating a reference signal of a first signal comprises:
<claim-text>performing discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)} with t=0, ..., L<sup>∗</sup>K―1, wherein when t=0, ..., K―1, z(t)=x(t), when t=K, ..., L<sup>∗</sup>K―1, z(t)=-x(t mod K), and x(t) represents the first sequence; and</claim-text>
<claim-text>mapping elements numbered L*p+delta in the sequence {f(t)} to the subcarriers each having the subcarrier number of u+L*p+delta respectively, to generate the reference signal, wherein p=0, ..., K-1.</claim-text></claim-text></claim>
<claim id="c-en-0009" num="0009">
<claim-text>The method according to claim 1, wherein when L=4, the generating a reference signal of a first signal comprises:
<claim-text>performing discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)} with t=0, ..., 4K―1, wherein when t=0, 1, ..., 4K―1, <maths id="math0092" num=""><math display="inline"><mi>z</mi><mfenced><mi>t</mi></mfenced><mo>=</mo><msub><mi>w</mi><mi mathvariant="italic">delta</mi></msub><mfenced separators=""><mo>⌊</mo><mfrac><mi>t</mi><mi>K</mi></mfrac><mo>⌋</mo></mfenced><mi>x</mi><mfenced separators=""><mi>t</mi><mspace width="1ex"/><mi>mod</mi><mspace width="1ex"/><mi>K</mi></mfenced></math><img id="ib0258" file="imgb0258.tif" wi="50" he="11" img-content="math" img-format="tif" inline="yes"/></maths>, wherein <i>w</i><sub>0</sub> = (1,1,1,1) , <i>w</i><sub>1</sub> = (1, <i>j</i>, ―1, ― <i>j</i>), <i>w</i><sub>2</sub> = (1, ―1, 1, ―1), <i>w</i><sub>3</sub> = (1, ― <i>j</i>, <i>―</i>1<i>, j</i>), <maths id="math0093" num=""><math display="inline"><mo>⌊</mo><mi>c</mi><mo>⌋</mo></math><img id="ib0259" file="imgb0259.tif" wi="5" he="5" img-content="math" img-format="tif" inline="yes"/></maths>represents rounding down of c, and x(t) represents the first sequence; and</claim-text>
<claim-text>mapping elements numbered 4p+delta in the sequence {f(t)} to the subcarriers each having the subcarrier number of u+L*p+delta respectively, to generate the reference signal, wherein p=0, ..., K-1.</claim-text></claim-text></claim>
<claim id="c-en-0010" num="0010">
<claim-text>The method according to claim 1, wherein the generating a reference signal of a first signal comprises:
<claim-text>performing discrete Fourier transform on elements in a sequence {x(t)} to obtain a sequence {f(t)} with t=0, ..., K-1, wherein x(t) represents the first sequence; and</claim-text>
<claim-text>mapping elements numbered p in the sequence {f(t)} to the subcarriers each having the subcarrier number of u+L<sup>∗</sup>p+delta respectively, to generate the reference signal, wherein p=0, ..., K―1.</claim-text></claim-text></claim>
<claim id="c-en-0011" num="0011">
<claim-text>The method according to any one of claims 7 to 10, wherein the performing discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)} comprises:
<claim-text>performing the discrete Fourier transform on the sequence {z(t)}; and</claim-text>
<claim-text>filtering a sequence obtained after the discrete Fourier transform, to generate the sequence {f(t)}.</claim-text></claim-text></claim>
<claim id="c-en-0012" num="0012">
<claim-text>The method according to any one of claims 1 to 11, wherein when delta=0, the method further comprises:
<claim-text>determining the first sequence {x(n)} based on a preset condition and a sequence {s(n)}, wherein the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, wherein <maths id="math0094" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>16</mn></mfrac></msup></math><img id="ib0260" file="imgb0260.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0095" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0261" file="imgb0261.tif" wi="15" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and<!-- EPO <DP n="121"> --></claim-text>
<claim-text>the sequence {s(n)} comprises at least one of the following sequences:
<img id="ib0262" file="imgb0262.tif" wi="165" he="217" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0013" num="0013">
<claim-text>The method according to any one of claims 1 to 11, wherein when delta=1, the method further comprises:
<claim-text>determining the first sequence based on a preset condition and a sequence {s(n)}, wherein the preset condition is<!-- EPO <DP n="122"> --> x<sub>n</sub>=y<sub>(n+M)modK</sub>, wherein <maths id="math0096" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>16</mn></mfrac></msup></math><img id="ib0263" file="imgb0263.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5}, K=6, A is a non-zero complex number, and <maths id="math0097" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0264" file="imgb0264.tif" wi="15" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</claim-text>
<claim-text>the sequence {s(n)} comprises at least one of the following sequences:
<img id="ib0265" file="imgb0265.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
or
<img id="ib0266" file="imgb0266.tif" wi="165" he="160" img-content="dna" img-format="tif"/><!-- EPO <DP n="123"> -->
<img id="ib0267" file="imgb0267.tif" wi="165" he="21" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0014" num="0014">
<claim-text>The method according to any one of claims 1 to 11, wherein when delta=0, the method further comprises:
<claim-text>determining the first sequence based on a preset condition and a sequence {s<sub>n</sub>}, wherein the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, wherein <maths id="math0098" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0268" file="imgb0268.tif" wi="24" he="10" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{ 0, 1, 2, ..., 5}, K=6, A is a non-zero complex number, and <maths id="math0099" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0269" file="imgb0269.tif" wi="15" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</claim-text>
<claim-text>the sequence {s<sub>n</sub>} comprises at least one of the following sequences:
<img id="ib0270" file="imgb0270.tif" wi="165" he="46" img-content="dna" img-format="tif"/>
or
<img id="ib0271" file="imgb0271.tif" wi="165" he="86" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0015" num="0015">
<claim-text>The method according to any one of claims 1 to 11, wherein when delta=0, the method further comprises:
<claim-text>determining the first sequence based on a preset condition and a sequence {s<sub>n</sub>}, wherein the preset condition is <i>x<sub>n</sub></i> = y<sub>(<i>n</i>+<i>M</i>)mod <i>K</i></sub> , wherein <maths id="math0100" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0272" file="imgb0272.tif" wi="24" he="10" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5}, K=6, A is a non-zero complex number, and<!-- EPO <DP n="124"> --> <maths id="math0101" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0273" file="imgb0273.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</claim-text>
<claim-text>the sequence {s<sub>n</sub>} comprises at least one of the following sequences:
<img id="ib0274" file="imgb0274.tif" wi="165" he="192" img-content="dna" img-format="tif"/>
or
<img id="ib0275" file="imgb0275.tif" wi="165" he="29" img-content="dna" img-format="tif"/><!-- EPO <DP n="125"> -->
<img id="ib0276" file="imgb0276.tif" wi="165" he="184" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0016" num="0016">
<claim-text>The method according to any one of claims 1 to 11, wherein when delta=1, the method further comprises:
<claim-text>determining the first sequence based on a preset condition and a sequence {s<sub>n</sub>}, wherein the preset condition is x<sub>n</sub> = <i>y</i><sub>(<i>n</i>+<i>M</i>)mod <i>K</i></sub> , wherein <maths id="math0102" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0277" file="imgb0277.tif" wi="25" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5 }, K=6, A is a non-zero complex number, and <maths id="math0103" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0278" file="imgb0278.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</claim-text>
<claim-text>the sequence {s<sub>n</sub>} comprises at least one of the following sequences:
<img id="ib0279" file="imgb0279.tif" wi="160" he="5" img-content="dna" img-format="tif"/><!-- EPO <DP n="126"> -->
<img id="ib0280" file="imgb0280.tif" wi="165" he="70" img-content="dna" img-format="tif"/>
<img id="ib0281" file="imgb0281.tif" wi="165" he="119" img-content="dna" img-format="tif"/>
<img id="ib0282" file="imgb0282.tif" wi="165" he="54" img-content="dna" img-format="tif"/><!-- EPO <DP n="127"> -->
<img id="ib0283" file="imgb0283.tif" wi="165" he="103" img-content="dna" img-format="tif"/>
<img id="ib0284" file="imgb0284.tif" wi="165" he="144" img-content="dna" img-format="tif"/><!-- EPO <DP n="128"> -->
<img id="ib0285" file="imgb0285.tif" wi="165" he="13" img-content="dna" img-format="tif"/>
or
<img id="ib0286" file="imgb0286.tif" wi="165" he="103" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0017" num="0017">
<claim-text>The method according to any one of claims 1 to 11, wherein when delta=1, the method further comprises:
<claim-text>determining the first sequence based on a preset condition and a sequence {s<sub>n</sub>}, wherein the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, wherein <maths id="math0104" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0287" file="imgb0287.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0105" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0288" file="imgb0288.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</claim-text>
<claim-text>the sequence {s<sub>n</sub>} comprises at least one of the following sequences:
<img id="ib0289" file="imgb0289.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
or
<img id="ib0290" file="imgb0290.tif" wi="165" he="21" img-content="dna" img-format="tif"/><!-- EPO <DP n="129"> -->
<img id="ib0291" file="imgb0291.tif" wi="165" he="54" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0018" num="0018">
<claim-text>The method according to any one of claims 1 to 11, wherein when delta=0, the method further comprises:
<claim-text>determining the first sequence based on a preset condition and a sequence {s<sub>n</sub>}, wherein the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, wherein <maths id="math0106" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>32</mn></mfrac></msup></math><img id="ib0292" file="imgb0292.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0107" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0293" file="imgb0293.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</claim-text>
<claim-text>the sequence {s<sub>n</sub>} comprises at least one of the following sequences:
<img id="ib0294" file="imgb0294.tif" wi="165" he="54" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0019" num="0019">
<claim-text>The method according to any one of claims 1 to 11, wherein when delta=1, the method further comprises:
<claim-text>determining the first sequence based on a preset condition and a sequence {s<sub>n</sub>}, wherein the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, wherein <maths id="math0108" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>32</mn></mfrac></msup></math><img id="ib0295" file="imgb0295.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0109" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0296" file="imgb0296.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</claim-text>
<claim-text>the sequence {s<sub>n</sub>} comprises at least one of the following sequences:
<img id="ib0297" file="imgb0297.tif" wi="165" he="29" img-content="dna" img-format="tif"/><!-- EPO <DP n="130"> -->
<img id="ib0298" file="imgb0298.tif" wi="165" he="21" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0020" num="0020">
<claim-text>The method according to any one of claims 1 to 11, wherein when delta=1, the method further comprises:
<claim-text>determining the first sequence based on a preset condition and a sequence {s(n)}, wherein the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, wherein <maths id="math0110" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>16</mn></mfrac></msup></math><img id="ib0299" file="imgb0299.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths> , M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0111" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0300" file="imgb0300.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</claim-text>
<claim-text>the sequence {s<sub>n</sub>} comprises at least one of the following sequences:
<img id="ib0301" file="imgb0301.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
or
<img id="ib0302" file="imgb0302.tif" wi="165" he="111" img-content="dna" img-format="tif"/><!-- EPO <DP n="131"> -->
<img id="ib0303" file="imgb0303.tif" wi="155" he="233" img-content="dna" img-format="tif"/><!-- EPO <DP n="132"> -->
<img id="ib0304" file="imgb0304.tif" wi="165" he="46" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0021" num="0021">
<claim-text>The method according to any one of claims 1 to 11, wherein when delta=1, the method further comprises:
<claim-text>determining the first sequence based on a preset condition and a sequence {s(n)}, wherein the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, wherein <maths id="math0112" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0305" file="imgb0305.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0113" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0306" file="imgb0306.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</claim-text>
<claim-text>the sequence {s<sub>n</sub>} comprises at least one of the following sequences:
<img id="ib0307" file="imgb0307.tif" wi="165" he="46" img-content="dna" img-format="tif"/>
or
<img id="ib0308" file="imgb0308.tif" wi="165" he="86" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0022" num="0022">
<claim-text>A signal processing method, comprising:<!-- EPO <DP n="133"> -->
<claim-text>generating a local sequence, wherein the local sequence is a first sequence or a conjugate transpose of a first sequence, the local sequence is used to process a first signal, and the first signal is a signal modulated by using π/2 binary phase shift keying BPSK; and</claim-text>
<claim-text>receiving a reference signal of the first signal on a first frequency-domain resource, wherein the first frequency-domain resource comprises K subcarriers each having a subcarrier number of k, k=u+M<sup>∗</sup>n+delta, n=0, 1, ..., K-1, M is an integer greater than or equal to 2, delta∈{0, 1, ..., M-1}, u is an integer, the subcarrier numbers are numbered in ascending or descending order of frequencies, and the reference signal is generated by using the first sequence, wherein the first sequence varies as a delta value varies.</claim-text></claim-text></claim>
<claim id="c-en-0023" num="0023">
<claim-text>The method according to claim 22, wherein the method further comprises:
<claim-text>sending indication information, wherein the indication information is used to indicate a sequence that is in each of at least two sequence groups and used to generate the reference signal.</claim-text></claim-text></claim>
<claim id="c-en-0024" num="0024">
<claim-text>A signal processing apparatus, comprising:
<claim-text>a processing module, configured to generate a reference signal of a first signal, wherein the first signal is a signal modulated by using π/2 BPSK, the reference signal is generated by using a first sequence, and a length of the first sequence is K; and</claim-text>
<claim-text>a transceiver module, configured to send the reference signal on a first frequency-domain resource, wherein the first frequency-domain resource comprises K subcarriers each having a subcarrier number of k, k=u+L<sup>∗</sup>n+delta, n=0, 1, ..., K-1, L is an integer greater than or equal to 2, delta∈{0, 1, ..., L-1}, u is an integer, and the subcarrier numbers are numbered in ascending or descending order of frequencies, wherein</claim-text>
<claim-text>the processing module is specifically configured to:<br/>
determine the first sequence, wherein the first sequence varies as a delta value varies.</claim-text></claim-text></claim>
<claim id="c-en-0025" num="0025">
<claim-text>The apparatus according to claim 24, wherein a modulation scheme of the first sequence is neither BPSK modulation nor π/2 BPSK modulation.</claim-text></claim>
<claim id="c-en-0026" num="0026">
<claim-text>The apparatus according to claim 24 or 25, wherein the first sequence is a sequence modulated by using any one of 8PSK, 16PSK, or 32PSK.</claim-text></claim>
<claim id="c-en-0027" num="0027">
<claim-text>The apparatus according to any one of claims 24 to 26, wherein the processing module is further configured to determine the first sequence in a first sequence group, the first sequence group is one of a plurality of sequence groups, and the first sequence is determined, based on the delta value, in a plurality of sequences that are in the first sequence group and whose length is K.</claim-text></claim>
<claim id="c-en-0028" num="0028">
<claim-text>The apparatus according to claim 27, wherein the processing module is further configured to determine the first sequence group based on a cell identifier or a sequence group identifier.<!-- EPO <DP n="134"> --></claim-text></claim>
<claim id="c-en-0029" num="0029">
<claim-text>The apparatus according to claim 27 or 28, wherein the transceiver module is further configured to receive indication information, and the indication information is used to indicate a sequence that is in each of at least two sequence groups and used to generate the reference signal.</claim-text></claim>
<claim id="c-en-0030" num="0030">
<claim-text>The apparatus according to claim 24, wherein when delta=0, the processing module is specifically configured to:
<claim-text>perform discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)} with t=0, ..., L<sup>∗</sup>K-1, wherein when t=0, 1, ..., L<sup>∗</sup>K-1, z(t)=x(t mod K), and x(t) represents the first sequence; and</claim-text>
<claim-text>map elements numbered L<sup>∗</sup>p+delta in the sequence {f(t)} to the subcarriers each having the subcarrier number of u+L<sup>∗</sup>p+delta respectively, to generate the reference signal, wherein p=0, ..., K-1.</claim-text></claim-text></claim>
<claim id="c-en-0031" num="0031">
<claim-text>The apparatus according to claim 24, wherein when delta=1, the processing module is specifically configured to:
<claim-text>perform discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)} with t=0, ..., L<sup>∗</sup>K-1, wherein when t=0, ..., K-1, z(t)=x(t), when t=K, ..., L<sup>∗</sup>K-1, z(t)=-x(t mod K), and x(t) represents the first sequence; and</claim-text>
<claim-text>map elements numbered L<sup>∗</sup>p+delta in the sequence {f(t)} to the subcarriers each having the subcarrier number of u+L<sup>∗</sup>p+delta respectively, to generate the reference signal, wherein p=0, ..., K-1.</claim-text></claim-text></claim>
<claim id="c-en-0032" num="0032">
<claim-text>The apparatus according to claim 24, wherein when L=4, the processing module is specifically configured to:
<claim-text>perform discrete Fourier transform on elements in a sequence {z(t)} to obtain a sequence {f(t)} with t=0, ..., 4K-1, wherein when t=0, 1, ..., 4K-1, <maths id="math0114" num=""><math display="inline"><mi>z</mi><mfenced><mi>t</mi></mfenced><mo>=</mo><msub><mi>w</mi><mi mathvariant="italic">delta</mi></msub><mfenced separators=""><mo>⌊</mo><mfrac><mi>t</mi><mi>K</mi></mfrac><mo>⌋</mo></mfenced><mi>x</mi><mfenced separators=""><mi>t</mi><mspace width="1ex"/><mi>mod</mi><mspace width="1ex"/><mi>K</mi></mfenced></math><img id="ib0309" file="imgb0309.tif" wi="50" he="12" img-content="math" img-format="tif" inline="yes"/></maths>, wherein <i>w</i><sub>0</sub>=(1,1,1,1), <i>w</i><sub>1</sub>=(1,<i>j</i>,-1,-<i>j</i>), <i>w</i><sub>2</sub>=(1,-1,1,-1) , <i>w</i><sub>3</sub>=(1,-<i>j</i>,-1,<i>j</i>)<i>,</i> [c] represents rounding down of c, and x(t) represents the first sequence; and</claim-text>
<claim-text>map elements numbered 4p+delta in the sequence {f(t)} to the subcarriers each having the subcarrier number of u+L<sup>∗</sup>p+delta respectively, to generate the reference signal, wherein p=0, ..., K-1.</claim-text></claim-text></claim>
<claim id="c-en-0033" num="0033">
<claim-text>The apparatus according to claim 24, wherein the processing module is specifically configured to:
<claim-text>perform discrete Fourier transform on elements in a sequence {x(t)} to obtain a sequence {f(t)} with t=0, ..., K-1, wherein x(t) represents the first sequence; and</claim-text>
<claim-text>map elements numbered p in the sequence {f(t)} to the subcarriers each having the subcarrier number of u+L<sup>∗</sup>p+delta respectively, to generate the reference signal, wherein p=0, ..., K-1.</claim-text></claim-text></claim>
<claim id="c-en-0034" num="0034">
<claim-text>The apparatus according to any one of claims 30 to 33, wherein the processing module is specifically<!-- EPO <DP n="135"> --> configured to:
<claim-text>perform discrete Fourier transform on the sequence {z(t)}; and</claim-text>
<claim-text>filter a sequence obtained after the discrete Fourier transform, to generate the sequence {f(t)}.</claim-text></claim-text></claim>
<claim id="c-en-0035" num="0035">
<claim-text>The apparatus according to any one of claims 24 to 34, wherein when delta=0, the method further comprises:
<claim-text>determining the first sequence {x(n)} based on a preset condition and a sequence {s(n)}, wherein the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, wherein <maths id="math0115" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>16</mn></mfrac></msup></math><img id="ib0310" file="imgb0310.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths> M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0116" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0311" file="imgb0311.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</claim-text>
<claim-text>the sequence {s(n)} comprises at least one of the following sequences:
<img id="ib0312" file="imgb0312.tif" wi="165" he="46" img-content="dna" img-format="tif"/>
or
<img id="ib0313" file="imgb0313.tif" wi="165" he="127" img-content="dna" img-format="tif"/><!-- EPO <DP n="136"> -->
<img id="ib0314" file="imgb0314.tif" wi="165" he="37" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0036" num="0036">
<claim-text>The apparatus according to any one of claims 24 to 34, wherein when delta=1, the method further comprises:
<claim-text>determining the first sequence based on a preset condition and a sequence {s(n)}, wherein the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, wherein <maths id="math0117" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>16</mn></mfrac></msup></math><img id="ib0315" file="imgb0315.tif" wi="25" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0118" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0316" file="imgb0316.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</claim-text>
<claim-text>the sequence {s(n)} comprises at least one of the following sequences:
<img id="ib0317" file="imgb0317.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
or
<img id="ib0318" file="imgb0318.tif" wi="165" he="103" img-content="dna" img-format="tif"/><!-- EPO <DP n="137"> -->
<img id="ib0319" file="imgb0319.tif" wi="165" he="78" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0037" num="0037">
<claim-text>The apparatus according to any one of claims 24 to 34, wherein when delta=0, the method further comprises:
<claim-text>determining the first sequence based on a preset condition and a sequence {s<sub>n</sub>}, wherein the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, wherein <maths id="math0119" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0320" file="imgb0320.tif" wi="25" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M E {0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0120" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0321" file="imgb0321.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</claim-text>
<claim-text>the sequence {s<sub>n</sub>} comprises at least one of the following sequences:
<img id="ib0322" file="imgb0322.tif" wi="165" he="111" img-content="dna" img-format="tif"/><!-- EPO <DP n="138"> -->
<img id="ib0323" file="imgb0323.tif" wi="165" he="78" img-content="dna" img-format="tif"/>
or
<img id="ib0324" file="imgb0324.tif" wi="165" he="168" img-content="dna" img-format="tif"/><!-- EPO <DP n="139"> -->
<img id="ib0325" file="imgb0325.tif" wi="165" he="45" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0038" num="0038">
<claim-text>The apparatus according to any one of claims 24 to 34, wherein when delta=1, the method further comprises:
<claim-text>determining the first sequence based on a preset condition and a sequence {s<sub>n</sub>}, wherein the preset condition is <i>x<sub>n</sub> = y</i><sub>(<i>n</i>+<i>M</i>) mod</sub> <i><sub>K</sub>,</i> wherein <maths id="math0121" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0326" file="imgb0326.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5}, K=6, A is a non-zero complex number, and <maths id="math0122" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0327" file="imgb0327.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</claim-text>
<claim-text>the sequence {s<sub>n</sub>} comprises at least one of the following sequences:
<img id="ib0328" file="imgb0328.tif" wi="165" he="78" img-content="dna" img-format="tif"/>
<img id="ib0329" file="imgb0329.tif" wi="165" he="62" img-content="dna" img-format="tif"/><!-- EPO <DP n="140"> -->
<img id="ib0330" file="imgb0330.tif" wi="165" he="54" img-content="dna" img-format="tif"/>
<img id="ib0331" file="imgb0331.tif" wi="165" he="160" img-content="dna" img-format="tif"/>
<img id="ib0332" file="imgb0332.tif" wi="165" he="29" img-content="dna" img-format="tif"/><!-- EPO <DP n="141"> -->
<img id="ib0333" file="imgb0333.tif" wi="165" he="127" img-content="dna" img-format="tif"/>
or
<img id="ib0334" file="imgb0334.tif" wi="165" he="103" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0039" num="0039">
<claim-text>The apparatus according to any one of claims 24 to 34, wherein when delta=0, the processing module is specifically configured to:<!-- EPO <DP n="142"> -->
<claim-text>determine the first sequence based on a preset condition and a sequence {s<sub>n</sub>}, wherein the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, wherein <maths id="math0123" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0335" file="imgb0335.tif" wi="25" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0124" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0336" file="imgb0336.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</claim-text>
<claim-text>the sequence {s<sub>n</sub>} comprises at least one of the following sequences:
<img id="ib0337" file="imgb0337.tif" wi="165" he="46" img-content="dna" img-format="tif"/>
or
<img id="ib0338" file="imgb0338.tif" wi="165" he="86" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0040" num="0040">
<claim-text>The apparatus according to any one of claims 24 to 34, wherein when delta=1, the processing module is specifically configured to:
<claim-text>determine the first sequence based on a preset condition and a sequence {s<sub>n</sub>}, wherein the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, wherein <maths id="math0125" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0339" file="imgb0339.tif" wi="25" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M E {0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0126" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0340" file="imgb0340.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</claim-text>
<claim-text>the sequence {s<sub>n</sub>} comprises at least one of the following sequences:
<img id="ib0341" file="imgb0341.tif" wi="160" he="5" img-content="dna" img-format="tif"/><!-- EPO <DP n="143"> -->
<img id="ib0342" file="imgb0342.tif" wi="165" he="37" img-content="dna" img-format="tif"/>
or
<img id="ib0343" file="imgb0343.tif" wi="165" he="78" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0041" num="0041">
<claim-text>The apparatus according to any one of claims 24 to 34, wherein when delta=0, the processing module is specifically configured to:
<claim-text>determine the first sequence based on a preset condition and a sequence {s<sub>n</sub>}, wherein the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, wherein <maths id="math0127" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>32</mn></mfrac></msup></math><img id="ib0344" file="imgb0344.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0128" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0345" file="imgb0345.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</claim-text>
<claim-text>the sequence {s<sub>n</sub>} comprises at least one of the following sequences:
<img id="ib0346" file="imgb0346.tif" wi="165" he="54" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0042" num="0042">
<claim-text>The apparatus according to any one of claims 24 to 34, wherein when delta=1, the processing module is<!-- EPO <DP n="144"> --> specifically configured to:
<claim-text>determine the first sequence based on a preset condition and a sequence {s<sub>n</sub>}, wherein the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, wherein <maths id="math0129" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>32</mn></mfrac></msup></math><img id="ib0347" file="imgb0347.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0130" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0348" file="imgb0348.tif" wi="15" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</claim-text>
<claim-text>the sequence {s<sub>n</sub>} comprises at least one of the following sequences:
<img id="ib0349" file="imgb0349.tif" wi="165" he="54" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0043" num="0043">
<claim-text>The apparatus according to any one of claims 24 to 34, wherein when delta=1, the processing module is specifically configured to:
<claim-text>determine the first sequence based on a preset condition and a sequence {s<sub>n</sub>}, wherein the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, wherein <maths id="math0131" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>16</mn></mfrac></msup></math><img id="ib0350" file="imgb0350.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0132" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0351" file="imgb0351.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</claim-text>
<claim-text>the sequence {s<sub>n</sub>} comprises at least one of the following sequences:
<img id="ib0352" file="imgb0352.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
<img id="ib0353" file="imgb0353.tif" wi="165" he="29" img-content="dna" img-format="tif"/><!-- EPO <DP n="145"> -->
<img id="ib0354" file="imgb0354.tif" wi="155" he="233" img-content="dna" img-format="tif"/><!-- EPO <DP n="146"> -->
<img id="ib0355" file="imgb0355.tif" wi="165" he="127" img-content="dna" img-format="tif"/>
<img id="ib0356" file="imgb0356.tif" wi="165" he="45" img-content="dna" img-format="tif"/>
or
<img id="ib0357" file="imgb0357.tif" wi="165" he="62" img-content="dna" img-format="tif"/><!-- EPO <DP n="147"> -->
<img id="ib0358" file="imgb0358.tif" wi="155" he="233" img-content="dna" img-format="tif"/><!-- EPO <DP n="148"> -->
<img id="ib0359" file="imgb0359.tif" wi="165" he="94" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0044" num="0044">
<claim-text>The apparatus according to any one of claims 24 to 34, wherein when delta=1, the processing module is specifically configured to:
<claim-text>determine the first sequence based on a preset condition and a sequence {s(n)}, wherein the preset condition is x<sub>n</sub>=y<sub>(n+M)modK</sub>, wherein <maths id="math0133" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0360" file="imgb0360.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, and <maths id="math0134" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0361" file="imgb0361.tif" wi="14" he="6" img-content="math" img-format="tif" inline="yes"/></maths>; and</claim-text>
<claim-text>the sequence {s<sub>n</sub>} comprises at least one of the following sequences:
<img id="ib0362" file="imgb0362.tif" wi="165" he="46" img-content="dna" img-format="tif"/>
<img id="ib0363" file="imgb0363.tif" wi="165" he="37" img-content="dna" img-format="tif"/><!-- EPO <DP n="149"> -->
<img id="ib0364" file="imgb0364.tif" wi="165" he="46" img-content="dna" img-format="tif"/></claim-text></claim-text></claim>
<claim id="c-en-0045" num="0045">
<claim-text>A signal processing apparatus, comprising:
<claim-text>a processing module, configured to generate a local sequence, wherein the local sequence is a first sequence or a conjugate transpose of a first sequence, the local sequence is used to process a first signal, and the first signal is a signal modulated by using π/2 BPSK; and</claim-text>
<claim-text>a transceiver module, configured to receive a reference signal of the first signal on a first frequency-domain resource, wherein the first frequency-domain resource comprises K subcarriers each having a subcarrier number of k, k=u+M<sup>∗</sup>n+delta, n=0, 1, ..., K-1, M is an integer greater than or equal to 2, delta∈{0, 1, ..., M-1}, u is an integer, the subcarrier numbers are numbered in ascending or descending order of frequencies, and the reference signal is generated by using the first sequence, wherein the first sequence varies as a delta value varies.</claim-text></claim-text></claim>
<claim id="c-en-0046" num="0046">
<claim-text>The apparatus according to claim 45, wherein the transceiver module is further configured to send indication information, and the indication information is used to indicate a sequence that is in each of at least two sequence groups and used to generate the reference signal.</claim-text></claim>
<claim id="c-en-0047" num="0047">
<claim-text>A sequence-based signal processing method, comprising:
<claim-text>determining a sequence <i>{x<sub>n</sub>} ,</i> wherein <i>x<sub>n</sub></i> is an element in the sequence <i>{x<sub>n</sub>}</i>, the sequence <i>{x<sub>n</sub>}</i> is a sequence satisfying a preset condition, and the preset condition is:
<claim-text>the preset condition is <i>x<sub>n</sub></i> = <i>y</i><sub>(<i>n</i>+<i>M</i>)mod <i>K</i></sub> , wherein <maths id="math0135" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0365" file="imgb0365.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, <maths id="math0136" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0366" file="imgb0366.tif" wi="15" he="6" img-content="math" img-format="tif" inline="yes"/></maths>, and a set of a sequence <i>{s<sub>n</sub>}</i> composed of an element <i>s<sub>n</sub></i> comprises at least one of sequences in a first sequence set, wherein</claim-text>
<claim-text>the sequences in the first sequence set comprise:
<img id="ib0367" file="imgb0367.tif" wi="165" he="29" img-content="dna" img-format="tif"/><!-- EPO <DP n="150"> -->
<img id="ib0368" file="imgb0368.tif" wi="165" he="160" img-content="dna" img-format="tif"/>
or
<img id="ib0369" file="imgb0369.tif" wi="165" he="86" img-content="dna" img-format="tif"/></claim-text><!-- EPO <DP n="151"> -->
<img id="ib0370" file="imgb0370.tif" wi="165" he="127" img-content="dna" img-format="tif"/></claim-text>
<claim-text>generating a first signal based on the sequence {<i>x<sub>n</sub></i>}; and</claim-text>
<claim-text>sending the first signal.</claim-text></claim-text></claim>
<claim id="c-en-0048" num="0048">
<claim-text>The signal processing method according to claim 47, wherein the set of the sequence {<i>s<sub>n</sub></i>} comprises at least one of sequences in a second sequence set, and the second sequence set comprises some sequences in the first sequence set.</claim-text></claim>
<claim id="c-en-0049" num="0049">
<claim-text>The signal processing method according to claim 47 or 48, wherein the generating a first signal based on the sequence {<i>x<sub>n</sub></i>} comprises:
<claim-text>performing discrete Fourier transform on N elements in the sequence {<i>x<sub>n</sub></i>} to obtain a sequence {<i>f<sub>n</sub></i>} comprising N elements;</claim-text>
<claim-text>mapping the N elements in the sequence {<i>f<sub>n</sub></i>} to N subcarriers respectively, to obtain a frequency-domain signal comprising the N elements; and</claim-text>
<claim-text>generating the first signal based on the frequency-domain signal.</claim-text></claim-text></claim>
<claim id="c-en-0050" num="0050">
<claim-text>The signal processing method according to claim 49, wherein the N subcarriers are N consecutive subcarriers or N equi-spaced subcarriers.<!-- EPO <DP n="152"> --></claim-text></claim>
<claim id="c-en-0051" num="0051">
<claim-text>The signal processing method according to claim 49 or 50, wherein before the performing discrete Fourier transform on N elements in the sequence {<i>x<sub>n</sub></i>}, the first signal processing method further comprises: filtering the sequence {<i>x<sub>n</sub></i>}; or<br/>
after the performing discrete Fourier transform on N elements in the sequence {<i>x<sub>n</sub></i>}, the first signal processing method further comprises: filtering the sequence {<i>x<sub>n</sub></i>}.</claim-text></claim>
<claim id="c-en-0052" num="0052">
<claim-text>The signal processing method according to any one of claims 47 to 51, wherein the first signal is a reference signal of a second signal, and a modulation scheme of the second signal is π/2 binary phase shift keying BPSK.</claim-text></claim>
<claim id="c-en-0053" num="0053">
<claim-text>A sequence-based signal processing apparatus, comprising:
<claim-text>a determining unit, configured to determine a sequence {<i>x<sub>n</sub></i>} , wherein <i>x<sub>n</sub></i> is an element in the sequence {<i>x<sub>n</sub></i>} , the sequence {<i>x<sub>n</sub></i>} is a sequence satisfying a preset condition, and the preset condition is:
<claim-text>the preset condition is <i>x<sub>n</sub></i>= <i>y</i><sub>(<i>n</i>+<i>M</i>)mod <i>K</i></sub> , wherein <maths id="math0137" num=""><math display="inline"><msub><mi>y</mi><mi>n</mi></msub><mo>=</mo><mi>A</mi><mo>⋅</mo><msup><mi>e</mi><mfrac><mrow><mi>j</mi><mo>×</mo><mi>π</mi><mo>×</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><mn>8</mn></mfrac></msup></math><img id="ib0371" file="imgb0371.tif" wi="24" he="9" img-content="math" img-format="tif" inline="yes"/></maths>, M∈{0, 1, 2, ..., 5} , K=6, A is a non-zero complex number, <maths id="math0138" num=""><math display="inline"><mi>j</mi><mo>=</mo><msqrt><mrow><mo>−</mo><mn>1</mn></mrow></msqrt></math><img id="ib0372" file="imgb0372.tif" wi="15" he="6" img-content="math" img-format="tif" inline="yes"/></maths>, and a set of a sequence {<i>s<sub>n</sub></i>} composed of an element <i>s<sub>n</sub></i> comprises at least one of sequences in a first sequence set, wherein</claim-text>
<claim-text>the sequences in the first sequence set comprise:
<img id="ib0373" file="imgb0373.tif" wi="165" he="119" img-content="dna" img-format="tif"/><!-- EPO <DP n="153"> -->
<img id="ib0374" file="imgb0374.tif" wi="165" he="70" img-content="dna" img-format="tif"/>
or
<img id="ib0375" file="imgb0375.tif" wi="165" he="176" img-content="dna" img-format="tif"/><!-- EPO <DP n="154"> -->
<img id="ib0376" file="imgb0376.tif" wi="165" he="37" img-content="dna" img-format="tif"/></claim-text></claim-text>
<claim-text>a generation unit, configured to generate a first signal based on the sequence {<i>x<sub>n</sub></i>}; and</claim-text>
<claim-text>a sending unit, configured to send the first signal.</claim-text></claim-text></claim>
<claim id="c-en-0054" num="0054">
<claim-text>The signal processing apparatus according to claim 53, wherein the set of the sequence {<i>s<sub>n</sub></i>} comprises at least one of sequences in a second sequence set, and the second sequence set comprises some sequences in the first sequence set.</claim-text></claim>
<claim id="c-en-0055" num="0055">
<claim-text>The signal processing apparatus according to claim 53 or 54, wherein
<claim-text>the generation unit is further configured to perform discrete Fourier transform on N elements in the sequence {<i>x<sub>n</sub></i>} to obtain a sequence {<i>f<sub>n</sub></i>} comprising the N elements;</claim-text>
<claim-text>the generation unit is further configured to map the N elements in the sequence {<i>f<sub>n</sub></i>} to N subcarriers respectively, to obtain a frequency-domain signal comprising the N elements; and</claim-text>
<claim-text>the generation unit is further configured to generate the first signal based on the frequency-domain signal.</claim-text></claim-text></claim>
<claim id="c-en-0056" num="0056">
<claim-text>The signal processing apparatus according to claim 55, wherein the N subcarriers are N consecutive subcarriers or N equi-spaced subcarriers.</claim-text></claim>
<claim id="c-en-0057" num="0057">
<claim-text>The signal processing apparatus according to claim 55 or 56, wherein the signal processing apparatus further comprises a filter unit, configured to: filter the sequence {<i>x<sub>n</sub></i>} before the discrete Fourier transform is performed on the N elements in the sequence {<i>x<sub>n</sub></i>}; or<br/>
filter the sequence {<i>x<sub>n</sub></i>} after the discrete Fourier transform is performed on the N elements in the sequence {<i>x<sub>n</sub></i>}.</claim-text></claim>
<claim id="c-en-0058" num="0058">
<claim-text>The signal processing apparatus according to any one of claims 53 to 57, wherein the first signal is a reference signal of a second signal, and a modulation scheme of the second signal is π/2 binary phase shift keying BPSK.</claim-text></claim>
</claims>
<drawings id="draw" lang="en"><!-- EPO <DP n="155"> -->
<figure id="f0001" num="1"><img id="if0001" file="imgf0001.tif" wi="165" he="131" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="156"> -->
<figure id="f0002" num="2,3"><img id="if0002" file="imgf0002.tif" wi="144" he="176" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="157"> -->
<figure id="f0003" num="4"><img id="if0003" file="imgf0003.tif" wi="165" he="214" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="158"> -->
<figure id="f0004" num="5"><img id="if0004" file="imgf0004.tif" wi="144" he="183" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="159"> -->
<figure id="f0005" num="6"><img id="if0005" file="imgf0005.tif" wi="84" he="198" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="160"> -->
<figure id="f0006" num="7,8"><img id="if0006" file="imgf0006.tif" wi="97" he="204" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="161"> -->
<figure id="f0007" num="9,10"><img id="if0007" file="imgf0007.tif" wi="66" he="189" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="162"> -->
<figure id="f0008" num="11,12"><img id="if0008" file="imgf0008.tif" wi="114" he="159" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="163"> -->
<figure id="f0009" num="13,14"><img id="if0009" file="imgf0009.tif" wi="165" he="210" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="164"> -->
<figure id="f0010" num="15"><img id="if0010" file="imgf0010.tif" wi="165" he="133" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="165"> -->
<figure id="f0011" num="16"><img id="if0011" file="imgf0011.tif" wi="165" he="126" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="166"> -->
<figure id="f0012" num="17,18"><img id="if0012" file="imgf0012.tif" wi="161" he="233" img-content="drawing" img-format="tif"/></figure>
</drawings>
<search-report-data id="srep" lang="en" srep-office="EP" date-produced=""><doc-page id="srep0001" file="srep0001.tif" wi="155" he="233" type="tif"/><doc-page id="srep0002" file="srep0002.tif" wi="155" he="233" type="tif"/><doc-page id="srep0003" file="srep0003.tif" wi="155" he="233" type="tif"/></search-report-data>
</ep-patent-document>
