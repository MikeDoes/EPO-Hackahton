<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE ep-patent-document PUBLIC "-//EPO//EP PATENT DOCUMENT 1.5.1//EN" "ep-patent-document-v1-5-1.dtd">
<!-- This XML data has been generated under the supervision of the European Patent Office -->
<ep-patent-document id="EP19894750A1" file="EP19894750NWA1.xml" lang="en" country="EP" doc-number="3890321" kind="A1" date-publ="20211006" status="n" dtd-version="ep-patent-document-v1-5-1">
<SDOBI lang="en"><B000><eptags><B001EP>ATBECHDEDKESFRGBGRITLILUNLSEMCPTIESILTLVFIROMKCYALTRBGCZEEHUPLSKBAHRIS..MTNORSMESMMAKHTNMD..........</B001EP><B005EP>J</B005EP><B007EP>BDM Ver 2.0.12 (4th of August) -  1100000/0</B007EP></eptags></B000><B100><B110>3890321</B110><B120><B121>EUROPEAN PATENT APPLICATION</B121><B121EP>published in accordance with Art. 153(4) EPC</B121EP></B120><B130>A1</B130><B140><date>20211006</date></B140><B190>EP</B190></B100><B200><B210>19894750.9</B210><B220><date>20191213</date></B220><B240><B241><date>20210628</date></B241></B240><B250>zh</B250><B251EP>en</B251EP><B260>en</B260></B200><B300><B310>201811539678</B310><B320><date>20181215</date></B320><B330><ctry>CN</ctry></B330><B310>201811585506</B310><B320><date>20181224</date></B320><B330><ctry>CN</ctry></B330></B300><B400><B405><date>20211006</date><bnum>202140</bnum></B405><B430><date>20211006</date><bnum>202140</bnum></B430></B400><B500><B510EP><classification-ipcr sequence="1"><text>H04N  19/176       20140101AFI20200619BHEP        </text></classification-ipcr><classification-ipcr sequence="2"><text>H04N  19/70        20140101ALI20200619BHEP        </text></classification-ipcr></B510EP><B520EP><classifications-cpc><classification-cpc sequence="1"><text>H04N  19/186       20141101 LI20200710BCEP        </text></classification-cpc><classification-cpc sequence="2"><text>H04N  19/70        20141101 LI20200710BCEP        </text></classification-cpc><classification-cpc sequence="3"><text>H04N  19/176       20141101 LI20200710BCEP        </text></classification-cpc><classification-cpc sequence="4"><text>H04N  19/107       20141101 LI20200710BCEP        </text></classification-cpc><classification-cpc sequence="5"><text>H04N  19/122       20141101 LI20200710BCEP        </text></classification-cpc></classifications-cpc></B520EP><B540><B541>de</B541><B542>BILDREKONSTRUKTIONSVERFAHREN UND -VORRICHTUNG</B542><B541>en</B541><B542>IMAGE RECONSTRUCTION METHOD AND DEVICE</B542><B541>fr</B541><B542>PROCÉDÉ ET DISPOSITIF DE RECONSTRUCTION D'IMAGE</B542></B540><B590><B598>012</B598></B590></B500><B700><B710><B711><snm>Huawei Technologies Co., Ltd.</snm><iid>101846758</iid><irf>P57919/EP</irf><adr><str>Huawei Administration Building 
Bantian</str><city>Longgang
Shenzhen, Guangdong 518129</city><ctry>CN</ctry></adr></B711></B710><B720><B721><snm>ZHAO, Yin</snm><adr><str>Huawei Administration Building 
Bantian, Longgang</str><city>Shenzhen, Guangdong 518129</city><ctry>CN</ctry></adr></B721><B721><snm>YANG, Haitao</snm><adr><str>Huawei Administration Building 
Bantian, Longgang</str><city>Shenzhen, Guangdong 518129</city><ctry>CN</ctry></adr></B721><B721><snm>ZHAO, Riyang</snm><adr><str>Huawei Administration Building 
Bantian, Longgang</str><city>Shenzhen, Guangdong 518129</city><ctry>CN</ctry></adr></B721><B721><snm>LI, Zhongliang</snm><adr><str>Huawei Administration Building 
Bantian, Longgang</str><city>Shenzhen, Guangdong 518129</city><ctry>CN</ctry></adr></B721><B721><snm>ZHANG, Lian</snm><adr><str>Huawei Administration Building 
Bantian, Longgang</str><city>Shenzhen, Guangdong 518129</city><ctry>CN</ctry></adr></B721></B720><B740><B741><snm>Körber, Martin Hans</snm><iid>101424958</iid><adr><str>Mitscherlich PartmbB 
Patent- und Rechtsanwälte 
Sonnenstrasse 33</str><city>80331 München</city><ctry>DE</ctry></adr></B741></B740></B700><B800><B840><ctry>AL</ctry><ctry>AT</ctry><ctry>BE</ctry><ctry>BG</ctry><ctry>CH</ctry><ctry>CY</ctry><ctry>CZ</ctry><ctry>DE</ctry><ctry>DK</ctry><ctry>EE</ctry><ctry>ES</ctry><ctry>FI</ctry><ctry>FR</ctry><ctry>GB</ctry><ctry>GR</ctry><ctry>HR</ctry><ctry>HU</ctry><ctry>IE</ctry><ctry>IS</ctry><ctry>IT</ctry><ctry>LI</ctry><ctry>LT</ctry><ctry>LU</ctry><ctry>LV</ctry><ctry>MC</ctry><ctry>MK</ctry><ctry>MT</ctry><ctry>NL</ctry><ctry>NO</ctry><ctry>PL</ctry><ctry>PT</ctry><ctry>RO</ctry><ctry>RS</ctry><ctry>SE</ctry><ctry>SI</ctry><ctry>SK</ctry><ctry>SM</ctry><ctry>TR</ctry></B840><B844EP><B845EP><ctry>BA</ctry></B845EP><B845EP><ctry>ME</ctry></B845EP></B844EP><B848EP><B849EP><ctry>KH</ctry></B849EP><B849EP><ctry>MA</ctry></B849EP><B849EP><ctry>MD</ctry></B849EP><B849EP><ctry>TN</ctry></B849EP></B848EP><B860><B861><dnum><anum>CN2019125393</anum></dnum><date>20191213</date></B861><B862>zh</B862></B860><B870><B871><dnum><pnum>WO2020119814</pnum></dnum><date>20200618</date><bnum>202025</bnum></B871></B870></B800></SDOBI>
<abstract id="abst" lang="en">
<p id="pa01" num="0001">Embodiments of this application disclose a picture reconstruction method and apparatus for a video picture. The picture reconstruction method includes: obtaining a prediction mode of a current coding unit, and/or obtaining a prediction partition mode of the current coding unit, where the current coding unit includes a luma coding block and a chroma coding block, and the prediction partition mode is a mode of splitting the current coding unit into prediction blocks or prediction units; obtaining a transform block of the current coding unit based on the prediction partition mode and/or the prediction mode; and generating a reconstructed picture block of the current coding unit based on the transform block. According to the method in the embodiments of this application, video coding efficiency can be improved.<img id="iaf01" file="imgaf001.tif" wi="97" he="64" img-content="drawing" img-format="tif"/></p>
</abstract>
<description id="desc" lang="en"><!-- EPO <DP n="1"> -->
<p id="p0001" num="0001">This application claims priority to <patcit id="pcit0001" dnum="US201811539678" dnum-type="L"><text>Chinese Patent Application No. 201811539678.1</text></patcit>, filed with the Chinese Patent Office on December 15, 2018 and entitled "VIDEO ENCODER, VIDEO DECODER AND CORRESPONDING METHODS", and claims priority to <patcit id="pcit0002" dnum="US201811585506" dnum-type="L"><text>Chinese Patent Application No. 201811585506.8</text></patcit>, filed with the Chinese Patent Office on December 24, 2018 and entitled "VIDEO ENCODER, VIDEO DECODER AND CORRESPONDING METHODS", which is incorporated herein by reference in its entirety.</p>
<heading id="h0001"><b>TECHNICAL FIELD</b></heading>
<p id="p0002" num="0002">This application relates to the field of video coding technologies, and more specifically, to a picture reconstruction method and apparatus.</p>
<heading id="h0002"><b>BACKGROUND</b></heading>
<p id="p0003" num="0003">Digital video capabilities can be incorporated into a wide variety of apparatuses, including digital televisions, digital live broadcast systems, wireless broadcast systems, personal digital assistants (personal digital assistant, PDA), laptop or desktop computers, tablet computers, e-book readers, digital cameras, digital recording apparatuses, digital media players, video game apparatuses, video game consoles, cellular or satellite radio phones (also referred to as "smartphones"), video conferencing apparatuses, video streaming apparatuses, and the like. Digital video apparatuses implement video compression technologies, for example, video compression technologies described in standards including MPEG-2, MPEG-4, ITU-T H.263, and ITU-T H.264/MPEG-4 part 10 advanced video coding (AVC), the video coding standard H.265/high efficiency video coding (high efficiency video coding, HEVC) standard, and extensions of these standards. The video apparatuses can transmit, receive, encode, decode, and/or store digital video information more efficiently by implementing the video compression technologies.</p>
<p id="p0004" num="0004">The video compression technologies are used to perform spatial (intra-picture) prediction and/or temporal (inter-picture) prediction to reduce or remove inherent redundancy in video sequences. In block-based video coding, a video slice (namely, a video frame or a part of a video frame) may be partitioned into picture blocks, and the picture block may also be referred to as a tree block, a coding unit (CU), and/or a coding node. A picture block in a to-be-intra-coded (I) slice of a picture is coded through spatial prediction based on a reference sample in a neighboring<!-- EPO <DP n="2"> --> block in the same picture. For a picture block in a to-be-inter-coded (P or B) slice of a picture, spatial prediction based on a reference sample in a neighboring block in the same picture or temporal prediction based on a reference sample in another reference picture may be used. A picture may be referred to as a frame, and a reference picture may be referred to as a reference frame.</p>
<p id="p0005" num="0005">With rapid development of the Internet and mobile communication technologies, digital videos are developing toward high definition, a high frame rate, and a high compression rate. Video formats have developed from 720P to 1080P, and even ultra-high definition digital videos of 4K x 2K and 8K x 4K have emerged. These highdefinition videos greatly increase video coding complexity, and accordingly video compression and decompression is more time-consuming.</p>
<p id="p0006" num="0006">Therefore, how to improve video coding efficiency becomes an urgent problem to be resolved.</p>
<heading id="h0003"><b>SUMMARY</b></heading>
<p id="p0007" num="0007">Embodiments of this application provide a video picture coding method and apparatus, and a corresponding encoder and decoder, to improve coding performance to some extent.</p>
<p id="p0008" num="0008">According to a first aspect, an embodiment of this application provides a video decoding method, including:
<ul id="ul0001" list-style="none" compact="compact">
<li>obtaining size information of a current coding unit (coding unit);</li>
<li>splitting a luma block of the current coding unit into at least two luma prediction blocks based on the size information of the current coding unit; and</li>
<li>predicting prediction information of the at least two luma prediction blocks to obtain prediction information of the current coding unit, where</li>
<li>the splitting a luma block of the current coding unit into at least two luma prediction blocks based on the size information of the current coding unit includes:
<ul id="ul0002" list-style="none" compact="compact">
<li>when both a width and a height of the current coding unit are less than or equal to X, splitting the luma block of the current coding unit in a first partition mode, where X is a positive integer, and the first partition mode includes quartering partition or asymmetric partition; or</li>
<li>when both a width and a height of the current coding unit are equal to Y, splitting the luma block of the current coding unit in a quartering partition mode, where Y is a positive integer; or</li>
<li>when a side length of a to-be-split side of the current coding unit is equal to A, and a side length of a non-split side of the current coding unit is equal to B, splitting the luma block of the current coding unit in a quartering<!-- EPO <DP n="3"> --> partition mode, where a partition direction of the quartering partition mode is perpendicular to the to-be-split side of the current coding unit, A and B are positive integers, the side length of the to-be-split side of the current coding unit is the width of the current coding unit when the partition mode of the luma block is vertical quartering partition or vertical asymmetric partition, and the side length of the non-split side of the current coding unit is the height of the current coding unit when the partition mode of the luma block is vertical quartering partition or vertical asymmetric partition; or the side length of the to-be-split side of the current coding unit is the height of the current coding unit when the partition mode of the luma block is horizontal quartering partition or horizontal asymmetric partition, and the side length of the non-split side of the current coding unit is the width of the current coding unit when the partition mode of the luma block is horizontal quartering partition or horizontal asymmetric partition; or</li>
<li>when a side length of a to-be-split side of the current coding unit is equal to C, and a side length of a non-split side of the current coding unit is equal to D, splitting the luma block of the current coding unit in a second partition mode, where the second partition mode does not include quartering partition and asymmetric partition, and a partition direction of the second partition mode is perpendicular to the to-be-split side of the current coding unit, and C and D are positive integers; or</li>
<li>when a side length of a to-be-split side of the current coding unit is less than T, splitting the luma block of the current coding unit in a third partition mode, where a partition direction of the third partition mode is perpendicular to the to-be-split side of the current coding unit, T is a positive number, and the third partition mode includes asymmetric partition, and does not include quartering partition.</li>
</ul></li>
</ul></p>
<p id="p0009" num="0009">According to a second aspect, an embodiment of this application provides a video decoding method, including:
<ul id="ul0003" list-style="none" compact="compact">
<li>obtaining size information of a current coding unit (coding unit);</li>
<li>determining, based on the size information of the current coding unit, whether the current coding unit meets a condition for splitting a luma block of the current coding unit into at least two luma prediction blocks, where the condition includes at least one of the following conditions:
<ul id="ul0004" list-style="none" compact="compact">
<li>condition 1: a ratio of a width to a height of the current coding unit is greater than or equal to 1/N and less than or equal to N, where N is a positive number;</li>
<li>condition 2: a maximum side length of the current coding unit is a first threshold, and the first threshold is a positive number;</li>
<li>condition 3: if the luma block of the current coding unit is split into at least two luma prediction blocks, a ratio of a width to a height of the luma prediction block obtained through splitting is greater than or equal to 1/M and<!-- EPO <DP n="4"> --> less than or equal to M, where M is a positive number; and the ratio of a width to a height of the luma prediction block obtained through splitting is obtained based on the size information of the current coding unit;</li>
<li>condition 4: if the luma block of the current coding unit is split into at least two luma prediction blocks, both a width and a height of the luma prediction block obtained through splitting are greater than or equal to a second threshold, where the second threshold is a positive integer; and the width and the height of the luma prediction block obtained through splitting are obtained based on the size information of the current coding unit; and</li>
<li>condition 5: a minimum side length of the current coding unit is a third threshold, and if the luma block of the current coding unit is split into at least two luma prediction blocks, both a width and a height of the luma prediction block obtained through splitting are greater than or equal to a fourth threshold, where the third threshold is a positive integer and the fourth threshold is a positive integer; and the width and the height of the luma prediction block obtained through splitting are obtained based on the size information of the current coding unit;</li>
</ul></li>
<li>obtaining size information of a prediction unit of the current coding unit based on a determining result; and</li>
<li>obtaining prediction information of the current coding unit based on the size information of the prediction unit of the current coding unit.</li>
</ul></p>
<p id="p0010" num="0010">According to a third aspect, an embodiment of this application provides a video decoding method. The method includes:
<ul id="ul0005" list-style="none" compact="compact">
<li>splitting a luma block of a current coding unit in a first partition mode, to obtain a luma prediction block;</li>
<li>obtaining a luma transform block in the first partition mode and at least one of the following modes:
<ul id="ul0006" list-style="none" compact="compact">
<li>mode 1: when the current coding unit is predicted in an intra prediction mode, if the first partition mode is vertical quartering partition or vertical asymmetric binary split, splitting the luma block in the vertical quartering partition mode to obtain the luma transform block;</li>
<li>mode 2: when the current coding unit is predicted in an intra prediction mode, if the first partition mode is horizontal quartering partition or horizontal asymmetric binary split, splitting the luma block in the horizontal quartering partition mode to obtain the luma transform block;</li>
<li>mode 3: when the current coding unit is predicted in an inter prediction mode, if the first partition mode is vertical quartering partition or vertical asymmetric binary split, splitting the luma block in the vertical quartering partition mode to obtain the luma transform block or using the luma block as the luma transform block; and</li>
<li>mode 4: when the current coding unit is predicted in an inter prediction mode, if the first partition mode is horizontal quartering partition or horizontal asymmetric binary split, splitting the luma block in the horizontal quartering partition mode to obtain the luma transform block or using the luma block as the luma transform block;</li>
</ul><!-- EPO <DP n="5"> --></li>
<li>obtaining residual information of the luma transform block, and obtaining prediction information of the luma prediction block; and</li>
<li>obtaining a reconstructed block of the luma block based on the residual information and the prediction information.</li>
</ul></p>
<p id="p0011" num="0011">According to a fourth aspect, an embodiment of this application provides a video decoding method. The method includes:
<ul id="ul0007" list-style="none" compact="compact">
<li>obtaining a chroma transform block of a current coding unit in at least one of the following modes:
<ul id="ul0008" list-style="none" compact="compact">
<li>mode 1: when the current coding unit is predicted in an intra prediction mode, using a chroma block of the current coding unit as the chroma transform block;</li>
<li>mode 2: when the current coding unit is predicted in an inter prediction mode, using a chroma block of the current coding unit as the chroma transform block;</li>
<li>mode 3: when the current coding unit is predicted in an inter prediction mode, obtaining the chroma transform block in a same partition mode as that of obtaining the luma transform block of the current coding unit; and</li>
<li>mode 4: when the current coding unit is predicted in an inter prediction mode, if a luma block of the current coding unit is split into four luma transform blocks in a quartering partition mode, and a side length of one side of any luma transform block is E, using a chroma block of the current coding unit as the chroma transform block, where E is a positive integer;</li>
</ul></li>
<li>obtaining residual information of the chroma transform block, and obtaining prediction information of a chroma prediction block of the current coding unit; and</li>
<li>obtaining a reconstructed block of the chroma block based on the residual information and the prediction information.</li>
</ul></p>
<p id="p0012" num="0012">According to a fifth aspect, a decoding apparatus is provided. The apparatus includes modules configured to perform the method according to any one of the first aspect, the second aspect, the third aspect, the fourth aspect, or the implementations of the first aspect, the second aspect, the third aspect, or the fourth aspect.</p>
<p id="p0013" num="0013">According to a sixth aspect, a decoder is provided. The coder includes a non-volatile memory and a processor that are coupled to each other, and the processor invokes program code stored in the memory to perform some or all steps of the method according to any one of the first aspect, the second aspect, the third aspect, the fourth aspect, or the implementations of the first aspect, the second aspect, the third aspect, or the fourth aspect.</p>
<p id="p0014" num="0014">According to a seventh aspect, a computer-readable storage medium is provided. The computer-readable storage medium stores program code, and the program code includes instructions for performing some or all steps of<!-- EPO <DP n="6"> --> the method according to any one of the first aspect, the second aspect, the third aspect, the fourth aspect, or the implementations of the first aspect, the second aspect, the third aspect, or the fourth aspect.</p>
<p id="p0015" num="0015">According to an eighth aspect, a computer program product is provided. When the computer program product runs on a computer, the computer is enabled to execute instructions for performing some or all steps of the method according to any one of the first aspect, the second aspect, the third aspect, the fourth aspect, or the implementations of the first aspect, the second aspect, the third aspect, or the fourth aspect.</p>
<p id="p0016" num="0016">This application further provides a picture reconstruction method and apparatus, to reduce video coding complexity, and improve coding performance.</p>
<p id="p0017" num="0017">According to a ninth aspect, a picture reconstruction method is provided. The method includes: obtaining a prediction mode of a current coding unit, and/or obtaining a prediction partition mode of the current coding unit, where the current coding unit includes a luma coding block and a chroma coding block, and the prediction partition mode is a mode of splitting the current coding unit into prediction blocks or prediction units; obtaining a transform block of the current coding unit based on the prediction partition mode and/or the prediction mode; and generating a reconstructed picture block of the current coding unit based on the transform block.</p>
<p id="p0018" num="0018">In this embodiment of this application, the transform block of the current coding unit can be obtained based on the prediction partition mode and/or the prediction mode (a bitstream does not need to be parsed or only a small amount of information in a bitstream needs to be parsed). In this case, the reconstructed picture block of the current coding unit is generated based on the transform block, so that video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0019" num="0019">Optionally, the prediction partition mode of the current coding unit can be determined based on the prediction mode. The prediction mode may include an intra prediction mode and an inter prediction mode.</p>
<p id="p0020" num="0020">With reference to the ninth aspect, in some implementations of the ninth aspect, the obtaining a transform block of the current coding unit based on the prediction partition mode and/or the prediction mode includes: splitting the current coding unit into transform blocks based on the prediction partition mode and/or the prediction mode.</p>
<p id="p0021" num="0021">In this embodiment of this application, the current coding unit can be split into transform blocks based on the prediction partition mode and/or the prediction mode (a bitstream does not need to be parsed or only a small amount of information in a bitstream needs to be parsed). Therefore, video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0022" num="0022">With reference to the ninth aspect, in some implementations of the ninth aspect, the obtaining a prediction mode of a current coding unit includes: obtaining the prediction mode from a bitstream through parsing or<!-- EPO <DP n="7"> --> derivation, where the prediction mode includes an intra prediction mode and an inter prediction mode.</p>
<p id="p0023" num="0023">It can be learned that the obtaining the prediction mode from a bitstream through parsing or derivation may be performed by a decoder.</p>
<p id="p0024" num="0024">Optionally, when performing the method in the ninth aspect, an encoder can directly obtain the prediction mode.</p>
<p id="p0025" num="0025">With reference to the ninth aspect, in some implementations of the ninth aspect, the obtaining a prediction partition mode of the current coding unit includes: determining, based on a size of the current coding unit, candidate prediction partition modes that are allowed to be used for the current coding unit; and determining the prediction partition mode from the candidate prediction partition modes that are allowed to be used.</p>
<p id="p0026" num="0026">In this embodiment of this application, the prediction partition mode can be determined based on the size of the current coding unit (a bitstream does not need to be parsed or only a small amount of information in a bitstream needs to be parsed). Therefore, video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0027" num="0027">With reference to the ninth aspect, in some implementations of the ninth aspect, the obtaining a prediction partition mode of the current coding unit includes: determining the prediction partition mode of the current coding unit based on a size of the current coding unit.</p>
<p id="p0028" num="0028">In this embodiment of this application, the prediction partition mode can be determined directly based on the size of the current coding unit (a bitstream does not need to be parsed or only a small amount of information in a bitstream needs to be parsed). Therefore, video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0029" num="0029">With reference to the ninth aspect, in some implementations of the ninth aspect, the method further includes: when the prediction mode is the intra prediction mode, splitting the luma coding block in the prediction partition mode to obtain a luma prediction block; and skipping splitting the chroma coding block, and using the chroma coding block as a chroma prediction block.</p>
<p id="p0030" num="0030">With reference to the ninth aspect, in some implementations of the ninth aspect, the method further includes: when the prediction mode is the inter prediction mode, skipping splitting the current coding unit, and using the current coding unit as a prediction unit.</p>
<p id="p0031" num="0031">In this embodiment of this application, when the prediction mode is the inter prediction mode, the current coding unit is not split, so that a coding block having an excessively small size can be avoided, and coding efficiency can be improved.</p>
<p id="p0032" num="0032">With reference to the ninth aspect, in some implementations of the ninth aspect, the method further<!-- EPO <DP n="8"> --> includes: when the prediction mode is the inter prediction mode, splitting the current coding unit in any one of the following modes: splitting the luma coding block in the prediction partition mode to obtain a luma prediction block, and splitting the chroma coding block in the prediction partition mode to obtain a chroma prediction block; or splitting the luma coding block in the prediction partition mode to obtain a luma prediction block, and when there are two luma prediction blocks and a length of at least one side of at least one of the two luma prediction blocks is 4, skipping splitting the chroma coding block and using the chroma coding block as a chroma prediction block.</p>
<p id="p0033" num="0033">With reference to the ninth aspect, in some implementations of the ninth aspect, the obtaining a transform block of the current coding unit based on the prediction partition mode and/or the prediction mode includes: when the prediction mode is the intra prediction mode, and the prediction partition mode of the luma coding block is vertical quartering partition or vertical asymmetric binary split, splitting the luma coding block through vertical quartering partition to obtain a luma transform block, and skipping splitting the chroma coding block and using the chroma coding block as a chroma transform block; or when the prediction mode is an intra prediction mode, and the prediction partition mode of the luma coding block is horizontal quartering partition or horizontal asymmetric binary split, splitting the luma coding block through horizontal quartering partition to obtain a luma transform block, and skipping splitting the chroma coding block and using the chroma coding block as a chroma transform block.</p>
<p id="p0034" num="0034">In this embodiment of this application, the transform block of the current coding unit is obtained directly based on the prediction partition mode and/or the prediction mode (a bitstream does not need to be parsed or only a small amount of information in a bitstream needs to be parsed). Therefore, video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0035" num="0035">With reference to the ninth aspect, in some implementations of the ninth aspect, the obtaining a transform block of the current coding unit based on the prediction partition mode and/or the prediction mode includes: when the prediction mode is the inter prediction mode, skipping splitting the current coding unit, and using the current coding unit as a transform unit.</p>
<p id="p0036" num="0036">In this embodiment of this application, the transform block of the current coding unit is obtained directly based on the prediction partition mode and/or the prediction mode (a bitstream does not need to be parsed or only a small amount of information in a bitstream needs to be parsed). Therefore, video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0037" num="0037">With reference to the ninth aspect, in some implementations of the ninth aspect, the method further includes: determining whether to allow splitting of the current coding unit to obtain a prediction block when the size of the current coding unit meets at least one of the following conditions: a ratio of a width to a height of the current<!-- EPO <DP n="9"> --> coding unit is less than P, where P is a positive integer; or a maximum side length of the current coding unit is equal to a preset threshold; and performing the step of obtaining the prediction partition mode of the current coding unit when it is determined that splitting of the current coding unit to obtain a prediction block is allowed.</p>
<p id="p0038" num="0038">In this embodiment of this application, it can be determined, based on the size of the current coding unit, whether to allow splitting of the current coding unit to obtain a prediction block. Therefore, video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0039" num="0039">According to a tenth aspect, a picture reconstruction apparatus is provided, including: an obtaining unit, configured to obtain a prediction mode of a current coding unit, and/or obtain a prediction partition mode of the current coding unit, where the current coding unit includes a luma coding block and a chroma coding block, and the prediction partition mode is a mode of splitting the current coding unit into prediction blocks or prediction units; a processing unit, configured to obtain a transform block of the current coding unit based on the prediction partition mode and/or the prediction mode; and a reconstruction unit, configured to generate a reconstructed picture block of the current coding unit based on the transform block.</p>
<p id="p0040" num="0040">In this embodiment of this application, the transform block of the current coding unit can be obtained based on the prediction partition mode and/or the prediction mode (a bitstream does not need to be parsed or only a small amount of information in a bitstream needs to be parsed). In this case, the reconstructed picture block of the current coding unit is generated based on the transform block, so that video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0041" num="0041">Optionally, the prediction partition mode of the current coding unit can be determined based on the prediction mode. The prediction mode may include an intra prediction mode and an inter prediction mode.</p>
<p id="p0042" num="0042">With reference to the tenth aspect, in some implementations of the tenth aspect, the processing unit is specifically configured to split the current coding unit into transform blocks based on the prediction partition mode and/or the prediction mode.</p>
<p id="p0043" num="0043">In this embodiment of this application, the current coding unit can be split into transform blocks based on the prediction partition mode and/or the prediction mode. Therefore, video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0044" num="0044">With reference to the tenth aspect, in some implementations of the tenth aspect, the obtaining unit is specifically configured to obtain the prediction mode from a bitstream through parsing or derivation, where the prediction mode includes an intra prediction mode and an inter prediction mode.</p>
<p id="p0045" num="0045">It can be learned that the obtaining the prediction mode from a bitstream through parsing or derivation<!-- EPO <DP n="10"> --> may be performed by a decoder.</p>
<p id="p0046" num="0046">Optionally, when performing the method in the ninth aspect, an encoder can directly obtain the prediction mode.</p>
<p id="p0047" num="0047">With reference to the tenth aspect, in some implementations of the tenth aspect, the obtaining unit is specifically configured to: determine, based on a size of the current coding unit, candidate prediction partition modes that are allowed to be used for the current coding unit; and determine the prediction partition mode from the candidate prediction partition modes that are allowed to be used.</p>
<p id="p0048" num="0048">In this embodiment of this application, the prediction partition mode can be determined based on the size of the current coding unit (a bitstream does not need to be parsed or only a small amount of information in a bitstream needs to be parsed). Therefore, video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0049" num="0049">With reference to the tenth aspect, in some implementations of the tenth aspect, the obtaining unit is specifically configured to determine the prediction partition mode of the current coding unit based on the size of the current coding unit.</p>
<p id="p0050" num="0050">In this embodiment of this application, the prediction partition mode can be determined directly based on the size of the current coding unit (a bitstream does not need to be parsed or only a small amount of information in a bitstream needs to be parsed). Therefore, video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0051" num="0051">With reference to the tenth aspect, in some implementations of the tenth aspect, the processing unit is further configured to: when the prediction mode is the intra prediction mode, split the luma coding block in the prediction partition mode to obtain a luma prediction block; and skip splitting the chroma coding block, and use the chroma coding block as a chroma prediction block.</p>
<p id="p0052" num="0052">With reference to the tenth aspect, in some implementations of the tenth aspect, the processing unit is further configured to: when the prediction mode is the inter prediction mode, skip splitting the current coding unit, and use the current coding unit as a prediction unit.</p>
<p id="p0053" num="0053">In this embodiment of this application, when the prediction mode is the inter prediction mode, the current coding unit is not split, so that a coding block having an excessively small size can be avoided, and coding efficiency can be improved.</p>
<p id="p0054" num="0054">With reference to the tenth aspect, in some implementations of the tenth aspect, the processing unit is further configured to: when the prediction mode is the inter prediction mode, split the current coding unit in any one of the following modes: splitting the luma coding block in the prediction partition mode to obtain a luma prediction<!-- EPO <DP n="11"> --> block, and splitting the chroma coding block in the prediction partition mode to obtain a chroma prediction block; or splitting the luma coding block in the prediction partition mode to obtain a luma prediction block, and when there are two luma prediction blocks and a length of at least one side of at least one of the two luma prediction blocks is 4, skipping splitting the chroma coding block and using the chroma coding block as a chroma prediction block.</p>
<p id="p0055" num="0055">With reference to the tenth aspect, in some implementations of the tenth aspect, the processing unit is specifically configured to: when the prediction mode is the intra prediction mode, and the prediction partition mode of the luma coding block is vertical quartering partition or vertical asymmetric binary split, split the luma coding block through vertical quartering partition to obtain a luma transform block, and skip splitting the chroma coding block and use the chroma coding block as a chroma transform block; or when the prediction mode is an intra prediction mode, and the prediction partition mode of the luma coding block is horizontal quartering partition or horizontal asymmetric binary split, split the luma coding block through horizontal quartering partition to obtain a luma transform block, and skip splitting the chroma coding block and use the chroma coding block as a chroma transform block.</p>
<p id="p0056" num="0056">In this embodiment of this application, the transform block of the current coding unit is obtained directly based on the prediction partition mode and/or the prediction mode (a bitstream does not need to be parsed or only a small amount of information in a bitstream needs to be parsed). Therefore, video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0057" num="0057">With reference to the tenth aspect, in some implementations of the tenth aspect, the processing unit is specifically configured to: when the prediction mode is the inter prediction mode, skip splitting the current coding unit, and use the current coding unit as a transform unit.</p>
<p id="p0058" num="0058">In this embodiment of this application, the transform block of the current coding unit is obtained directly based on the prediction partition mode and/or the prediction mode (a bitstream does not need to be parsed or only a small amount of information in a bitstream needs to be parsed). Therefore, video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0059" num="0059">With reference to the tenth aspect, in some implementations of the tenth aspect, the processing unit is further configured to determine whether to allow splitting of the current coding unit to obtain a prediction block when the size of the current coding unit meets at least one of the following conditions: a ratio of a width to a height of the current coding unit is less than P, where P is a positive integer; or a maximum side length of the current coding unit is equal to a preset threshold; and perform the step of obtaining the prediction partition mode of the current coding unit when it is determined that splitting of the current coding unit to obtain a prediction block is allowed.</p>
<p id="p0060" num="0060">In this embodiment of this application, it can be determined, based on the size of the current coding unit,<!-- EPO <DP n="12"> --> whether to allow splitting of the current coding unit to obtain a prediction block. Therefore, video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0061" num="0061">According to an eleventh aspect, a device for decoding video data is provided. The device includes:
<ul id="ul0009" list-style="none" compact="compact">
<li>a memory, configured to store video data in a bitstream form; and</li>
<li>a video decoder, configured to implement some or all steps of any method according to the ninth aspect.</li>
</ul></p>
<p id="p0062" num="0062">According to a twelfth aspect, a device for encoding video data is provided. The device includes:
<ul id="ul0010" list-style="none" compact="compact">
<li>a memory, configured to store video data in a bitstream form; and</li>
<li>a video encoder, configured to implement some or all steps of any method according to the ninth aspect.</li>
</ul></p>
<p id="p0063" num="0063">According to a thirteenth aspect, an embodiment of this application provides a device for decoding video data, including a memory and a processor. The processor invokes program code stored in the memory, to perform some or all steps of any method according to the ninth aspect.</p>
<p id="p0064" num="0064">Optionally, the memory is a non-volatile memory.</p>
<p id="p0065" num="0065">Optionally, the memory and the processor are coupled to each other.</p>
<p id="p0066" num="0066">According to a fourteenth aspect, an embodiment of this application provides a computer-readable storage medium. The computer-readable storage medium stores program code, and the program code includes instructions for performing some or all steps of any method according to the ninth aspect.</p>
<p id="p0067" num="0067">According to a fifteenth aspect, an embodiment of this application provides a computer program product. When the computer program product runs on a computer, the computer is enabled to perform some or all steps of any method according to the ninth aspect.</p>
<p id="p0068" num="0068">In this embodiment of this application, the transform block of the current coding unit can be obtained based on the prediction partition mode and/or the prediction mode (a bitstream does not need to be parsed or only a small amount of information in a bitstream needs to be parsed). In this case, the reconstructed picture block of the current coding unit is generated based on the transform block, so that video coding complexity can be reduced, and coding efficiency can be improved.</p>
<heading id="h0004"><b>BRIEF DESCRIPTION OF DRAWINGS</b></heading>
<p id="p0069" num="0069">
<ul id="ul0011" list-style="none" compact="compact">
<li><figref idref="f0001">FIG. 1A</figref> is a block diagram of an example of a video coding system 10 for implementing an embodiment of the present invention;</li>
<li><figref idref="f0002">FIG. 1B</figref> is a block diagram of an example of a video coding system 40 for implementing an embodiment of the present invention;<!-- EPO <DP n="13"> --></li>
<li><figref idref="f0003">FIG. 2</figref> is a block diagram of an example structure of an encoder 20 for implementing an embodiment of the present invention;</li>
<li><figref idref="f0004">FIG. 3</figref> is a block diagram of an example structure of a decoder 30 for implementing an embodiment of the present invention;</li>
<li><figref idref="f0005">FIG. 4</figref> is a block diagram of an example of a video coding device 400 for implementing an embodiment of the present invention;</li>
<li><figref idref="f0006">FIG. 5</figref> is a block diagram of another example of an encoding apparatus or a decoding apparatus for implementing an embodiment of the present invention;</li>
<li><figref idref="f0006">FIG. 6(a) to FIG. 6(e)</figref> are schematic block diagrams of block-based partition modes;</li>
<li><figref idref="f0007">FIG. 7</figref> is a schematic block diagram of block-based partition modes;</li>
<li><figref idref="f0007">FIG. 8(a) to FIG. 8(f)</figref> are schematic block diagrams of block-based partition modes;</li>
<li><figref idref="f0008">FIG. 9</figref> is a schematic block diagram of block-based partition modes;</li>
<li><figref idref="f0008">FIG. 10</figref> is a schematic block diagram of block-based partition modes;</li>
<li><figref idref="f0009">FIG. 11</figref> is a schematic block diagram of a video communication system for implementing an embodiment of the present invention;</li>
<li><figref idref="f0009">FIG. 12</figref> is a schematic flowchart of a picture reconstruction method according to an embodiment of this application;</li>
<li><figref idref="f0010">FIG. 13(a) to FIG. 13(f)</figref> are schematic diagrams of quartering partition and asymmetric partition according to an embodiment of this application;</li>
<li><figref idref="f0011">FIG. 14</figref> is a schematic block diagram of a picture reconstruction apparatus according to an embodiment of this application; and</li>
<li><figref idref="f0011">FIG. 15</figref> is a schematic block diagram of a picture reconstruction apparatus according to an embodiment of this application.</li>
</ul></p>
<heading id="h0005"><b>DESCRIPTION OF EMBODIMENTS</b></heading>
<p id="p0070" num="0070">The following describes the embodiments of the present invention with reference to the accompanying drawings in the embodiments of the present invention. In the following description, reference is made to the accompanying drawings that form a part of this disclosure and show, by way of illustration, specific aspects of the embodiments of the present invention or specific aspects in which the embodiments of the present invention may be used. It should be understood that the embodiments of the present invention may be used in other aspects, and may<!-- EPO <DP n="14"> --> include structural or logical changes not depicted in the accompanying drawings. Therefore, the following detailed description shall not be understood in a limiting sense, and the scope of the present invention is defined by the appended claims. For example, it should be understood that disclosed content with reference to described methods may also hold true for a corresponding device or system configured to perform the method, and vice versa. For example, if one or more specific method steps are described, a corresponding device may include one or more units such as functional units for performing the described one or more method steps (for example, one unit performs the one or more steps; or a plurality of units, each of which performs one or more of the plurality of steps), even if such one or more units are not explicitly described or illustrated in the accompanying drawings. In addition, for example, if a specific apparatus is described based on one or more units such as a functional unit, a corresponding method may include a step used to perform one or more functionalities of one or more units (for example, one step used to perform one or more functionalities of one or more units; or a plurality of steps, each of which is used perform one or more functionalities of one or more units in a plurality of units), even if such one or more of steps are not explicitly described or illustrated in the accompanying drawings. Further, it should be understood that features of the various example embodiments and/or aspects described in this specification may be combined with each other, unless otherwise specified.</p>
<p id="p0071" num="0071">Video coding typically refers to processing of a sequence of pictures that constitute a video or a video sequence. In the field of video coding, the terms "picture (picture)", "frame (frame)", and "image (image)" may be used as synonyms. Video coding used in this specification refers to video encoding or video decoding. Video encoding is performed on a source side, and usually includes processing (for example, by compressing) an original video picture to reduce an amount of data for representing the video picture, for more efficient storage and/or transmission. Video decoding is performed on a destination side, and typically includes inverse processing in comparison with an encoder to reconstruct a video picture. "Coding" of a video picture in the embodiments should be understood as "encoding" or "decoding" of a video sequence. A combination of encoding components and decoding components is also referred to as codec (CODEC).</p>
<p id="p0072" num="0072">A video sequence includes a series of pictures (picture), a picture is further split into slices (slice), and a slice is further split into blocks (block). Video coding is performed by blocks. In some new video coding standards, the concept "block" is further extended. For example, a macro block may be further split into a plurality of prediction blocks (partition) that can be used for predictive coding. A plurality of block units are classified by functions according to basic concepts such as coding unit (coding unit, CU), prediction unit (prediction unit, PU), and transform unit (transform unit, TU), and are described by using a new tree-based structure. For example, a CU may be split into<!-- EPO <DP n="15"> --> smaller CUs through quadtree split, and the smaller CU may further be split, to generate a quadtree structure. The CU is a basic unit for splitting and encoding a coding picture. A PU and a TU also have similar tree structures. The PU may correspond to a prediction block, and is a basic unit for predictive coding. The CU is further partitioned into a plurality of PUs in a partitioning pattern. The TU may correspond to a transform block, and is a basic unit for transforming a prediction residual. However, all of the CU, the PU, and the TU are concepts of blocks (or picture blocks) in essence.</p>
<p id="p0073" num="0073">A CTU is split into a plurality of CUs by using a quadtree structure represented as a coding tree. A decision on whether to encode a picture area by using inter-picture (temporal) or intra-picture (spatial) prediction is made at a CU level. Each CU may further be split into one, two, or four PUs based on a PU splitting pattern. In one PU, a same prediction process is applied, and related information is transmitted to a decoder on a PU basis. After obtaining a residual block by applying the prediction process based on the PU splitting pattern, the CU may be partitioned into transform units (transform unit, TU) based on another quadtree structure similar to the coding tree used for the CU. In the latest development of video compression technologies, a quadtree plus binary tree (Quad-tree and binary tree, QTBT) partition frame is used to split a coding block. In a QTBT block structure, the CU may be square or rectangular.</p>
<p id="p0074" num="0074">In this specification, for ease of description and understanding, a to-be-encoded picture block in a current coded picture may be referred to as a current block. For example, in encoding, the current block is a block that is currently being encoded; and in decoding, the current block is a block that is currently being decoded. A decoded picture block, in a reference picture, used to predict the current block is referred to as a reference block. To be specific, the reference block is a block that provides a reference signal for the current block, and the reference signal represents a pixel value in the picture block. A block that is in the reference picture and that provides a prediction signal for the current block may be referred to as a prediction block. The prediction signal represents a pixel value, a sample value, or a sample signal in the prediction block. For example, after a plurality of reference blocks are traversed, an optimal reference block is found. The optimal reference block provides prediction for the current block, and this block is referred to as a prediction block.</p>
<p id="p0075" num="0075">In a case of lossless video coding, original video pictures can be reconstructed, and this means that reconstructed video pictures have same quality as the original video pictures (assuming that no transmission loss or other data loss occurs during storage or transmission). In a case of lossy video coding, further compression is performed through, for example, quantization, to reduce an amount of data required for representing video pictures, and the video pictures cannot be completely reconstructed on a decoder side. This means that quality of reconstructed<!-- EPO <DP n="16"> --> video pictures is lower or poorer than that of the original video pictures.</p>
<p id="p0076" num="0076">Several H.261 video coding standards are used for "lossy hybrid video codecs" (namely, spatial and temporal prediction in a sample domain is combined with 2D transform coding for applying quantization in a transform domain). Each picture of a video sequence is usually partitioned into a set of non-overlapping blocks, and coding is usually performed at a block level. In other words, on an encoder side, a video is usually processed, that is, encoded, at a block (video block) level. For example, a prediction block is generated through spatial (intra-picture) prediction and temporal (inter-picture) prediction, the prediction block is subtracted from a current block (a block that is currently being processed or to be processed) to obtain a residual block, and the residual block is transformed in the transform domain and quantized to reduce an amount of data that is to be transmitted (compressed). On the decoder side, an inverse processing part relative to the encoder is applied to the encoded or compressed block to reconstruct the current block for representation. Furthermore, the encoder duplicates a processing loop of the decoder, so that the encoder and the decoder generate identical prediction (for example, intra prediction and inter prediction) and/or reconstruction for processing, that is, coding, subsequent blocks.</p>
<p id="p0077" num="0077">The following describes a system architecture to which the embodiments of the present invention are applied. <figref idref="f0001">FIG. 1A</figref> is a schematic block diagram of an example of a video coding system 10 to which an embodiment of the present invention is applied. As shown in <figref idref="f0001">FIG. 1A</figref>, the video coding system 10 may include a source device 12 and a destination device 14. The source device 12 generates encoded video data, and therefore the source device 12 may be referred to as a video encoding apparatus. The destination device 14 may decode the encoded video data generated by the source device 12, and therefore the destination device 14 may be referred to as a video decoding apparatus. In various implementation solutions, the source device 12, the destination device 14, or both the source device 12 and the destination device 14 may include one or more processors and a memory coupled to the one or more processors. The memory may include but is not limited to a RAM, a ROM, an EEPROM, a flash memory, or any other medium that can be used to store desired program code in a form of an instruction or a data structure accessible by a computer, as described in this specification. The source device 12 and the destination device 14 may include various apparatuses, including a desktop computer, a mobile computing apparatus, a notebook (for example, a laptop) computer, a tablet computer, a set-top box, a telephone handset such as a "smartphone", a television, a camera, a display apparatus, a digital media player, a video game console, an in-vehicle computer, a wireless communication device, and the like.</p>
<p id="p0078" num="0078">Although <figref idref="f0001">FIG. 1A</figref> depicts the source device 12 and the destination device 14 as separate devices, a device embodiment may alternatively include both the source device 12 and the destination device 14 or functionalities<!-- EPO <DP n="17"> --> of both the source device 12 and the destination device 14, that is, the source device 12 or a corresponding functionality and the destination device 14 or a corresponding functionality. In such embodiments, the source device 12 or the corresponding functionality and the destination device 14 or the corresponding functionality may be implemented by using same hardware and/or software or by using separate hardware and/or software or any combination thereof.</p>
<p id="p0079" num="0079">A communication connection between the source device 12 and the destination device 14 may be implemented over a link 13, and the destination device 14 may receive encoded video data from the source device 12 over the link 13. The link 13 may include one or more media or apparatuses capable of moving the encoded video data from the source device 12 to the destination device 14. In an example, the link 13 may include one or more communication media that enable the source device 12 to directly transmit the encoded video data to the destination device 14 in real time. In this example, the source device 12 may modulate the encoded video data according to a communication standard (for example, a wireless communication protocol), and may transmit modulated video data to the destination device 14. The one or more communication media may include a wireless communication medium and/or a wired communication medium, for example, a radio frequency (RF) spectrum or one or more physical transmission lines. The one or more communication media may form a part of a packet-based network, and the packet-based network is, for example, a local area network, a wide area network, or a global network (for example, the internet). The one or more communication media may include a router, a switch, a base station, or another device that facilitates communication from the source device 12 to the destination device 14.</p>
<p id="p0080" num="0080">The source device 12 includes an encoder 20, and optionally, the source device 12 may further include a picture source 16, a picture pre-processor 18, and a communication interface 22. In a specific implementation form, the encoder 20, the picture source 16, the picture preprocessor 18, and the communication interface 22 may be hardware components in the source device 12, or may be software programs in the source device 12. Separate descriptions are as follows.</p>
<p id="p0081" num="0081">The picture source 16 may include or be any type of picture capture device configured to, for example, capture a real-world picture; and/or any type of device for generating a picture or comment (for screen content encoding, some text on a screen is also considered as a part of a to-be-encoded picture or image), for example, a computer graphics processor configured to generate a computer animation picture; or any type of device configured to obtain and/or provide a real-world picture or a computer animation picture (for example, screen content or a virtual reality (virtual reality, VR) picture); and/or any combination thereof (for example, an augmented reality (augmented reality, AR) picture). The picture source 16 may be a camera for capturing a picture or a memory for storing a picture. The picture source 16 may further include any type of (internal or external) interface through which a previously<!-- EPO <DP n="18"> --> captured or generated picture is stored and/or a picture is obtained or received. When the picture source 16 is a camera, the picture source 16 may be, for example, a local camera or a camera integrated into the source device. When the picture source 16 is a memory, the picture source 16 may be, for example, a local memory or a memory integrated into the source device. When the picture source 16 includes an interface, the interface may be, for example, an external interface for receiving a picture from an external video source. The external video source is, for example, an external picture capture device such as a camera, an external memory, or an external picture generation device. The external picture generation device is, for example, an external computer graphics processor, a computer, or a server. The interface may be any type of interface, for example, a wired or wireless interface or an optical interface, according to any proprietary or standardized interface protocol.</p>
<p id="p0082" num="0082">A picture may be considered as a two-dimensional array or matrix of picture elements (picture element). The picture element in the array may also be referred to as a sample. A quantity of samples in horizontal and vertical directions (or axes) of the array or the picture defines a size and/or a resolution of the picture. For representation of a color, typically three color components are employed. For example, the picture may be represented as or include three sample arrays. For example, in an RGB format or a color space, a picture includes corresponding red, green, and blue sample arrays. However, in video coding, each pixel is typically represented in a luminance/chrominance format or a color space. For example, a picture in a YUV format includes a luminance component indicated by Y (sometimes L is used instead) and two chrominance components indicated by U and V. The luminance (luma) component Y represents brightness or gray level intensity (for example, both are the same in a gray-scale picture), and the two chrominance (chroma) components U and V represent chrominance or color information components. Correspondingly, the picture in the YUV format includes a luminance sample array of luminance sample values (Y) and two chrominance sample arrays of chrominance values (U and V). A picture in an RGB format may be converted or transformed into a picture in the YUV format and vice versa, and such a process is also known as color transformation or conversion. If a picture is monochrome, the picture may include only a luma sample array. In this embodiment of the present invention, a picture transmitted by the picture source 16 to a picture processor may also be referred to as original picture data 17.</p>
<p id="p0083" num="0083">The picture pre-processor 18 is configured to receive the original picture data 17 and pre-process the original picture data 17, to obtain a pre-processed picture 19 or pre-processed picture data 19. For example, the preprocessing performed by the picture pre-processor 18 may include trimming, color format conversion (for example, from an RGB format to a YUV format), color correction, or denoising.</p>
<p id="p0084" num="0084">The encoder 20 (also referred to as a video encoder 20) is configured to receive the pre-processed picture data 19, and process the pre-processed picture data 19 by using a related prediction mode (such as a prediction mode<!-- EPO <DP n="19"> --> in each embodiment of this specification), to provide encoded picture data 21 (structural details of the encoder 20 are further described below based on <figref idref="f0003">FIG. 2</figref>, <figref idref="f0005">FIG. 4</figref>, or <figref idref="f0006">FIG. 5</figref>). In some embodiments, the encoder 20 may be configured to perform various embodiments described below, to implement encoder-side application of the chroma block prediction method described in the present invention.</p>
<p id="p0085" num="0085">The communication interface 22 may be configured to receive the encoded picture data 21, and transmit the encoded picture data 21 to the destination device 14 or any other device (for example, a memory) over the link 13 for storage or direct reconstruction. The any other device may be any device used for decoding or storage. The communication interface 22 may be, for example, configured to package the encoded picture data 21 into an appropriate format, for example, a data packet, for transmission over the link 13.</p>
<p id="p0086" num="0086">The destination device 14 includes a decoder 30, and optionally, the destination device 14 may further include a communication interface 28, a picture post-processor 32, and a display device 34. Separate descriptions are as follows.</p>
<p id="p0087" num="0087">The communication interface 28 may be configured to receive the encoded picture data 21 from the source device 12 or any other source. The any other source is, for example, a storage device. The storage device is, for example, an encoded picture data storage device. The communication interface 28 may be configured to transmit or receive the encoded picture data 21 over the link 13 between the source device 12 and the destination device 14 or through any type of network. The link 13 is, for example, a direct wired or wireless connection. The any type of network is, for example, a wired or wireless network or any combination thereof, or any type of private or public network, or any combination thereof. The communication interface 28 may be, for example, configured to depackage the data packet transmitted through the communication interface 22, to obtain the encoded picture data 21.</p>
<p id="p0088" num="0088">Both the communication interface 28 and the communication interface 22 may be configured as unidirectional communication interfaces or bidirectional communication interfaces, and may be configured to, for example, send and receive messages to establish a connection, and acknowledge and exchange any other information related to a communication link and/or data transmission such as encoded picture data transmission.</p>
<p id="p0089" num="0089">The decoder 30 (also referred to as the decoder 30) is configured to receive the encoded picture data 21 and provide decoded picture data 31 or a decoded picture 31 (structural details of the decoder 30 are further described below based on <figref idref="f0004">FIG. 3</figref>, <figref idref="f0005">FIG. 4</figref>, or <figref idref="f0006">FIG. 5</figref>). In some embodiments, the decoder 30 may be configured to perform various embodiments described below, to implement decoder-side application of the chroma block prediction method described in the present invention.</p>
<p id="p0090" num="0090">The picture post-processor 32 is configured to post-process the decoded picture data 31 (also referred to<!-- EPO <DP n="20"> --> as reconstructed picture data), to obtain post-processed picture data 33. The post-processing performed by the picture post-processor 32 may include color format conversion (for example, from a YUV format to an RGB format), color correction, trimming, re-sampling, or any other processing. The picture post-processor 32 may be further configured to transmit the post-processed picture data 33 to the display device 34.</p>
<p id="p0091" num="0091">The display device 34 is configured to receive the post-processed picture data 33 to display a picture, for example, to a user or a viewer. The display device 34 may be or include any type of display configured to present a reconstructed picture, for example, an integrated or external display or monitor. For example, the display may include a liquid crystal display (liquid crystal display, LCD), an organic light emitting diode (organic light emitting diode, OLED) display, a plasma display, a projector, a micro LED display, a liquid crystal on silicon (liquid crystal on silicon, LCoS), a digital light processor (digital light processor, DLP), or any type of other displays.</p>
<p id="p0092" num="0092">Although <figref idref="f0001">FIG. 1A</figref> depicts the source device 12 and the destination device 14 as separate devices, a device embodiment may alternatively include both the source device 12 and the destination device 14 or functionalities of both the source device 12 and the destination device 14, that is, the source device 12 or a corresponding functionality and the destination device 14 or a corresponding functionality. In such embodiments, the source device 12 or the corresponding functionality and the destination device 14 or the corresponding functionality may be implemented by using same hardware and/or software or by using separate hardware and/or software or any combination thereof.</p>
<p id="p0093" num="0093">As will be apparent for a person skilled in the art based on the descriptions, existence and (exact) split of functionalities of the different units or functionalities of the source device 12 and/or the destination device 14 shown in <figref idref="f0001">FIG. 1A</figref> may vary depending on an actual device and application. The source device 12 and the destination device 14 each may be any one of a wide range of devices, including any type of handheld or stationary device, for example, a notebook or laptop computer, a mobile phone, a smartphone, a pad or a tablet computer, a video camera, a desktop computer, a set-top box, a television, a camera, a vehicle-mounted device, a display device, a digital media player, a video game console, a video streaming device (such as a content service server or a content distribution server), a broadcast receiver device, or a broadcast transmitter device, and may not use or may use any type of operating system.</p>
<p id="p0094" num="0094">The encoder 20 and the decoder 30 each may be implemented as any one of various appropriate circuits, for example, one or more microprocessors, digital signal processors (digital signal processor, DSP), application-specific integrated circuits (application-specific integrated circuit, ASIC), field-programmable gate arrays (field-programmable gate array, FPGA), discrete logic, hardware, or any combinations thereof. If the technologies are implemented partially by using software, a device may store software instructions in an appropriate non-transitory computer-readable storage medium and may execute the instructions by using hardware such as one or more<!-- EPO <DP n="21"> --> processors, to perform the technologies of this disclosure. Any one of the foregoing content (including hardware, software, a combination of hardware and software, and the like) may be considered as one or more processors.</p>
<p id="p0095" num="0095">In some cases, the video coding system 10 shown in <figref idref="f0001">FIG. 1A</figref> is merely an example and the techniques of this application may be applied to video coding settings (for example, video encoding or video decoding) that do not necessarily include any data communication between an encoding device and a decoding device. In other examples, data may be retrieved from a local memory, streamed over a network, or the like. A video encoding device may encode and store data in the memory, and/or a video decoding device may retrieve and decode data from the memory. In some examples, the encoding and the decoding are performed by devices that do not communicate with one another, but simply encode data to the memory and/or retrieve and decode data from the memory.</p>
<p id="p0096" num="0096"><figref idref="f0002">FIG. 1B</figref> is an illustrative diagram of an example of a video coding system 40, including the encoder 20 in <figref idref="f0003">FIG. 2</figref> and/or the decoder 30 in <figref idref="f0004">FIG. 3</figref>, according to an example embodiment. The video coding system 40 can implement a combination of various techniques in the embodiments of the present invention. In the illustrated implementation, the video coding system 40 may include an imaging device 41, the encoder 20, the decoder 30 (and/or a video encoder/decoder implemented by a logic circuit 47 of a processing unit 46), an antenna 42, one or more processors 43, one or more memories 44, and/or a display device 45.</p>
<p id="p0097" num="0097">In <figref idref="f0002">FIG. 1B</figref>, the imaging device 41, the antenna 42, the processing unit 46, the logic circuit 47, the encoder 20, the decoder 30, the processor 43, the memory 44, and/or the display device 45 can communicate with each other. As described, although the video coding system 40 is illustrated with the encoder 20 and the decoder 30, the video coding system 40 may include only the encoder 20 or only the decoder 30 in different examples.</p>
<p id="p0098" num="0098">In some examples, the antenna 42 may be configured to transmit or receive an encoded bitstream of video data. In addition, in some examples, the display device 45 may be configured to present the video data. In some examples, the logic circuit 47 may be implemented by the processing unit 46. The processing unit 46 may include an application-specific integrated circuit (application-specific integrated circuit, ASIC) logic, a graphics processor, a general-purpose processor, or the like. The video coding system 40 may also include the optional processor 43. The optional processor 43 may similarly include an application-specific integrated circuit (application-specific integrated circuit, ASIC) logic, a graphics processor, a general-purpose processor, or the like. In some examples, the logic circuit 47 may be implemented by hardware, for example, video coding dedicated hardware, and the processor 43 may be implemented by general-purpose software, an operating system, or the like. In addition, the memory 44 may be any type of memory, for example, a volatile memory (for example, a static random access memory (Static Random Access Memory, SRAM), a dynamic random access memory (Dynamic Random Access Memory, DRAM)), or a non-volatile<!-- EPO <DP n="22"> --> memory (for example, a flash memory). In a non-restrictive example, the memory 44 may be implemented by a cache memory. In some examples, the logic circuit 47 may access the memory 44 (for example, for implementing a picture buffer). In other examples, the logic circuit 47 and/or the processing unit 46 may include a memory (for example, a cache) for implementing a picture buffer.</p>
<p id="p0099" num="0099">In some examples, the encoder 20 implemented by using the logic circuit may include a picture buffer (which is implemented by, for example, the processing unit 46 or the memory 44) and a graphics processing unit (which is implemented by, for example, the processing unit 46). The graphics processing unit may be communicatively coupled to the picture buffer. The graphics processing unit may include the encoder 20 implemented by using the logic circuit 47, to implement various modules that are described with reference to <figref idref="f0003">FIG. 2</figref> and/or any other encoder system or subsystem described in this specification. The logic circuit may be configured to perform various operations described in this specification.</p>
<p id="p0100" num="0100">In some examples, the decoder 30 may be implemented by the logic circuit 47 in a similar manner, to implement various modules that are described with reference to the decoder 30 in <figref idref="f0004">FIG. 3</figref> and/or any other decoder system or subsystem described in this specification. In some examples, the decoder 30 implemented by using the logic circuit may include a picture buffer (which is implemented by a processing unit 2820 or the memory 44) and a graphics processing unit (which is implemented by, for example, the processing unit 46). The graphics processing unit may be communicatively coupled to the picture buffer. The graphics processing unit may include the decoder 30 implemented by using the logic circuit 47, to implement various modules that are described with reference to <figref idref="f0004">FIG. 3</figref> and/or any other decoder system or subsystem described in this specification.</p>
<p id="p0101" num="0101">In some examples, the antenna 42 may be configured to receive an encoded bitstream of video data. As described, the encoded bitstream may include data, an indicator, an index value, mode selection data, or the like related to video frame coding described in this specification, for example, data related to coding partitioning (for example, a transform coefficient or a quantized transform coefficient, an optional indicator (as described), and/or data defining the coding partitioning). The video coding system 40 may further include the decoder 30 that is coupled to the antenna 42 and that is configured to decode the encoded bitstream. The display device 45 is configured to present a video frame.</p>
<p id="p0102" num="0102">It should be understood that, in this embodiment of the present invention, for the example described with reference to the encoder 20, the decoder 30 may be configured to perform an inverse process. With regard to a signaling syntax element, the decoder 30 may be configured to receive and parse such a syntax element and correspondingly decode related video data. In some examples, the encoder 20 may entropy encode the syntax element into an encoded<!-- EPO <DP n="23"> --> video bitstream. In such examples, the decoder 30 may parse such a syntax element and correspondingly decode related video data.</p>
<p id="p0103" num="0103">It should be noted that the decoding method described in this embodiment of the present invention is mainly used in a decoding process, and the process exists on both the encoder 20 and the decoder 30.</p>
<p id="p0104" num="0104"><figref idref="f0003">FIG. 2</figref> is a schematic/conceptual block diagram of an example encoder 20 configured to implement an embodiment of the present invention. In the example of <figref idref="f0003">FIG. 2</figref>, the encoder 20 includes a residual calculation unit 204, a transform processing unit 206, a quantization unit 208, an inverse quantization unit 210, an inverse transform processing unit 212, a reconstruction unit 214, a buffer 216, a loop filter unit 220, a decoded picture buffer (decoded picture buffer, DPB) 230, a prediction processing unit 260, and an entropy encoding unit 270. The prediction processing unit 260 may include an inter prediction unit 244, an intra prediction unit 254, and a mode selection unit 262. The inter prediction unit 244 may include a motion estimation unit and a motion compensation unit (not depicted in the figure). The encoder 20 shown in <figref idref="f0003">FIG. 2</figref> may also be referred to as a hybrid video encoder or a video encoder based on a hybrid video codec.</p>
<p id="p0105" num="0105">For example, the residual calculation unit 204, the transform processing unit 206, the quantization unit 208, the prediction processing unit 260, and the entropy encoding unit 270 form a forward signal path of the encoder 20, whereas, for example, the inverse quantization unit 210, the inverse transform processing unit 212, the reconstruction unit 214, the buffer 216, the loop filter 220, the decoded picture buffer (decoded picture buffer, DPB) 230, and the prediction processing unit 260 form a reverse signal path of the encoder. The reverse signal path of the encoder corresponds to a signal path of a decoder (refer to the decoder 30 in <figref idref="f0004">FIG. 3</figref>).</p>
<p id="p0106" num="0106">The encoder 20 receives, for example, from an input 202, a picture 201 or a picture block 203 of the picture 201, for example, a picture in a sequence of pictures forming a video or a video sequence. The picture block 203 may also be referred to as a current picture block or a to-be-encoded picture block. The picture 201 may be referred to as a current picture or a to-be-encoded picture (particularly in video coding, to distinguish the current picture from other pictures, the other pictures are, for example, previously encoded and/or decoded pictures in a same video sequence, that is, the video sequence that also includes the current picture).</p>
<p id="p0107" num="0107">In an embodiment, the encoder 20 may include a partitioning unit (not depicted in <figref idref="f0003">FIG. 2</figref>), configured to partition the picture 201 into a plurality of blocks such as the picture blocks 203. The picture 201 is usually partitioned into a plurality of non-overlapping blocks. The partitioning unit may be configured to use a same block size for all pictures in the video sequence and a corresponding grid defining the block size, or change a block size between pictures or subsets or groups of pictures, and partition each picture into corresponding blocks.<!-- EPO <DP n="24"> --></p>
<p id="p0108" num="0108">In an example, the prediction processing unit 260 of the encoder 20 may be configured to perform any combination of the partitioning techniques described above.</p>
<p id="p0109" num="0109">Like the picture 201, the picture block 203 is also or may be considered as a two-dimensional array or matrix of samples with sample values, although of a smaller size than the picture 201. In other words, the picture block 203 may include, for example, one sample array (for example, a luma array in a case of a monochrome picture 201), three sample arrays (for example, one luma array and two chroma arrays in a case of a color picture), or any other quantity and/or type of arrays depending on an applied color format. A quantity of samples in horizontal and vertical directions (or axes) of the picture block 203 defines a size of the picture block 203.</p>
<p id="p0110" num="0110">The encoder 20 shown in <figref idref="f0003">FIG. 2</figref> is configured to encode the picture 201 block by blocks, for example, the encoder encodes and predicts each picture block 203.</p>
<p id="p0111" num="0111">The residual calculation unit 204 is configured to calculate a residual block 205 based on the picture block 203 and a prediction block 265 (further details about the prediction block 265 are provided below), for example, obtain the residual block 205 in a sample domain by subtracting sample values of the prediction block 265 from sample values of the picture block 203 sample by sample (pixel by pixel).</p>
<p id="p0112" num="0112">The transform processing unit 206 is configured to apply a transform, for example, a discrete cosine transform (discrete cosine transform, DCT) or a discrete sine transform (discrete sine transform, DST), on sample values of the residual block 205 to obtain transform coefficients 207 in a transform domain. The transform coefficients 207 may also be referred to as transform residual coefficients and represent the residual block 205 in the transform domain.</p>
<p id="p0113" num="0113">The transform processing unit 206 may be configured to apply an integer approximation of DCT/DST, such as transforms specified in AVS, AVS2, and AVS3. In comparison with an orthogonal DCT transform, such an integer approximation is typically scaled by a factor. To preserve a norm of a residual block which is processed by using forward and inverse transforms, applying an additional scale factor is a part of a transform process. The scale factor is usually chosen based on some constraints. For example, the scale factor is a power of two for a shift operation, a bit depth of the transform coefficient, or a tradeoff between accuracy and implementation costs. Specific scaling factors are, for example, specified for the inverse transform, for example, by the inverse transform processing unit 212 on the decoder side 30 (and the corresponding inverse transform, for example, by the inverse transform processing unit 212 on the encoder side 20), and corresponding scaling factors for the forward transform, for example, by the transform processing unit 206 on the encoder side 20 may be specified accordingly.</p>
<p id="p0114" num="0114">The quantization unit 208 is configured to quantize the transform coefficients 207 to obtain quantized<!-- EPO <DP n="25"> --> transform coefficients 209, for example, by applying scalar quantization or vector quantization. The quantized transform coefficients 209 may also be referred to as quantized residual coefficients 209. The quantization process may reduce a bit depth associated with some or all of the transform coefficients 207. For example, an n-bit transform coefficient may be rounded down to an m-bit transform coefficient during quantization, where n is greater than m. A quantization degree may be modified by adjusting a quantization parameter (quantization parameter, QP). For example, for scalar quantization, different scales may be applied to achieve finer or coarser quantization. A smaller quantization step corresponds to finer quantization, and a larger quantization step corresponds to coarser quantization. An applicable quantization step may be indicated by the quantization parameter (quantization parameter, QP). The quantization parameter may be, for example, an index of a predefined set of applicable quantization steps. For example, a smaller quantization parameter may correspond to finer quantization (a smaller quantization step) and a larger quantization parameter may correspond to coarser quantization (a larger quantization step) or vice versa. The quantization may include division by a quantization step and corresponding quantization and/or inverse quantization, for example, performed by the inverse quantization unit 210, or may include multiplication by a quantization step. In embodiments according to some standards such as AVS, AVS2, and AVS3, a quantization parameter may be used to determine the quantization step. Generally, the quantization step may be calculated based on a quantization parameter using a fixed point approximation of an equation including division. An additional scaling factor may be introduced for quantization and dequantization to restore the norm of the residual block, where the norm of the residual block may be modified because of a scale used in the fixed point approximation of the equation for the quantization step and the quantization parameter. In an example implementation, scales of the inverse transform and the dequantization may be combined. Alternatively, a customized quantization table may be used and signaled from the encoder to the decoder, for example, in a bitstream. The quantization is a lossy operation, where loss increases with an increasing quantization step.</p>
<p id="p0115" num="0115">The inverse quantization unit 210 is configured to apply inverse quantization of the quantization unit 208 to quantization coefficients to obtain dequantization coefficients 211, for example, apply, based on or by using a same quantization step as the quantization unit 208, inverse of a quantization scheme applied by the quantization unit 208. The dequantization coefficients 211 may also be referred to as dequantized residual coefficients 211 and correspond, although typically not identical to the transform coefficients due to the loss by quantization, to the transform coefficients 207.</p>
<p id="p0116" num="0116">The inverse transform processing unit 212 is configured to apply an inverse transform of the transform applied by the transform processing unit 206, for example, an inverse discrete cosine transform (discrete cosine<!-- EPO <DP n="26"> --> transform, DCT) or an inverse discrete sine transform (discrete sine transform, DST), to obtain an inverse transform block 213 in the sample domain. The inverse transform block 213 may also be referred to as an inverse transform dequantized block 213 or an inverse transform residual block 213.</p>
<p id="p0117" num="0117">The reconstruction unit 214 (for example, a summer 214) is configured to add the inverse transform block 213 (namely, a reconstructed residual block 213) to the prediction block 265 to obtain a reconstructed block 215 in a sample domain, for example, by adding a sample value of the reconstructed residual block 213 and the sample value of the prediction block 265.</p>
<p id="p0118" num="0118">Optionally, a buffer unit 216 ("buffer" 216 for short) of, for example, a line buffer 216, is configured to buffer or store the reconstructed block 215 and a corresponding sample value, for example, for intra prediction. In other embodiments, the encoder may be configured to use an unfiltered reconstructed block and/or a corresponding sample value stored in the buffer unit 216 for any type of estimation and/or prediction, for example, intra prediction.</p>
<p id="p0119" num="0119">For example, in an embodiment, the encoder 20 may be configured so that the buffer unit 216 is not only used for storing the reconstructed block 215 for the intra prediction unit 254 but also used for the loop filter unit 220 (not depicted in <figref idref="f0003">FIG. 2</figref>), and/or so that, for example, the buffer unit 216 and the decoded picture buffer unit 230 form one buffer. In other embodiments, a filtered block 221 and/or a block or a sample from the decoded picture buffer 230 (the block or sample is not depicted in <figref idref="f0003">FIG. 2</figref>) are/is used as an input or a basis for the intra prediction unit 254.</p>
<p id="p0120" num="0120">The loop filter unit 220 (briefly referred to as a "loop filter" 220) is configured to filter the reconstructed block 215 to obtain the filtered block 221, to smooth pixel transition or improve video quality. The loop filter unit 220 is intended to represent one or more loop filters such as a deblocking filter, a sample-adaptive offset (sample-adaptive offset, SAO) filter, or another filter such as a bilateral filter, an adaptive loop filter (adaptive loop filter, ALF), a sharpening or smoothing filter, or a collaborative filter. Although the loop filter unit 220 is shown in <figref idref="f0003">FIG. 2</figref> as an in-loop filter, in other configurations, the loop filter unit 220 may be implemented as a post-loop filter. The filtered block 221 may also be referred to as a filtered reconstructed block 221. The decoded picture buffer 230 may store a reconstructed encoded block after the loop filter unit 220 performs a filtering operation on the reconstructed encoded block.</p>
<p id="p0121" num="0121">In an embodiment, the encoder 20 (correspondingly, the loop filter unit 220) may be configured to output a loop filter parameter (such as sample adaptive offset information), for example, directly or after entropy encoding performed by the entropy encoding unit 270 or any other entropy encoding unit, so that, for example, the decoder 30 can receive the same loop filter parameter and apply the same loop filter parameter to decoding.</p>
<p id="p0122" num="0122">The decoded picture buffer (decoded picture buffer, DPB) 230 may be a reference picture memory that<!-- EPO <DP n="27"> --> stores reference picture data for use in encoding video data by the encoder 20. The DPB 230 may be formed by any one of a variety of memory devices, such as a dynamic random access memory (dynamic random access memory, DRAM) (including a synchronous DRAM (synchronous DRAM, SDRAM), a magnetoresistive RAM (magnetoresistive RAM, MRAM), and a resistive RAM (resistive RAM, RRAM)), or another type of memory devices. The DPB 230 and the buffer 216 may be provided by a same memory device or separate memory devices. In an example, the decoded picture buffer (decoded picture buffer, DPB) 230 is configured to store the filtered block 221. The decoded picture buffer 230 may be further configured to store another previously filtered block, for example, the previously reconstructed and filtered block 221, of a same current picture or of different pictures, for example, a previously reconstructed picture, and may provide a complete previously reconstructed, that is, decoded picture (and a corresponding reference block and sample) and/or a partially reconstructed current picture (and a corresponding reference block and sample), for example, for inter prediction. In an example, if the reconstructed block 215 is reconstructed without in-loop filtering, the decoded picture buffer (decoded picture buffer, DPB) 230 is configured to store the reconstructed block 215.</p>
<p id="p0123" num="0123">The prediction processing unit 260, also referred to as a block prediction processing unit 260, is configured to receive or obtain the picture block 203 (a current picture block 203 of the current picture 201) and reconstructed picture data, for example, reference samples of a same (current) picture from the buffer 216 and/or reference picture data 231 of one or more previously decoded pictures from the decoded picture buffer 230, and to process such data for prediction, that is, to provide the prediction block 265 that may be an inter prediction block 245 or an intra prediction block 255.</p>
<p id="p0124" num="0124">The mode selection unit 262 may be configured to select a prediction mode (for example, an intra prediction mode or an inter prediction mode) and/or a corresponding prediction block 245 or 255 to be used as the prediction block 265, for calculation of the residual block 205 and for reconstruction of the reconstructed block 215.</p>
<p id="p0125" num="0125">In an embodiment, the mode selection unit 262 may be configured to select the prediction mode (for example, from prediction modes supported by the prediction processing unit 260). The prediction mode provides an optimal match or a minimum residual (the minimum residual means better compression for transmission or storage), or provides minimum signaling overheads (the minimum signaling overheads mean better compression for transmission or storage), or considers or balances both. The mode selection unit 262 may be configured to determine the prediction mode based on rate-distortion optimization (rate distortion optimization, RDO), that is, select a prediction mode that provides minimum rate-distortion optimization or select a prediction mode for which related rate distortion at least satisfies a prediction mode selection criterion.<!-- EPO <DP n="28"> --></p>
<p id="p0126" num="0126">In the following, prediction processing (for example, performed the prediction processing unit 260) and mode selection (for example, performed the mode selection unit 262) performed by the example encoder 20 are to be explained in detail.</p>
<p id="p0127" num="0127">As described above, the encoder 20 is configured to determine or select the optimal or optimum prediction mode from a set of (pre-determined) prediction modes. The set of prediction modes may include, for example, an intra prediction mode and/or an inter prediction mode.</p>
<p id="p0128" num="0128">A set of intra prediction modes may include 35 different intra prediction modes, for example, non-directional modes such as a DC (or average) mode and a planar mode, or directional modes such as those defined in H.265, or may include 67 different intra prediction modes, for example, non-directional modes such as a DC (or average) mode and a planar mode, or directional modes such as those defined in H.266 under development.</p>
<p id="p0129" num="0129">In a possible implementation, a set of inter prediction modes depends on available reference pictures (namely, for example, at least some decoded pictures stored in the DPB 230, as described above) and other inter prediction parameters, for example, depends on whether an entire reference picture or only a part of the reference picture, for example, a search window region around a region of a current block, is used for searching for an optimal matched reference block, and/or for example, depends on whether pixel interpolation such as half-pixel and/or quarterpixel interpolation is applied. The set of inter prediction modes may include, for example, an advanced motion vector prediction (Advanced Motion Vector Prediction, AMVP) mode and a merge (merge) mode. In specific implementation, the set of inter prediction modes may include a refined control point-based AMVP mode and a refined control point-based merge mode in the embodiments of the present invention. In an example, the intra prediction unit 254 may be configured to perform any combination of inter prediction techniques described below.</p>
<p id="p0130" num="0130">In addition to the foregoing prediction modes, a skip mode and/or a direct mode may also be applied in the embodiments of the present invention.</p>
<p id="p0131" num="0131">The prediction processing unit 260 may be further configured to partition the picture block 203 into smaller block partitions or subblocks, for example, by iteratively using quadtree (quad-tree, QT) partitioning, binary tree (binary-tree, BT) partitioning, triple tree (triple-tree, TT) partitioning, extended quadtree (EQT, Extended QuadTree), or any combination thereof, and perform, for example, prediction on each of the block partitions or subblocks. Mode selection includes selection of a tree structure of the partitioned picture block 203 and selection of a prediction mode applied to each of the block partitions or subblocks.</p>
<p id="p0132" num="0132">The inter prediction unit 244 may include a motion estimation (motion estimation, ME) unit (not depicted in <figref idref="f0003">FIG. 2</figref>) and a motion compensation (motion compensation, MC) unit (not depicted in <figref idref="f0003">FIG. 2</figref>). The motion<!-- EPO <DP n="29"> --> estimation unit is configured to receive or obtain the picture block 203 (the current picture block 203 of the current picture 201) and the decoded pictures 231, or at least one or more previously reconstructed blocks, for example, one or more reconstructed blocks of one or more other/different previously decoded pictures 231, for motion estimation. For example, a video sequence may include the current picture and a previously decoded picture 31. In other words, the current picture and the previously decoded picture 31 may be a part of a sequence of pictures forming a video sequence or form the sequence of pictures.</p>
<p id="p0133" num="0133">For example, the encoder 20 may be configured to select a reference block from a plurality of reference blocks of a same picture or different pictures in a plurality of other pictures and provide, for a motion estimation unit (not depicted in <figref idref="f0003">FIG. 2</figref>), a reference picture and/or provide an offset (a spatial offset) between a location (coordinates X and Y) of the reference block and a location of the current block as an inter prediction parameter. This offset is also referred to as a motion vector (motion vector, MV).</p>
<p id="p0134" num="0134">The motion compensation unit is configured to obtain the inter prediction parameter, and perform inter prediction based on or by using the inter prediction parameter, to obtain the inter prediction block 245. Motion compensation performed by the motion compensation unit (not depicted in <figref idref="f0003">FIG. 2</figref>) may include extracting or generating a prediction block based on a motion/block vector determined through motion estimation (interpolation may be performed at a sub-sample precision level). Interpolation filtering may generate additional pixel samples from known pixel samples, thereby potentially increasing a quantity of candidate prediction blocks that may be used to code a picture block. Upon receiving a motion vector for a PU of the current picture block, the motion compensation unit 246 may locate a prediction block to which the motion vector points in one of reference picture lists. The motion compensation unit 246 may further generate a syntax element associated with a block and a video slice, for use by the decoder 30 in decoding a picture block of the video slice.</p>
<p id="p0135" num="0135">Specifically, the inter prediction unit 244 may transmit a syntax element to the entropy encoding unit 270, where the syntax element includes an inter prediction parameter (for example, indication information of an inter prediction mode that is selected for prediction of the current block after a plurality of inter prediction modes are traversed). In a possible application scenario, if there is only one inter prediction mode, the inter prediction parameter may alternatively not be carried in the syntax element. In this case, the decoder side 30 may directly perform decoding in a default prediction mode. It can be understood that the inter prediction unit 244 may be configured to perform any combination of inter prediction techniques.</p>
<p id="p0136" num="0136">The intra prediction unit 254 is configured to obtain, for example, receive, a picture block 203 (the current picture block) and one or more previously reconstructed blocks, for example, reconstructed neighboring blocks,<!-- EPO <DP n="30"> --> of a same picture for intra estimation. The encoder 20 may be, for example, configured to select an intra prediction mode from a plurality of (predetermined) intra prediction modes.</p>
<p id="p0137" num="0137">In an embodiment, the encoder 20 may be configured to select an intra prediction mode according to an optimization criterion, for example, based on a minimum residual (for example, an intra prediction mode providing the prediction block 255 that is most similar to the current picture block 203) or minimum rate distortion.</p>
<p id="p0138" num="0138">The intra prediction unit 254 is further configured to determine the intra prediction block 255 based on, for example, an intra prediction parameter of the selected intra prediction mode. In any case, after selecting the intra prediction mode for a block, the intra prediction unit 254 is further configured to provide the intra prediction parameter, that is, information indicating the selected intra prediction mode for the block, to the entropy encoding unit 270. In an example, the intra prediction unit 254 may be configured to perform any combination of intra prediction techniques.</p>
<p id="p0139" num="0139">Specifically, the intra prediction unit 254 may transmit a syntax element to the entropy encoding unit 270, where the syntax element includes an intra prediction parameter (for example, indication information of an intra prediction mode that is selected for prediction of the current block after a plurality of intra prediction modes are traversed). In a possible application scenario, if there is only one intra prediction mode, the intra prediction parameter may alternatively not be carried in the syntax element. In this case, the decoder side 30 may directly perform decoding in a default prediction mode.</p>
<p id="p0140" num="0140">The entropy encoding unit 270 is configured to apply (or bypass) an entropy encoding algorithm or a scheme (for example, a variable length coding (variable length coding, VLC) scheme, a context adaptive VLC (context adaptive VLC, CAVLC) scheme, an arithmetic coding scheme, a context adaptive binary arithmetic coding (context adaptive binary arithmetic coding, CABAC), syntax-based context-adaptive binary arithmetic coding (syntax-based context-adaptive binary arithmetic coding, SBAC), probability interval partitioning entropy (probability interval partitioning entropy, PIPE) coding, or another entropy coding methodology or technique) on one or all of the following: the quantization coefficients 209, the inter prediction parameter, the intra prediction parameter, and/or the loop filter parameter, to obtain the encoded picture data 21 which can be output through an output 272, for example, in a form of an encoded bitstream 21. The encoded bitstream may be transmitted to the video decoder 30, or archived for later transmission or retrieval by the video decoder 30. The entropy encoding unit 270 may be further configured to entropy encode another syntax element for a current video slice being encoded.</p>
<p id="p0141" num="0141">Other structural variations of the video encoder 20 may be configured to encode a video stream. For example, a non-transform based encoder 20 may quantize a residual signal directly without the transform processing unit 206 for some blocks or frames. In another implementation, the encoder 20 includes the quantization unit 208 and<!-- EPO <DP n="31"> --> the inverse quantization unit 210 that can be combined into a single unit.</p>
<p id="p0142" num="0142">Specifically, in this embodiment of the present invention, the encoder 20 can be configured to implement a video encoding method described in the following embodiment.</p>
<p id="p0143" num="0143">It should be understood that other structural variations of the video encoder 20 may be configured to encode a video stream. For example, for some picture blocks or picture frames, the video encoder 20 may quantize the residual signal directly without processing by the transform processing unit 206, and correspondingly, without processing by the inverse transform processing unit 212. Alternatively, for some picture blocks or picture frames, the video encoder 20 does not generate residual data, and correspondingly, there is no need for the transform processing unit 206, the quantization unit 208, the inverse quantization unit 210, and the inverse transform processing unit 212 to perform processing. Alternatively, the video encoder 20 may directly store a reconstructed picture block as a reference block, without processing by the filter 220. Alternatively, the quantization unit 208 and the inverse quantization unit 210 in the video encoder 20 may be combined together. The loop filter 220 is optional. In a case of lossless compression encoding, the transform processing unit 206, the quantization unit 208, the inverse quantization unit 210, and the inverse transform processing unit 212 are optional. It should be understood that in different application scenarios, the inter prediction unit 244 and the intra prediction unit 254 may be used selectively.</p>
<p id="p0144" num="0144"><figref idref="f0004">FIG. 3</figref> is a schematic/conceptual block diagram of an example decoder 30 configured to implement an embodiment of the present invention. The video decoder 30 is configured to receive encoded picture data (for example, an encoded bitstream) 21 encoded by, for example, the encoder 20, to obtain a decoded picture 231. In a decoding process, the video decoder 30 receives video data from the video encoder 20, for example, an encoded video bitstream that represents a picture block of an encoded video slice and associated syntax elements.</p>
<p id="p0145" num="0145">In the example of <figref idref="f0004">FIG. 3</figref>, the decoder 30 includes an entropy decoding unit 304, an inverse quantization unit 310, an inverse transform processing unit 312, a reconstruction unit 314 (for example, a summer 314), a buffer 316, a loop filter 320, a decoded picture buffer 330, and a prediction processing unit 360. The prediction processing unit 360 may include an inter prediction unit 344, an intra prediction unit 354, and a mode selection unit 362. In some examples, the video decoder 30 may perform a decoding pass generally reciprocal to the encoding pass described with reference to the video encoder 20 in <figref idref="f0003">FIG. 2</figref>.</p>
<p id="p0146" num="0146">The entropy decoding unit 304 is configured to perform entropy decoding on the encoded picture data 21 to obtain, for example, quantization coefficients 309 and/or decoded encoding parameters (not depicted in <figref idref="f0004">FIG. 3</figref>), for example, any one or all of an inter prediction parameter, an intra prediction parameter, a loop filter parameter, and/or another syntax element (that are decoded). The entropy decoding unit 304 is further configured to forward the<!-- EPO <DP n="32"> --> inter prediction parameter, the intra prediction parameter, and/or the another syntax element to the prediction processing unit 360. The video decoder 30 may receive syntax elements at a video slice level and/or a video block level.</p>
<p id="p0147" num="0147">The inverse quantization unit 310 may have a same function as the inverse quantization unit 110. The inverse transform processing unit 312 may have a same function as the inverse transform processing unit 212. The reconstruction unit 314 may have a same function as the reconstruction unit 214. The buffer 316 may have a same function as the buffer 216. The loop filter 320 may have a same function as the loop filter 220. The decoded picture buffer 330 may have a same function as the decoded picture buffer 230.</p>
<p id="p0148" num="0148">The prediction processing unit 360 may include the inter prediction unit 344 and the intra prediction unit 354. The inter prediction unit 344 may resemble the inter prediction unit 244 in functions, and the intra prediction unit 354 may resemble the intra prediction unit 254 in functions. The prediction processing unit 360 is usually configured to perform block prediction and/or obtain a prediction block 365 from the encoded data 21, and receive or obtain (explicitly or implicitly) a prediction-related parameter and/or information about a selected prediction mode, for example, from the entropy decoding unit 304.</p>
<p id="p0149" num="0149">When a video slice is coded as an intra coded (I) slice, the intra prediction unit 354 of the prediction processing unit 360 is configured to generate a prediction block 365 for a picture block of the current video slice based on a signaled intra prediction mode and data that is from a previously decoded block of a current frame or picture. When a video frame is coded as an inter-coded (B or P) slice, the inter prediction unit 344 (for example, a motion compensation unit) of the prediction processing unit 360 is configured to generate the prediction block 365 for a video block of the current video slice based on a motion vector and another syntax element that is received from the entropy decoding unit 304. For inter prediction, the prediction block may be generated from one of reference pictures in one reference picture list. The video decoder 30 may construct reference frame lists: a list 0 and a list 1, by using a default construction technique based on reference pictures stored in the DPB 330.</p>
<p id="p0150" num="0150">The prediction processing unit 360 is configured to determine prediction information for the video block of the current video slice by parsing the motion vector and the another syntax element, and use the prediction information to generate a prediction block for the current video block that is being decoded. In an example of the present invention, the prediction processing unit 360 determines, by using some received syntax elements, a prediction mode (for example, intra prediction or inter prediction) for encoding the video block in the video slice, an inter prediction slice type (for example, a B slice, a P slice, or a GPB slice), construction information of one or more of the reference picture lists for the slice, a motion vector of each inter encoded video block in the slice, an inter prediction<!-- EPO <DP n="33"> --> status of each inter encoded video block in the slice, and other information, to decode the video block in the current video slice. In another example of this disclosure, the syntax elements received by the video decoder 30 from a bitstream include syntax elements in one or more of an adaptive parameter set (adaptive parameter set, APS), a sequence parameter set (sequence parameter set, SPS), a picture parameter set (picture parameter set, PPS), or a slice header.</p>
<p id="p0151" num="0151">The inverse quantization unit 310 may be configured to inverse quantize (namely, dequantize) a quantized transform coefficient provided in the bitstream and decoded by the entropy decoding unit 304. An inverse quantization process may include: using a quantization parameter calculated by the video encoder 20 for each video block in the video slice, to determine a quantization degree that should be applied and, likewise, an inverse quantization degree that should be applied.</p>
<p id="p0152" num="0152">The inverse transform processing unit 312 is configured to apply an inverse transform (for example, an inverse DCT, an inverse integer transform, or a conceptually similar inverse transform process) to the transform coefficient to generate a residual block in a pixel domain.</p>
<p id="p0153" num="0153">The reconstruction unit 314 (for example, the summer 314) is configured to add an inverse transform block 313 (namely, a reconstructed residual block 313) to the prediction block 365 to obtain a reconstructed block 315 in a sample domain, for example, by adding a sample value of the reconstructed residual block 313 and a sample value of the prediction block 365.</p>
<p id="p0154" num="0154">The loop filter unit 320 (during a coding loop or after a coding loop) is configured to filter the reconstructed block 315 to obtain a filtered block 321, to smooth pixel transition or improve video quality. In an example, the loop filter unit 320 may be configured to perform any combination of filtering techniques described below. The loop filter unit 320 is intended to represent one or more loop filters such as a deblocking filter, a sample-adaptive offset (sample-adaptive offset, SAO) filter, or another filter such as a bilateral filter, an adaptive loop filter (adaptive loop filter, ALF), a sharpening or smoothing filter, or a collaborative filter. Although the loop filter unit 320 is shown in <figref idref="f0004">FIG. 3</figref> as an in-loop filter, in other configurations, the loop filter unit 320 may be implemented as a post-loop filter.</p>
<p id="p0155" num="0155">A decoded video block 321 in a given frame or picture is then stored in the decoded picture buffer 330 that stores a reference picture used for subsequent motion compensation.</p>
<p id="p0156" num="0156">The decoder 30 is configured to, for example, output the decoded picture 31 through an output 332, for presentation to a user or viewing by a user.</p>
<p id="p0157" num="0157">Other variations of the video decoder 30 may be configured to decode a compressed bitstream. For<!-- EPO <DP n="34"> --> example, the decoder 30 may generate an output video stream without the loop filter unit 320. For example, a non-transform based decoder 30 may inversely quantize a residual signal directly without the inverse transform processing unit 312 for some blocks or frames. In another implementation, the video decoder 30 includes the inverse quantization unit 310 and the inverse transform processing unit 312 that can be combined into a single unit.</p>
<p id="p0158" num="0158">Specifically, in this embodiment of the present invention, the decoder 30 is configured to implement a video decoding method described in the following embodiment.</p>
<p id="p0159" num="0159">It should be understood that other structural variations of the video decoder 30 may be configured to decode the encoded video bitstream. For example, the video decoder 30 may generate an output video stream without processing performed by the filter 320. Alternatively, for some picture blocks or picture frames, the entropy decoding unit 304 of the video decoder 30 does not obtain quantization coefficients through decoding, and correspondingly, there is no need for the inverse quantization unit 310 and the inverse transform processing unit 312 to perform processing. The loop filter 320 is optional. In a case of lossless compression, the inverse quantization unit 310 and the inverse transform processing unit 312 are optional. It should be understood that in different application scenarios, the inter prediction unit and the intra prediction unit may be used selectively.</p>
<p id="p0160" num="0160">It should be understood that on the encoder 20 and the decoder 30 in this application, a processing result for a procedure may be output to a next procedure after being further processed. For example, after a procedure such as interpolation filtering, motion vector derivation, or loop filtering, an operation such as clip or shift shift is further performed on a processing result of a corresponding procedure.</p>
<p id="p0161" num="0161">For example, a motion vector of a control point of the current picture block or a motion vector of a subblock of the current picture block derived from a motion vector of a neighboring affine coded block may be further processed. This is not limited in this application. For example, a value of a motion vector is restricted to be within a specific bit width range. Assuming that an allowed bit width of a motion vector is bitDepth, a value of the motion vector ranges from ―2^(bitDepth ― 1) to 2^(bitDepth ― 1) ― 1, where the symbol "^" represents exponentiation. If bitDepth is 16, the value range is from -32768 to 32767. If bitDepth is 18, the value ranges from -131072 to 131071. For another example, values of motion vectors (for example, motion vectors MVs of four 4 x 4 subblocks in an 8 x 8 picture block) are restricted, so that a maximum difference between integer parts of the MVs of the four 4 x 4 subblocks does not exceed N pixels, for example, does not exceed one pixel.</p>
<p id="p0162" num="0162">The following two manners may be used to restrict the motion vector to be within a specific bit width:<br/>
Manner 1: An overflow most significant bit of the motion vector is removed: <maths id="math0001" num=""><math display="block"><mi>ux</mi><mo>=</mo><mfenced separators=""><mi>vx</mi><mo>+</mo><msup><mn>2</mn><mi>bitDepth</mi></msup></mfenced><mi>%</mi><mspace width="1ex"/><msup><mn>2</mn><mi>bitDepth</mi></msup></math><img id="ib0001" file="imgb0001.tif" wi="44" he="5" img-content="math" img-format="tif"/></maths><!-- EPO <DP n="35"> --> <maths id="math0002" num=""><math display="block"><mi>vx</mi><mo>=</mo><mfenced separators=""><mi>ux</mi><mo>&gt;</mo><mo>=</mo><msup><mn>2</mn><mrow><mi>bitDepth</mi><mo>−</mo><mn>1</mn></mrow></msup></mfenced><mo>?</mo><mfenced separators=""><mi>ux</mi><mo>−</mo><msup><mn>2</mn><mi>bitDepth</mi></msup></mfenced><mo>:</mo><mi>ux</mi></math><img id="ib0002" file="imgb0002.tif" wi="64" he="5" img-content="math" img-format="tif"/></maths> <maths id="math0003" num=""><math display="block"><mi>uy</mi><mo>=</mo><mfenced separators=""><mi>vy</mi><mo>+</mo><msup><mn>2</mn><mi>bitDepth</mi></msup></mfenced><mi>%</mi><mspace width="1ex"/><msup><mn>2</mn><mi>bitDepth</mi></msup></math><img id="ib0003" file="imgb0003.tif" wi="44" he="5" img-content="math" img-format="tif"/></maths> <maths id="math0004" num=""><math display="block"><mi>vy</mi><mo>=</mo><mfenced separators=""><mi>uy</mi><mo>&gt;</mo><mo>=</mo><msup><mn>2</mn><mrow><mi>bitDepth</mi><mo>−</mo><mn>1</mn></mrow></msup></mfenced><mo>?</mo><mfenced separators=""><mi>uy</mi><mo>−</mo><msup><mn>2</mn><mi>bitDepth</mi></msup></mfenced><mo>:</mo><mi>uy</mi></math><img id="ib0004" file="imgb0004.tif" wi="63" he="5" img-content="math" img-format="tif"/></maths></p>
<p id="p0163" num="0163">vx represents a horizontal component of the motion vector of the picture block or the subblock of the picture block. vy represents a vertical component of the motion vector of the picture block or the subblock of the picture block. ux and uy are intermediate values. bitDepth represents a bit depth.</p>
<p id="p0164" num="0164">For example, a value of vx is -32769, and 32767 is derived according to the foregoing formulas. A value is stored in a computer in a two's complement representation, a two's complement representation of -32769 is 1,0111,1111,1111,1111 (17 bits), and processing performed by the computer for overflowing is discarding a most significant bit. Therefore, a value of vx is 0111,1111,1111,1111, that is, 32767. This value is consistent with the result derived through processing according to the formulas.</p>
<p id="p0165" num="0165">Manner 2: Clipping is performed on the motion vector, as shown in the following formulas: <maths id="math0005" num=""><math display="block"><mi>vx</mi><mo>=</mo><mi>Clip</mi><mn>3</mn><mfenced separators=""><mo>−</mo><msup><mn>2</mn><mrow><mi>bitDepth</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>,</mo><mspace width="1ex"/><msup><mn>2</mn><mrow><mi>bitDepth</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn><mo>,</mo><mspace width="1ex"/><mi>vx</mi></mfenced></math><img id="ib0005" file="imgb0005.tif" wi="60" he="5" img-content="math" img-format="tif"/></maths> <maths id="math0006" num=""><math display="block"><mi>vy</mi><mo>=</mo><mi>Clip</mi><mn>3</mn><mfenced separators=""><mo>−</mo><msup><mn>2</mn><mrow><mi>bitDepth</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>,</mo><mspace width="1ex"/><msup><mn>2</mn><mrow><mi>bitDepth</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn><mo>,</mo><mspace width="1ex"/><mi>vy</mi></mfenced></math><img id="ib0006" file="imgb0006.tif" wi="60" he="5" img-content="math" img-format="tif"/></maths></p>
<p id="p0166" num="0166">vx represents a horizontal component of the motion vector of the picture block or the subblock of the picture block. vy represents a vertical component of the motion vector of the picture block or the subblock of the picture block. x, y, and z correspond to three input values of an MV clamping process clip3. Clip3 is defined to indicate clipping a value of z to a range [x, y]. <maths id="math0007" num=""><math display="block"><mi>Clip</mi><mn>3</mn><mfenced><mi mathvariant="normal">x</mi><mi mathvariant="normal">y</mi><mi mathvariant="normal">z</mi></mfenced><mo>=</mo><mrow><mo>{</mo><mtable columnalign="right"><mtr><mtd><mrow><mi>x</mi><mo>;</mo></mrow></mtd><mtd><mrow><mi>z</mi><mo>&lt;</mo><mi>x</mi></mrow></mtd></mtr><mtr><mtd><mrow><mi>y</mi><mo>;</mo></mrow></mtd><mtd><mrow><mi>z</mi><mo>&gt;</mo><mi>y</mi></mrow></mtd></mtr><mtr><mtd><mrow><mi>z</mi><mo>;</mo></mrow></mtd><mtd><mi mathvariant="italic">otherwise</mi></mtd></mtr></mtable></mrow></math><img id="ib0007" file="imgb0007.tif" wi="58" he="23" img-content="math" img-format="tif"/></maths></p>
<p id="p0167" num="0167"><figref idref="f0005">FIG. 4</figref> is a schematic structural diagram of a video coding device 400 (for example, a video encoding device 400 or a video decoding device 400) according to an embodiment of the present invention. The video coding device 400 is suitable for implementing an embodiment described in this specification. In an embodiment, the video coding device 400 may be a video decoder (for example, the decoder 30 in <figref idref="f0001">FIG. 1A</figref>) or a video encoder (for example, the encoder 20 in <figref idref="f0001">FIG. 1A</figref>). In another embodiment, the video coding device 400 may be one or more components of the decoder 30 in <figref idref="f0001">FIG. 1A</figref> or the encoder 20 in <figref idref="f0001">FIG. 1A</figref>.</p>
<p id="p0168" num="0168">The video coding device 400 includes: ingress ports 410 and a receiver unit (Rx) 420 that are configured to receive data; a processor, a logic unit, or a central processing unit (CPU) 430 that is configured to process data; a transmitter unit (Tx) 440 and egress ports 450 that are configured to transmit data; and a memory 460 configured to<!-- EPO <DP n="36"> --> store data. The video coding device 400 may further include an optical-to-electrical component and an electrical-tooptical (EO) component that are coupled to the ingress ports 410, the receiver unit 420, the transmitter unit 440, and the egress ports 450, for egress or ingress of optical or electrical signals.</p>
<p id="p0169" num="0169">The processor 430 is implemented by using hardware and software. The processor 430 may be implemented as one or more CPU chips, cores (for example, multi-core processors), FPGAs, ASICs, and DSPs. The processor 430 communicates with the ingress ports 410, the receiver unit 420, the transmitter unit 440, the egress ports 450, and the memory 460. The processor 430 includes a coding module 470 (for example, an encoding module 470 or a decoding module 470). The encoding/decoding module 470 implements the embodiments disclosed in this specification, to implement the chroma block prediction method provided in the embodiments of the present invention. For example, the encoding/decoding module 470 implements, processes, or provides various coding operations. Therefore, inclusion of the encoding/decoding module 470 provides a substantial improvement to functions of the video coding device 400 and affects a transform of the video coding device 400 to a different state. Alternatively, the encoding/decoding module 470 is implemented as instructions stored in the memory 460 and executed by the processor 430.</p>
<p id="p0170" num="0170">The memory 460 includes one or more disks, tape drives, and solid state drives and may be used as an overflow data storage device, to store programs when such programs are selectively executed, and to store instructions and data that are read during program execution. The memory 460 may be volatile and/or non-volatile, and may be a read-only memory (ROM), a random access memory (RAM), a ternary content-addressable memory (ternary content-addressable memory, TCAM), and/or a static random access memory (SRAM).</p>
<p id="p0171" num="0171"><figref idref="f0006">FIG. 5</figref> is simplified block diagram of an apparatus 500 that can be used as either or both of the source device 12 and the destination device 14 in <figref idref="f0001">FIG. 1A</figref> according to an example embodiment. The apparatus 500 can implement the technologies of this application. In other words, <figref idref="f0006">FIG. 5</figref> is a schematic block diagram of an implementation of an encoding device or a decoding device (coding device 500 for short) according to an embodiment of this application. The coding device 500 may include a processor 510, a memory 530, and a bus system 550. The processor and the memory are connected through the bus system. The memory is configured to store instructions. The processor is configured to execute the instructions stored in the memory. The memory of the coding device stores program code. The processor can invoke the program code stored in the memory, to perform various video encoding or decoding methods described in this application, and in particular, various new video decoding methods. To avoid repetition, details are not described herein again.</p>
<p id="p0172" num="0172">In this embodiment of this application, the processor 510 may be a central processing unit (Central<!-- EPO <DP n="37"> --> Processing Unit, "CPU" for short), or the processor 510 may be another general-purpose processor, a digital signal processor (DSP), an application-specific integrated circuit (ASIC), a field-programmable gate array (FPGA) or another programmable logic device, a discrete gate or transistor logic device, a discrete hardware component, or the like. The general-purpose processor may be a microprocessor, or may be any conventional processor or the like.</p>
<p id="p0173" num="0173">The memory 530 may include a read-only memory (ROM) device or a random access memory (RAM) device. Any other suitable type of storage device may alternatively be used as the memory 530. The memory 530 may include code and data 531 accessed by the processor 510 by using the bus 550. The memory 530 may further include an operating system 533 and an application program 535. The application program 535 includes at least one program that allows the processor 510 to perform the video encoding or decoding method (in particular, the decoding method described in this application) described in this application. For example, the application program 535 may include applications 1 to N, and further includes a video encoding or decoding application (video coding application for short) that performs the video encoding or decoding method described in this application.</p>
<p id="p0174" num="0174">The bus system 550 may not only include a data bus, but also include a power bus, a control bus, a status signal bus, and the like. However, for clear description, various types of buses in the figure are marked as the bus system 550.</p>
<p id="p0175" num="0175">Optionally, the coding device 500 may further include one or more output devices, for example, a display 570. In an example, the display 570 may be a touch sensitive display that combines a display and a touch sensitive unit that is operable to sense a touch input. The display 570 may be connected to the processor 510 through the bus 550.</p>
<p id="p0176" num="0176">The following describes in detail the solutions in the embodiments of this application.</p>
<heading id="h0006">Key terms and definitions</heading>
<p id="p0177" num="0177">CTU: coding tree unit (coding tree unit). A picture includes a plurality of CTUs, and one CTU generally corresponds to one square picture region, and includes luma samples and chroma samples in the picture region (or may include only luma samples, or may include only chroma samples). The CTU further includes syntax elements. These syntax elements indicate how to split the CTU into at least one coding unit (coding unit, CU), and a method for decoding each coding unit to obtain a reconstructed picture.</p>
<p id="p0178" num="0178">CU: coding unit. A CU generally corresponds to an A x B rectangular region, and includes A x B luma samples and chroma samples corresponding to the A x B luma samples. A represents the width of the rectangle, B represents the height of the rectangle, and A and B may be the same or different. Values of A and B are generally 2 raised to the power of an integer, for example, 256, 128, 64, 32, 16, 8, or 4. Decoding processing may be performed<!-- EPO <DP n="38"> --> on a coding unit to obtain a reconstructed picture of the A x B rectangular region. The decoding processing generally includes processing such as prediction, dequantization, and inverse transform, to generate a predicted picture and a residual. The predicted picture and the residual are added up to obtain a reconstructed picture.</p>
<p id="p0179" num="0179">Quadtree is a tree structure. One node may be split into four child nodes. In the video coding standard H.265, a quadtree-based CTU partition mode in which the CTU is used as a root node, and each node corresponds to a square area is used. A node may not be split (in this case, an area corresponding to the node is a CU), or the node is split into four lower-level nodes, to be specific, the square area is split into four equal-sized square areas (the length and the width of each of the four equal-sized square areas are half of the length and the width of the square area before split), and each area corresponds to one node, as shown in <figref idref="f0006">FIG. 6(a)</figref>.</p>
<p id="p0180" num="0180">Binary tree is a tree structure. One node may be split into two child nodes. In an existing binary tree-based coding method, a node in the binary tree structure may not be split, or the node is split into two lower-level nodes. The splitting into two child nodes may be performed in either of the following two manners: (1) horizontal binary split: splitting a region corresponding to the node into two regions of a same size: an upper region and a lower region, where each region corresponds to one node, as shown in <figref idref="f0006">FIG. 6(b)</figref>; and (<figref idref="f0003">2</figref>) vertical binary split: splitting a region corresponding to the node into two regions of a same size: a left region and a right region, where each region corresponds to one node, as shown in <figref idref="f0006">FIG. 6(c)</figref>.</p>
<p id="p0181" num="0181">Triple tree is a tree structure. One node may be split into three child nodes. In an existing ternary tree-based coding method, a node in the ternary tree structure may not be split, or the node is split into three lower-level nodes. The splitting into two three nodes may be performed in either of the following two manners: (1) horizontal ternary tree split: splitting a region corresponding to a node into three regions: an upper region, a middle region, and a lower region, where each region corresponds to one node, and the heights of the three regions are 1/4, 1/2, and 1/4 of the heights of the node, as shown in <figref idref="f0006">FIG. 6(d)</figref>; and (<figref idref="f0003">2</figref>) vertical ternary tree split: splitting a region corresponding to a node into three regions: a left region, a middle region, and a right region, where each region corresponds to one node, and the widths of the three regions are 1/4, 1/2, and 1/4 of the heights of the node, as shown in <figref idref="f0006">FIG. 6(e)</figref>.</p>
<p id="p0182" num="0182">Video decoding (video decoding) is a processing process of restoring a video bitstream to a reconstructed picture according to a specific syntax rule and a processing method.</p>
<p id="p0183" num="0183">Video encoding (video encoding) is a processing process of compressing a picture sequence into a bitstream.</p>
<p id="p0184" num="0184">Video coding (video coding) is an umbrella term for video encoding and video decoding. Video coding and video encoding have a same Chinese translation.<!-- EPO <DP n="39"> --></p>
<p id="p0185" num="0185">VTM is a new codec reference software developed by the JVET.</p>
<p id="p0186" num="0186">AVS2: second generation audio video coding standard (AVS)</p>
<p id="p0187" num="0187">According to the video coding standard, a frame of picture is partitioned into non-overlapping coding tree units (CTU). A size of a CTU may be set to 64 x 64 (the size of the CTU may alternatively be set to another value, for example, the size of the CTU in JVET reference software JEM is increased to 128 x 128 or 256 x 256). A 64 x 64 CTU is a rectangular pixel matrix with 64 rows of which each row includes 64 pixels, and each pixel includes a luma component or/and a chroma component.</p>
<p id="p0188" num="0188">A quadtree (quad-tree, QT for short)-based CTU split method is used in video coding. A CTU serves as a root (root) node of a quadtree, and the CTU is recursively split into several leaf nodes (leaf node) in the quadtree split mode. One node corresponds to one picture area. If a node is not split, the node is referred to as a leaf node, and a picture area corresponding to the node becomes a CU. If a node is further split, a picture area corresponding to the node is split into four areas of a same size (the length and the width of the four areas are half the length and the width of the split area respectively), and each area corresponds to one node. Whether these nodes are further split needs to be separately determined. Whether a node is further split is indicated by a split flag split cu flag that is in a bitstream and that corresponds to the node. A quadtree depth (qtDepth) of a root node is 0, and a quadtree depth of a child node is a quadtree depth of a parent node plus 1. For brevity of description, in the following, a size and a shape of a node are a size and a shape of a picture region corresponding to the node.</p>
<p id="p0189" num="0189">More specifically, for a 64 x 64 CTU node (a quadtree depth is 0), the 64 x 64 CTU node may not be split based on split cu flag corresponding to the 64 x 64 CTU node, and the CTU node forms one 64 x 64 CU; or the 64 x 64 CTU node is split into four 32 x 32 nodes (the quadtree depth is 1). Each of the four 32 x 32 nodes may be further split or not split based on split cu flag corresponding to each of the four nodes. If one 32 x 32 node is further split, four 16 x 16 nodes are generated (the quadtree depth is 2). By analogy, splitting ends until all the nodes are not further split, and such a CTU is split into a group of CUs. A minimum size (size) of a CU is identified in an SPS, for example, 8 x 8 represents the minimum size of the CU. In the foregoing recursive split process, if a size of a node is equal to the minimum CU size (minimum CU size), the node is not further split by default, and a split flag of the node does not need to be included in a bitstream.</p>
<p id="p0190" num="0190">After a node is parsed to be a leaf node, the leaf node is a CU, coding information (including information such as a prediction mode and a transform coefficient of the CU, for example, a coding_unit() syntax structure in H.265) corresponding to the CU is further parsed. Then, decoding processing such as prediction, dequantization, inverse transform, and loop filtering is performed on the CU based on the coding information, to generate a<!-- EPO <DP n="40"> --> reconstructed picture corresponding to the CU. The CTU may be split into a group of CUs with appropriate sizes based on a local picture feature by using the quadtree structure. For example, a smooth region is split into larger CUs, and a richly textured region is split into smaller CUs.</p>
<p id="p0191" num="0191">A mode of splitting a CTU into a group of CUs corresponds to a coding tree (coding tree). That a specific coding tree should be used for a CTU is usually determined based on a rate distortion optimization (rate distortion optimization, RDO) technology of an encoder. An encoder attempts to use a plurality of CTU partition modes, and each partition mode corresponds to one rate distortion cost (RD cost). The encoder compares RD costs of various partition modes that have been attempted to use, finds a partition mode with a smallest RD cost, and uses the partition mode as an optimal partition mode of the CTU for actual coding of the CTU. The CTU partition modes that the encoder has attempted to use need to comply with a split rule specified by a decoder, so that the decoder can correctly identify the CTU partition modes.</p>
<p id="p0192" num="0192">The video coding standard is a block-based coding scheme. First, a frame of a picture needs to be partitioned into non-overlapping coding tree units (CTUs). A size of a CTU may be set to 64 x 64 (the size of the CTU may alternatively be set to another value; for example, the size of the CTU in JVET reference software JEM is increased to 128 x 128 or 256 x 256). The CTU may be further split into several coding units CUs based on a quadtree (quad-tree, QT) structure, and each CU includes one luma coding block (CB), two chroma coding blocks (CB), and corresponding syntax elements (including information such as a prediction mode and a transform coefficient of the CU, for example, the coding_unit() syntax structure in H.265). The coding unit CU may be further split into one or more prediction units (Prediction Unit, PU) and one or more transform units (Transform Unit, TU).</p>
<p id="p0193" num="0193">A prediction unit is a basic unit for performing prediction operations, including intra prediction and inter prediction. A CU determines all PU prediction modes and partition modes included in the unit.</p>
<p id="p0194" num="0194">A transform unit is a basic unit for performing transform and quantization, and is obtained by splitting the CU. Splitting from a CU to TUs is performed by using a quadtree (quad-tree, QT), which is referred to as a "transform tree", or by using a residual quad tree (Residual Quad Tree, RQT). In the JVET, a triple tree (Triple Tree, TT) or binary tree (binary tree, BT) split mode may alternatively be used.</p>
<p id="p0195" num="0195">In the video coding standard, one CU may be split into a plurality of PUs, splitting from the CU to the PU is performed at only one level, and a smallest PU is 4 x 4. As shown in <figref idref="f0007">FIG. 7</figref>, one 2N x 2N CU may be split into PUs in eight modes. For inter prediction, there are eight optional modes shown in <figref idref="f0007">FIG. 7</figref>. For intra prediction, only a 2N x 2N or N x N mode can be used.</p>
<p id="p0196" num="0196">Based on the foregoing solution to splitting the CU into the PUs, AVS2 provides the following split<!-- EPO <DP n="41"> --> methods: quartering partition (including horizontal quartering partition and vertical quartering partition) and asymmetric partition (asymmetric partition, AMP). The asymmetric partition includes horizontal asymmetric binary split and vertical asymmetric binary split, as shown in <figref idref="f0007">FIG. 8(a) to FIG. 8(f)</figref>. The horizontal quartering partition and the vertical quartering partition are shown in <figref idref="f0007">FIG. 8(e) and FIG. 8(f)</figref>. A size of the current coding block is W x H, that is, W pixels are included in a horizontal direction, and H pixels are included in a vertical direction.</p>
<p id="p0197" num="0197">A manner of splitting a CU into a plurality of TUs is quadtree (quad-tree, QT) split, or may be binary split, ternary split, horizontal quartering partition, or vertical quartering partition.</p>
<p id="p0198" num="0198">Binary split includes horizontal binary split and vertical binary split. A CU is split into two TUs, as shown in <figref idref="f0008">FIG. 9</figref>.</p>
<p id="p0199" num="0199">Ternary split includes horizontal ternary split and vertical ternary split, and a CU is split into three TUs. In horizontal ternary split, the current CU is horizontally split into two TUs having a size of W x (H/4) and one TU having a size of W x (H/2), as shown in <figref idref="f0008">FIG. 10</figref>.</p>
<p id="p0200" num="0200">In this technology, partition complexity is relatively high and small chroma blocks (especially chroma blocks having sizes of 2 x 2, 2 x 4, and 2 x 8) are generated. For a hardware decoder, costs for processing small blocks are relatively high. However, a partition mode in an existing technology 1 generates small blocks having sizes of 2 x 2, 2 x 4, or the like. This is unfavorable for implementation of the hardware decoder.</p>
<p id="p0201" num="0201">The present invention provides a method for splitting a CU into PBs (prediction block, prediction block). A PB partition mode is determined based on a size of a to-be-split CU, and does not need to be obtained from a bitstream, thereby reducing coding complexity.</p>
<p id="p0202" num="0202">The present invention further provides a method for splitting a CU into TBs (transform block, transform block). When a side length of a luma TB obtained after CU splitting is 4, a size of a corresponding chroma TB is the same as a size of a chroma block of the CU. In this manner, a chroma block whose side length is 2 may be avoided, and a maximum throughput of the decoder is reduced, facilitating implementation of the decoder.</p>
<p id="p0203" num="0203">The present invention provides a method for splitting a CU into PBs (prediction block, prediction block). A PB partition mode that is allowed to be used is determined based on a size of a to-be-split CU, thereby reducing coding complexity.</p>
<p id="p0204" num="0204">The present invention further provides a method for splitting a CU into TBs (transform block, transform block). A TB partition mode can be determined based on a PB partition mode. In this manner, coding complexity can be reduced, and coding performance can be improved.</p>
<p id="p0205" num="0205">The present invention is applicable to a video encoder and a video decoder. A video communication<!-- EPO <DP n="42"> --> system is shown in <figref idref="f0006">FIG. 5</figref>, in which 18 represents a video encoder, and 24 represents a video decoder. The present invention is applicable to modules 18 and 24.</p>
<p id="p0206" num="0206">The present invention relates to a processing manner in which a coding unit (coding unit, CU) in video decoding is split into a prediction block PB and a transform block TB for decoding. A video data format in the embodiments is a YUV4:2:0 format. A similar manner may be used for YUV4:2:2 data.</p>
<p id="p0207" num="0207">Step 1: Parse a bitstream to obtain a prediction mode of a current coding unit.</p>
<p id="p0208" num="0208">A corresponding syntax element in the bitstream is parsed to determine whether the prediction mode of the current coding unit is inter prediction or intra prediction.</p>
<p id="p0209" num="0209">Step 2: Determine whether a current coding block (or referred to as a current coding unit) needs to be split into at least two luma PBs.</p>
<p id="p0210" num="0210">Specifically, a partition mode of the current coding block may be at least one of quartering partition (including horizontal quartering partition and vertical quartering partition) and asymmetric partition AMP, or may be another partition mode. This is not limited in the present invention.</p>
<p id="p0211" num="0211">In some implementations, whether the current coding block needs to be split into at least two luma PBs may be identified by using a syntax element. Therefore, determining whether the current coding block needs to be split into at least two luma PBs can be implemented by parsing a bitstream.</p>
<p id="p0212" num="0212">In some implementations, whether the current coding block needs to be split into at least two luma PBs may alternatively be derived based on a width and a height of the current coding unit. The derivation method needs to meet at least one of the following conditions:</p>
<p id="p0213" num="0213">Condition 1: A ratio of a width to a height W/H of the current coding block is between 1/N and N (including 1/N or N), where N is, for example, 2.</p>
<p id="p0214" num="0214">Condition 2: A maximum side length of the current coding block is maxSize (or referred to as a first threshold). For example, maxSize is 64 or 32.</p>
<p id="p0215" num="0215">Condition 3: A ratio of a width to a height of a PB obtained through splitting is between 1/M and M (including 1/M or M), where M is, for example, 8.</p>
<p id="p0216" num="0216">Condition 4: Both a width and a height of a PB obtained through splitting are greater than or equal to a threshold minSize (or referred to as a second threshold), where minSize is an integer greater than 1. For example, minSize is 4.</p>
<p id="p0217" num="0217">Condition 5: A minimum side length of the current coding block is S (or referred to as a third threshold), and both a width and a height of a PB obtained through splitting are greater than or equal to K (or referred to as a<!-- EPO <DP n="43"> --> fourth threshold). For example, S is 16, and K is 4.</p>
<p id="p0218" num="0218">If the current coding block needs to be split into at least two luma PBs, step 3 to step 6 are performed.</p>
<p id="p0219" num="0219">Step 3: Determine a luma PB partition mode of the current coding block.</p>
<p id="p0220" num="0220">Information about the luma PB partition mode of the current coding block is usually transmitted in a bitstream, and the luma PB partition mode of the current coding block can be obtained by parsing a corresponding syntax element in the bitstream. During the parsing of the luma PB partition mode of the current coding block, the luma PB partition mode that is allowed to be used for the current coding block is determined based on a width and a height of the current coding block or/and a width and a height of the luma PB obtained through splitting. The determining method may include one of the following methods:</p>
<p id="p0221" num="0221">Method 1: When both the width and the height of the current coding block are less than or equal to X, quartering partition and AMP partition may be used, where X is an integer greater than 16. For example, X is 32 or 64.</p>
<p id="p0222" num="0222">Method 2: When both the width and the height of the current coding block are equal to Y, only quartering partition is used, and AMP partition cannot be used, where Y is an integer greater than 16. For example, Y is 64.</p>
<p id="p0223" num="0223">Method 3: When a side length of a to-be-split side of the current coding block is equal to A, and a side length of a non-split side is equal to B, the to-be-split side can be split only through quartering partition, and AMP partition cannot be used, where A and B are integers greater than 4. For example, A is 64 and B is 32. For another example, A is 32 and B is 32. The to-be-split side is the width of the current coding block. In this case, a partition mode of the to-be-split side is vertical quartering partition, vertical asymmetric partition 1:3, or vertical asymmetric partition 3:1. If the to-be-split side is the height of the current coding block, the partition mode of the to-be-split side is horizontal quartering partition, horizontal asymmetric partition 1:3, or horizontal asymmetric partition 3:1.</p>
<p id="p0224" num="0224">Method 4: When a side length of a to-be-split side of the current coding block is equal to C, and a side length of a non-split side is equal to D, the to-be-split side is split without using quartering partition and AMP. C and D are integers greater than 4. For example, C is 32 and D is 64. For another example, C is 32 and D is 32.</p>
<p id="p0225" num="0225">Method 5: When a side length of a to-be-split side of the current coding block is less than a threshold T, the to-be-split side may be split through AMP partition, and quartering partition cannot be used, where T is an integer greater than or equal to 16; for example, T = 16 or T = 32.</p>
<p id="p0226" num="0226">The to-be-split side of the coding block is a side perpendicular to a partition direction: when the partition mode is vertical quartering partition or vertical asymmetric binary split, the to-be-split side is the width of the coding block; when the partition mode is horizontal quartering partition or horizontal asymmetric binary split, the to-be-split<!-- EPO <DP n="44"> --> side is the height of the coding block. The non-to-be-split side of the coding block is a side parallel to a partition direction: when the partition mode is vertical quartering partition or vertical asymmetric binary split, the non-split side is the height of the coding block; when the partition mode is horizontal quartering partition or horizontal asymmetric binary split, the to-be-split side is the width of the coding block.</p>
<p id="p0227" num="0227">Step 4: Split the current coding block in a corresponding partition mode, to obtain a luma PB and a chroma PB.</p>
<p id="p0228" num="0228">If the current coding block uses intra prediction, the luma block of the current coding block is split in the luma PB partition mode of the current coding block, to obtain each luma PB; and the chroma block of the current coding block is not split, and corresponds to one chroma PB.</p>
<p id="p0229" num="0229">If inter prediction is used for the current coding block, one of the following modes may be used:
<ul id="ul0012" list-style="none" compact="compact">
<li>Mode 1: The chroma block and the luma block of the current coding block are split in the luma PB partition mode of the current coding block, to obtain each luma PB and each chroma PB.</li>
<li>Mode 2: When the luma block is split into at least two luma PBs, and a side length of at least one side of the luma PB obtained through splitting is 4, the chroma block is not split, and becomes one chroma PB. Otherwise, the chroma block and the luma block of the current coding block are split in the luma PB partition mode of the current coding block, to obtain each luma PB and each chroma PB. When the chroma block is not split, motion information of the chroma component is motion information of the luma PB at a central location of the current coding block.</li>
</ul></p>
<p id="p0230" num="0230">The central location means that if the size of the current coding block is W x H, coordinates of the central location of the current coding block relative to the upper left vertex of the current coding block are (W/2, H/2).</p>
<p id="p0231" num="0231">Step 5: Determine a luma TB partition mode and a chroma TB partition mode of the current coding block, to obtain a size of each TB.</p>
<p id="p0232" num="0232">When the current coding block uses intra prediction, a TB can be obtained by using one of the following methods:
<ol id="ol0001" compact="compact" ol-style="">
<li>(a) If the luma PB partition mode is vertical quartering partition or vertical asymmetric binary split, the luma block of the current coding block is split into four luma TBs in a vertical quartering partition mode.</li>
<li>(b) If the luma PB partition mode is horizontal quartering partition or horizontal asymmetric binary split, the luma block of the current coding block is split into four luma TBs in the horizontal quartering partition mode.</li>
<li>(c) The chroma block is not split, and becomes one chroma TB.</li>
</ol></p>
<p id="p0233" num="0233">When inter prediction is used for the current coding block, a TB can be obtained by using one of the following methods:<!-- EPO <DP n="45"> -->
<ol id="ol0002" compact="compact" ol-style="">
<li>(a) If the luma PB partition mode is vertical quartering partition or vertical asymmetric binary split, the luma block of the current coding block may be split into four luma TBs in a vertical quartering partition mode, or directly becomes one luma TB without splitting.</li>
<li>(b) If the luma PB partition mode is horizontal quartering partition or horizontal asymmetric binary split, the luma block of the current coding block may be split into four TBs in a horizontal quartering partition mode, or is not split and becomes one TB. Whether the luma block is split into four TBs or becomes one TB can be determined by parsing a syntax element in a bitstream.</li>
<li>(c) Splitting the chroma block into TBs can be performed in one of the following modes:
<ul id="ul0013" list-style="none" compact="compact">
<li>Mode 1: A mode of splitting the chroma block into TBs is the same as a mode of splitting the luma block into TBs.</li>
<li>Mode 2: The chroma block is not split, and becomes one chroma TB.</li>
<li>Mode 3: When the luma block is split into four luma TBs in a quartering partition mode, and a side length of one side of the luma TB is E (which may be, for example, 4), the chroma block is not split and becomes one chroma TB.</li>
</ul></li>
</ol></p>
<p id="p0234" num="0234">Step 6: Obtain prediction information of each luma PB, and obtain residual information of each luma TB.</p>
<p id="p0235" num="0235">The prediction information of the luma PB and the residual information of the luma TB may be obtained by parsing corresponding syntax elements in the bitstream, or may be obtained through derivation.</p>
<p id="p0236" num="0236">The prediction information of the luma PB includes: a prediction mode (indicating an intra prediction mode or an inter prediction mode), an intra prediction mode, motion information, and the like. The intra prediction mode of the luma block may be one of a planar mode (Planar Mode), a direct current mode (DC Mode), and an angular mode (angular Mode). The motion information may include information such as a prediction direction (forward, backward, or bidirectional), a reference frame index (reference index), or a motion vector (motion vector).</p>
<p id="p0237" num="0237">The residual information of the luma TB includes a coded block flag (coded block flag, cbf), a transform coefficient, a transform type (for example, DCT-2, DST-7, or DCT-8), and the like.</p>
<p id="p0238" num="0238">Step 7: Obtain prediction information of each chroma PB, and obtain residual information of the chroma TB.</p>
<p id="p0239" num="0239">The prediction information of the chroma PB and the residual information of the chroma TB may be obtained by parsing corresponding syntax elements in the bitstream, or may be obtained through derivation.</p>
<p id="p0240" num="0240">The intra prediction mode of the chroma PB may be one of a direct current mode, a planar mode, an<!-- EPO <DP n="46"> --> angular mode, and a linear model (linear model) mode.</p>
<p id="p0241" num="0241">The transform type of the chroma TB may be DCT-2 transform by default.</p>
<p id="p0242" num="0242">After the prediction information of each luma PB and the residual information of each luma TB are obtained, inter prediction processing or intra prediction processing may be performed on each luma PB based on a prediction mode corresponding to each luma PB, to obtain an inter prediction picture or an intra prediction picture of each luma PB. Then, based on the residual information of each luma TB, the transform coefficient is inversely quantized and inversely transformed to obtain a residual picture of each luma TB. The predicted picture of each luma PB and the residual picture of each luma TB are added to generate a reconstructed picture of the luma block.</p>
<p id="p0243" num="0243">After the prediction information of each chroma PB and the residual information of each chroma TB are obtained, inter prediction processing or intra prediction processing may be performed on each chroma PB based on a prediction mode of each chroma PB, to obtain an inter prediction picture or an intra prediction picture of each chroma PB. Then, based on the residual information of each chroma TB, the transform coefficient is inversely quantized and inversely transformed to obtain a residual picture. The predicted picture of each chroma PB and the residual picture of each chroma TB are added to generate a reconstructed picture of the chroma block.</p>
<p id="p0244" num="0244">A plurality of types of PB and TB split are used to improve coding efficiency. A PB and TB split mode available for the current CU is determined based on a width and a height of the current CU, so as to prevent a size of a PB from exceeding a size (for example, 32 x 32) of a hardware pipeline unit. In addition, for a coding unit for which inter prediction is used, when the luma block is split into four TBs and a side length of the TB is 4, the chroma TB is not split, so as to avoid generating a chroma TB whose side length is 2.</p>
<p id="p0245" num="0245">The technical solutions of the present invention bring the beneficial effect of reducing coding complexity.</p>
<p id="p0246" num="0246">A chroma block whose side length is 2 may be avoided, and a maximum throughput of the decoder is reduced, facilitating implementation of the hardware decoder.</p>
<p id="p0247" num="0247"><figref idref="f0009">FIG. 12</figref> is a schematic flowchart of a method 1200 for processing a coding block according to an embodiment of this application.</p>
<p id="p0248" num="0248">It should be understood that the method 1200 for processing a coding block shown in <figref idref="f0009">FIG. 12</figref> may be performed by the foregoing encoder 20 shown in <figref idref="f0003">FIG. 2</figref>, or may be performed by the foregoing decoder 30 shown in <figref idref="f0004">FIG. 3</figref>. The method 1200 shown in <figref idref="f0009">FIG. 12</figref> includes steps 1210, 1220, and 1230, which are described in detail below.</p>
<p id="p0249" num="0249">S1210: Obtain a prediction mode of a current coding unit, and/or obtain a prediction partition mode of the current coding unit, where the current coding unit includes a luma coding block and a chroma coding block, and the prediction partition mode is a mode of splitting the current coding unit into prediction blocks or prediction units.<!-- EPO <DP n="47"> --></p>
<p id="p0250" num="0250">The prediction mode may include an intra prediction mode and an inter prediction mode, and the prediction partition mode may include quartering partition and asymmetric partition (asymmetric partition, AMP).</p>
<p id="p0251" num="0251">As shown in <figref idref="f0010">FIG. 13(a) to FIG. 13(f)</figref>, the asymmetric partition may include vertical asymmetric partition 3:1, vertical asymmetric partition 1:3, horizontal asymmetric partition 1:3, and horizontal asymmetric partition 3:1. The quartering partition may include vertical quartering partition and horizontal quartering partition. A size of the current coding block is W x H, that is, W pixels are included in a horizontal direction, and H pixels are included in a vertical direction.</p>
<p id="p0252" num="0252">It should be understood that <figref idref="f0010">FIG. 13(a) to FIG. 13(f)</figref> are merely an example rather than a limitation. The prediction partition mode of the current coding block in this application may also include another partition mode. This is not limited in this embodiment of this application.</p>
<p id="p0253" num="0253">Optionally, when the method 1200 is performed by an encoder, the obtaining a prediction mode of a current coding unit (coding unit, CU) may include: obtaining the prediction mode.</p>
<p id="p0254" num="0254">When the method 1200 is performed by a decoder, the obtaining a prediction mode of a current coding unit may include: obtaining the prediction mode from a bitstream through parsing or derivation, where the prediction mode includes an intra prediction mode and an inter prediction mode.</p>
<p id="p0255" num="0255">Similarly, when the method 1200 is performed by an encoder, the obtaining a prediction partition mode of the current coding unit may include: obtaining the prediction partition mode.</p>
<p id="p0256" num="0256">When the method 1200 is performed by a decoder, the obtaining a prediction mode of a current coding unit may include: determining, based on a size of the current coding unit, candidate prediction partition modes that are allowed to be used for the current coding unit; and determining the prediction partition mode from the candidate prediction partition modes that are allowed to be used.</p>
<p id="p0257" num="0257">The determining the prediction partition mode from the candidate prediction partition modes that are allowed to be used may be: parsing a bitstream to obtain an identifier indicating the prediction partition mode, and determining, based on the identifier of the prediction partition mode, the prediction partition mode from the candidate prediction partition modes that are allowed to be used. In this embodiment of this application, the bitstream (video data) format may be a YUV4:2:0 format or a YUV4:2:2 format, or may be another format. This is not limited in this application.</p>
<p id="p0258" num="0258">Alternatively, the obtaining a prediction partition mode of the current coding unit may include: determining the prediction partition mode of the current coding unit based on a size of the current coding unit.</p>
<p id="p0259" num="0259">In this embodiment of this application, the prediction partition mode can be determined based on the size<!-- EPO <DP n="48"> --> of the current coding unit (a bitstream does not need to be parsed or only a small amount of information in a bitstream needs to be parsed). Therefore, video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0260" num="0260">Alternatively, the obtaining a prediction partition mode of the current coding unit may further include: determining the prediction partition mode of the current coding unit based on the prediction mode.</p>
<p id="p0261" num="0261">In this embodiment of this application, the prediction partition mode can be determined based on the prediction mode (a bitstream does not need to be parsed or only a small amount of information in a bitstream needs to be parsed). Therefore, video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0262" num="0262">Specifically, the determining the prediction partition mode of the current coding unit based on a size of the current coding unit can be implemented in one of the following modes:</p>
<heading id="h0007">Mode 1:</heading>
<p id="p0263" num="0263">When the width of the current coding unit is less than or equal to M, and the height of the current coding unit is less than or equal to M, the prediction partition mode of the current coding unit is quartering partition or asymmetric partition, where M may be an integer greater than 16. For example, M is 32 or 64.</p>
<heading id="h0008">Mode 2:</heading>
<p id="p0264" num="0264">When the width of the current coding unit is equal to N, and the height of the current coding unit is equal to N, the prediction partition mode of the current coding unit is quartering partition, where N may be an integer greater than 16. For example, N is 64.</p>
<heading id="h0009">Mode 3:</heading>
<p id="p0265" num="0265">When the side length of the to-be-split side of the current coding unit is an integer greater than 4, and the side length of the non-to-be-split side of the current coding unit is an integer greater than 4, the prediction partition mode of the current coding unit is quartering partition.</p>
<p id="p0266" num="0266">For example, the side length of the to-be-split side is 64, and the side length of the non-to-be-split side is 32. Alternatively, the side length of the to-be-split side is 32, and the side length of the non-to-be-split side is 32.</p>
<p id="p0267" num="0267">The to-be-split side is a side perpendicular to the partition direction of the current coding unit, and the non-to-be-split side is a side parallel to the partition direction of the current coding unit.</p>
<p id="p0268" num="0268">For example, as shown in <figref idref="f0010">FIG. 13(a) to 3(f)</figref>, to-be-split sides in <figref idref="f0010">FIG. 13(a), FIG. 13(b), and FIG. 13(e)</figref> are widths of coding units, and non-to-be-split sides are heights of coding units. To-be-split sides in <figref idref="f0010">FIG. 13(c), FIG. 13(d), and FIG. 13(f)</figref> are heights of coding units, and non-to-be-split sides are widths of coding units.</p>
<heading id="h0010">Mode 4:</heading>
<p id="p0269" num="0269">When the side length of the to-be-split side of the current coding unit is an integer greater than 4, and<!-- EPO <DP n="49"> --> the side length of the non-to-be-split side of the current coding unit is an integer greater than 4, the prediction partition mode of the current coding unit is not quartering partition or asymmetric partition. It should be noted that if the prediction partition mode of the current coding unit includes quartering partition or asymmetric partition, the current coding unit is not split in this case.</p>
<p id="p0270" num="0270">For example, the side length of the to-be-split side is 32, and the side length of the non-to-be-split side is 64. Alternatively, the side length of the to-be-split side is 32, and the side length of the non-to-be-split side is 32.</p>
<heading id="h0011">Mode 5:</heading>
<p id="p0271" num="0271">When the side length of the to-be-split side of the current coding unit is less than a preset first threshold, the prediction partition mode of the current coding unit is asymmetric partition, the preset first threshold is an integer greater than or equal to 16, and the first threshold may be an integer greater than or equal to 16. For example, the first threshold is 16, or the first threshold is 32.</p>
<p id="p0272" num="0272">The to-be-split side of the current coding unit is a side perpendicular to a partition direction.</p>
<p id="p0273" num="0273">For example, when the prediction partition mode is vertical quartering partition or vertical asymmetric binary split, the to-be-split side is the width of the current coding unit. When the prediction partition mode is horizontal quartering partition or horizontal asymmetric binary split, the to-be-split side is the height of the current coding unit.</p>
<p id="p0274" num="0274">The non-to-be-split side of the current coding unit is a side parallel to the partition direction.</p>
<p id="p0275" num="0275">For example, when the prediction partition mode is vertical quartering partition or vertical asymmetric binary split, the non-split side is the height of the current coding unit. When the prediction partition mode is horizontal quartering partition or horizontal asymmetric binary split, the to-be-split side is the width of the current coding unit.</p>
<p id="p0276" num="0276">It should be understood that the foregoing several manners are merely examples rather than limitations. In this application, the prediction partition mode of the current coding unit may alternatively be determined in another manner. This is not limited in this embodiment of this application.</p>
<p id="p0277" num="0277">In this embodiment of this application, before S1210, the method 1200 may further include S1201.</p>
<p id="p0278" num="0278">S1201: Determine whether to allow splitting of the current coding unit to obtain a prediction block.</p>
<p id="p0279" num="0279">Alternatively, the determining whether to allow splitting of the current coding unit to obtain a prediction block (prediction block, PB) may be understood as: determining whether the current coding unit needs to be split to obtain a prediction block.</p>
<p id="p0280" num="0280">Optionally, it can be determined, based on the size of the current coding unit, whether to allow splitting of the current coding unit to obtain a prediction block.</p>
<p id="p0281" num="0281">For example, it can be determined that splitting of the current coding unit to obtain a prediction block is<!-- EPO <DP n="50"> --> allowed when the size of the current coding unit meets at least one of the following conditions:
<ol id="ol0003" compact="compact" ol-style="">
<li>1. A ratio of a width to a height of the current coding unit is less than P.</li>
<li>2. A maximum side length of the current coding unit is equal to a preset first threshold.</li>
<li>3. A ratio of a width to a height of a prediction block obtained by pre-splitting the current coding unit is between 1/Q and Q.</li>
<li>4. Both a width and a height of a prediction block obtained by pre-splitting the current coding unit are greater than or equal to a preset second threshold.</li>
<li>5. A minimum side length of the current coding block is equal to a preset third threshold, and both a width and a height of a prediction block obtained by pre-splitting the current coding unit are greater than or equal to a preset fourth threshold.</li>
</ol></p>
<p id="p0282" num="0282">Q and P are positive integers, and the second threshold may be an integer greater than 1.</p>
<p id="p0283" num="0283">For example, Q may be 8, the first threshold may be 64 or 32, the second threshold may be 4, the third threshold may be 16, and the fourth threshold may be 4.</p>
<p id="p0284" num="0284">It should be noted that the foregoing pre-splitting means pre-estimating a prediction block that may be obtained after the current coding unit is split, instead of actually splitting the current coding unit.</p>
<p id="p0285" num="0285">Optionally, when the size of the current coding unit does not meet any one of the foregoing conditions, it may be determined that splitting of the current coding unit to obtain a prediction block is not allowed.</p>
<p id="p0286" num="0286">In this embodiment of this application, it can be determined, based on the size of the current coding unit, whether to allow splitting of the current coding unit to obtain a prediction block. Therefore, video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0287" num="0287">Further, the step of obtaining the prediction partition mode of the current coding unit can be performed when it is determined that splitting of the current coding unit to obtain a prediction block is allowed.</p>
<p id="p0288" num="0288">Alternatively, a syntax element may be obtained by parsing the bitstream, and it is determined, by using the syntax element, whether to allow splitting of the current coding unit to obtain a prediction block.</p>
<p id="p0289" num="0289">Further, when it is determined that splitting of the current coding unit is allowed, the prediction block of the current coding unit can be obtained based on the prediction partition mode and/or the prediction mode.</p>
<p id="p0290" num="0290">For example, when the prediction mode is the intra prediction mode, the luma coding block can be split in the prediction partition mode to obtain a luma prediction block; and the chroma coding block is not split, and the chroma coding block is used as a chroma prediction block.</p>
<p id="p0291" num="0291">For another example, when the prediction mode is the inter prediction mode, the current coding unit may<!-- EPO <DP n="51"> --> not be split, and the current coding unit is used as a prediction unit.</p>
<p id="p0292" num="0292">In this embodiment of this application, when the prediction mode is the inter prediction mode, the current coding unit is not split, so that a coding block having an excessively small size can be avoided, and coding efficiency can be improved.</p>
<p id="p0293" num="0293">For another example, when the prediction mode is the inter prediction mode, the current coding unit may be split in any one of the following modes:</p>
<heading id="h0012">Mode 1:</heading>
<p id="p0294" num="0294">Split the luma coding block in the prediction partition mode to obtain a luma prediction block, and split the chroma coding block in the prediction partition mode to obtain a chroma prediction block.</p>
<heading id="h0013">Mode 2:</heading>
<p id="p0295" num="0295">Split the luma coding block in the prediction partition mode to obtain a luma prediction block, and when there are two luma prediction blocks and a length of at least one side of at least one of the two luma prediction blocks is 4, skip splitting the chroma coding block and use the chroma coding block as a chroma prediction block; otherwise, split the luma coding block in the prediction partition mode to obtain a luma prediction block, and split the chroma coding block in the prediction partition mode to obtain a chroma prediction block.</p>
<p id="p0296" num="0296">When the chroma coding block is not split, motion information of the chroma component may be motion information of the luma coding block at a central location of the current coding unit.</p>
<p id="p0297" num="0297">The central location may mean that if the size of the current coding unit is W x H, coordinates of the central location relative to the upper left vertex of the current coding unit are (W/2, H/2).</p>
<p id="p0298" num="0298">In this embodiment of this application, the transform block of the current coding unit is obtained directly based on the prediction partition mode and/or the prediction mode (a bitstream does not need to be parsed or only a small amount of information in a bitstream needs to be parsed). Therefore, video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0299" num="0299">S1220: Obtain a transform block of the current coding unit based on the prediction partition mode and/or the prediction mode.</p>
<p id="p0300" num="0300">Optionally, the transform block (transform block, TB) of the current coding unit can be obtained based on the prediction partition mode and the prediction mode; or the transform block of the current coding unit can be obtained based on the prediction partition mode; or the transform block of the current coding unit can be obtained based on the prediction mode.</p>
<p id="p0301" num="0301">In this embodiment of this application, the current coding unit can be split into transform blocks based<!-- EPO <DP n="52"> --> on the prediction partition mode and/or the prediction mode (a bitstream does not need to be parsed or only a small amount of information in a bitstream needs to be parsed). Therefore, video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0302" num="0302">Optionally, the obtaining a transform block of the current coding unit based on the prediction partition mode and/or the prediction mode may include: splitting the current coding unit into transform blocks based on the prediction partition mode and/or the prediction mode.</p>
<p id="p0303" num="0303">For example, when the prediction mode is the intra prediction mode, and the prediction partition mode of the luma coding block is vertical quartering partition or vertical asymmetric binary split, the luma coding block may be split through vertical quartering partition, to obtain a luma transform block, and the chroma coding block is not split and the chroma coding block is used as a chroma transform block.</p>
<p id="p0304" num="0304">Alternatively, when the prediction mode is the intra prediction mode, and the prediction partition mode of the luma coding block is horizontal quartering partition or horizontal asymmetric binary split, the luma coding block may be split through horizontal quartering partition, to obtain a luma transform block, and the chroma coding block is not split and the chroma coding block is used as a chroma transform block.</p>
<p id="p0305" num="0305">Alternatively, when the prediction mode is the intra prediction mode, the current coding unit may not be split, and the current coding unit is used as a transform unit. In other words, the luma coding block may not be split, and the luma transform block may be directly obtained. Similarly, the chroma coding block may not be split, and the chroma transform block may be directly obtained.</p>
<p id="p0306" num="0306">For another example, when the prediction mode is the inter prediction mode, the current coding unit may be split into transform blocks in any one of the following modes:</p>
<heading id="h0014">Mode 1:</heading>
<p id="p0307" num="0307">When the prediction mode is the inter prediction mode, and the prediction partition mode of the luma coding block is vertical quartering partition or vertical asymmetric binary split, the luma coding block may be split through vertical quartering partition, to obtain a luma transform block.</p>
<p id="p0308" num="0308">For the chroma coding block, the chroma coding block may not be split, and the chroma coding block is used as a chroma transform block; or the chroma coding block may be split through vertical quartering partition; or when the chroma coding block is pre-split through vertical quartering partition, and a side length of one side of an obtained chroma transform block is 4, the chroma coding block is not split, and the chroma coding block is used as the chroma transform block.</p>
<heading id="h0015">Mode 2:</heading><!-- EPO <DP n="53"> -->
<p id="p0309" num="0309">When the prediction mode is the inter prediction mode, and the prediction partition mode of the luma coding block is horizontal quartering partition or horizontal asymmetric binary split, the luma coding block may be split through horizontal quartering partition, to obtain a luma transform block.</p>
<p id="p0310" num="0310">For the chroma coding block, the chroma coding block may not be split, and the chroma coding block is used as a chroma transform block; or the chroma coding block may be split through horizontal quartering partition; or when the chroma coding block is pre-split through horizontal quartering partition, and a side length of one side of an obtained chroma transform block is 4, the chroma coding block is not split, and the chroma coding block is used as the chroma transform block.</p>
<heading id="h0016">Mode 3:</heading>
<p id="p0311" num="0311">When the prediction mode is the inter prediction mode, the current coding unit may not be split, and the current coding unit is used as a transform unit. In other words, the luma coding block may not be split, and the luma transform block may be directly obtained. Similarly, the chroma coding block may not be split, and the chroma transform block may be directly obtained.</p>
<p id="p0312" num="0312">In this embodiment of this application, the transform block of the current coding unit is obtained directly based on the prediction partition mode and/or the prediction mode (a bitstream does not need to be parsed or only a small amount of information in a bitstream needs to be parsed). Therefore, video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0313" num="0313">S1230: Generate a reconstructed picture block of the current coding unit based on the transform block.</p>
<p id="p0314" num="0314">Optionally, the reconstructed picture block of the current coding unit can be generated based on the prediction block and the transform block.</p>
<p id="p0315" num="0315">Specifically, the prediction information of the luma prediction block and the residual information of the luma transform block may be obtained from a bitstream through parsing or derivation.</p>
<p id="p0316" num="0316">The prediction information of the luma prediction block may include a prediction mode, an intra prediction mode, motion information, and the like. The prediction mode may indicate an intra prediction mode or an inter prediction mode, and the intra prediction mode may be a planar mode (planar mode), a direct current mode (DC mode), or an angular mode (angular mode). The motion information may include information such as a prediction direction (forward, backward, or bidirectional), a reference frame index (reference index), or a motion vector (motion vector).</p>
<p id="p0317" num="0317">The residual information of the luma transform block may include a coded block flag (coded block flag, cbf), a transform coefficient, a transform type (for example, DCT-2, DST-7, or DCT-8), and the like.<!-- EPO <DP n="54"> --></p>
<p id="p0318" num="0318">After the prediction information of each luma prediction block and the residual information of each luma transform block are obtained, inter prediction processing or intra prediction processing may be performed on each luma prediction block based on a prediction mode corresponding to each luma prediction block, to obtain an inter prediction picture or an intra prediction picture of each luma prediction block. Then, based on the residual information of each luma transform block, the transform coefficient is inversely quantized and inversely transformed to obtain a residual picture of each luma transform block. The predicted picture of each luma prediction block and the residual picture of each luma transform block are added to generate a reconstructed picture of the luma block.</p>
<p id="p0319" num="0319">Similarly, the prediction information of the chroma prediction block and the residual information of the chroma transform block may be obtained from a bitstream through parsing or derivation.</p>
<p id="p0320" num="0320">The intra prediction mode of the chroma prediction block may be a direct current mode, a planar mode, an angular mode, or a linear model (linear model) mode.</p>
<p id="p0321" num="0321">Optionally, the transform type of the chroma transform block may be DCT-2 transform.</p>
<p id="p0322" num="0322">After the prediction information of each chroma prediction block and the residual information of each chroma transform block are obtained, inter prediction processing or intra prediction processing may be performed on each chroma prediction block based on a prediction mode corresponding to each chroma prediction block, to obtain an inter prediction picture or an intra prediction picture of each chroma prediction block. Then, based on the residual information of each chroma transform block, the transform coefficient is inversely quantized and inversely transformed to obtain a residual picture. The predicted picture of each chroma prediction block and the residual picture of each chroma transform block are added to generate a reconstructed picture of the chroma block.</p>
<p id="p0323" num="0323">In this case, the reconstructed picture block of the current coding unit may be generated based on the reconstructed picture of the luma block and the reconstructed picture of the chroma block.</p>
<p id="p0324" num="0324">In this embodiment of this application, the transform block of the current coding unit can be obtained based on the prediction partition mode and/or the prediction mode (a bitstream does not need to be parsed or only a small amount of information in a bitstream needs to be parsed). In this case, the reconstructed picture block of the current coding unit is generated based on the transform block, so that video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0325" num="0325"><figref idref="f0011">FIG. 14</figref> is a schematic block diagram of a picture reconstruction apparatus according to an embodiment of this application. The picture reconstruction apparatus 5000 shown in <figref idref="f0011">FIG. 14</figref> includes:
<ul id="ul0014" list-style="none" compact="compact">
<li>an obtaining unit 5001, configured to: obtain a prediction mode of a current coding unit, and/or obtain a prediction partition mode of the current coding unit, where the current coding unit includes a luma coding block and<!-- EPO <DP n="55"> --> a chroma coding block, and the prediction partition mode is a mode of splitting the current coding unit into prediction blocks or prediction units;</li>
<li>a processing unit 5002, configured to obtain a transform block of the current coding unit based on the prediction partition mode and/or the prediction mode; and</li>
<li>a reconstruction unit 5003, configured to generate a reconstructed picture block of the current coding unit based on the transform block.</li>
</ul></p>
<p id="p0326" num="0326">In this embodiment of this application, the transform block of the current coding unit can be obtained based on the prediction partition mode and/or the prediction mode (a bitstream does not need to be parsed or only a small amount of information in a bitstream needs to be parsed). In this case, the reconstructed picture block of the current coding unit is generated based on the transform block, so that video coding complexity can be reduced, and coding efficiency can be improved.</p>
<p id="p0327" num="0327">Optionally, the processing unit 5002 is specifically configured to split the current coding unit into transform blocks based on the prediction partition mode and/or the prediction mode.</p>
<p id="p0328" num="0328">Optionally, the obtaining unit 5001 is specifically configured to obtain the prediction mode from a bitstream through parsing or derivation, where the prediction mode includes an intra prediction mode and an inter prediction mode.</p>
<p id="p0329" num="0329">Optionally, the obtaining unit 5001 is specifically configured to: determine, based on a size of the current coding unit, candidate prediction partition modes that are allowed to be used for the current coding unit; and determine the prediction partition mode from the candidate prediction partition modes that are allowed to be used.</p>
<p id="p0330" num="0330">Optionally, the obtaining unit 5001 is specifically configured to determine the prediction partition mode of the current coding unit based on the size of the current coding unit.</p>
<p id="p0331" num="0331">Optionally, the processing unit 5002 is further configured to: when the prediction mode is the intra prediction mode, split the luma coding block in the prediction partition mode to obtain a luma prediction block; and skip splitting the chroma coding block, and use the chroma coding block as a chroma prediction block.</p>
<p id="p0332" num="0332">Optionally, the processing unit 5002 is further configured to: when the prediction mode is the inter prediction mode, skip splitting the current coding unit, and use the current coding unit as a prediction unit.</p>
<p id="p0333" num="0333">Optionally, the processing unit 5002 is further configured to: when the prediction mode is the inter prediction mode, split the current coding unit in any one of the following modes: splitting the luma coding block in the prediction partition mode to obtain a luma prediction block, and splitting the chroma coding block in the prediction partition mode to obtain a chroma prediction block; or splitting the luma coding block in the prediction partition mode<!-- EPO <DP n="56"> --> to obtain a luma prediction block, and when there are two luma prediction blocks and a length of at least one side of at least one of the two luma prediction blocks is 4, skipping splitting the chroma coding block and using the chroma coding block as a chroma prediction block.</p>
<p id="p0334" num="0334">Optionally, the processing unit 5002 is specifically configured to: when the prediction mode is the intra prediction mode, and the prediction partition mode of the luma coding block is vertical quartering partition or vertical asymmetric binary split, split the luma coding block through vertical quartering partition to obtain a luma transform block, and skip splitting the chroma coding block and use the chroma coding block as a chroma transform block; or when the prediction mode is an intra prediction mode, and the prediction partition mode of the luma coding block is horizontal quartering partition or horizontal asymmetric binary split, split the luma coding block through horizontal quartering partition to obtain a luma transform block, and skip splitting the chroma coding block and use the chroma coding block as a chroma transform block.</p>
<p id="p0335" num="0335">Optionally, the processing unit 5002 is specifically configured to: when the prediction mode is the inter prediction mode, skip splitting the current coding unit, and use the current coding unit as a transform unit.</p>
<p id="p0336" num="0336">Optionally, the processing unit 5002 is further configured to determine whether to allow splitting of the current coding unit to obtain a prediction block when the size of the current coding unit meets at least one of the following conditions: a ratio of a width to a height of the current coding unit is less than P, where P is a positive integer; or a maximum side length of the current coding unit is equal to a preset threshold; and perform the step of obtaining the prediction partition mode of the current coding unit when it is determined that splitting of the current coding unit to obtain a prediction block is allowed.</p>
<p id="p0337" num="0337">The picture reconstruction apparatus 5000 may be an encoder device or a decoder device.</p>
<p id="p0338" num="0338">When the picture reconstruction apparatus 5000 is an encoder device, the obtaining unit 5001 in the picture reconstruction apparatus 5000 may correspond to the prediction processing unit 260 in the encoder 20 shown in <figref idref="f0003">FIG. 2</figref>; the processing unit 5002 may correspond to the prediction processing unit 260, the transform processing unit 206, or the inverse transform processing unit 212 in the encoder 20 shown in <figref idref="f0003">FIG. 2</figref>, or correspond to a unit for performing block-based splitting not depicted in <figref idref="f0003">FIG. 2</figref>; and the reconstruction unit 5003 may correspond to at least one of the inverse quantization unit 210, the inverse transform processing unit 212, the residual calculation unit 204, and the reconstruction unit 214 in the encoder 20 shown in <figref idref="f0003">FIG. 2</figref>.</p>
<p id="p0339" num="0339">When the picture reconstruction apparatus 5000 is a decoder device, the obtaining unit 5001 in the picture reconstruction apparatus 5000 may correspond to the prediction processing unit 360 or the entropy decoding unit 304 in the decoder 30 shown in <figref idref="f0004">FIG. 3</figref>; the processing unit 5002 may correspond to the prediction processing unit<!-- EPO <DP n="57"> --> 360 or the inverse transform processing unit 312 in the decoder 30 shown in <figref idref="f0004">FIG. 3</figref>, or correspond to a unit for performing block splitting not depicted in <figref idref="f0004">FIG. 3</figref>; and the reconstruction unit 5003 may correspond to at least one of the inverse quantization unit 310, the inverse transform processing unit 312, and the reconstruction unit 314 in the decoder 30 shown in <figref idref="f0004">FIG. 3</figref>.</p>
<p id="p0340" num="0340">When the picture reconstruction apparatus 5000 is an encoder device, the obtaining unit 5001, the processing unit 5002, and the reconstruction unit 5003 in the picture reconstruction apparatus 5000 may correspond to the encoding/decoding module 470 in the processor 430 shown in <figref idref="f0005">FIG. 4</figref>. The encoding/decoding module 470 can perform the steps to be performed by the picture reconstruction apparatus 5000.</p>
<p id="p0341" num="0341">When the picture reconstruction apparatus 5000 is a decoder device, the obtaining unit 5001, the processing unit 5002, and the reconstruction unit 5003 in the picture reconstruction apparatus 5000 may correspond to the encoding/decoding module 470 in the processor 430 shown in <figref idref="f0005">FIG. 4</figref>. The encoding/decoding module 470 can perform the steps to be performed by the picture reconstruction apparatus 5000.</p>
<p id="p0342" num="0342">The picture reconstruction apparatus 5000 can be implemented in various apparatuses or devices, including a wireless handset, an integrated circuit (IC), or a set of ICs (for example, a chipset). Various components, modules, or units are described in this application to emphasize functional aspects of the apparatuses configured to perform the disclosed technologies, but are not necessarily implemented by different hardware units. Actually, as described above, various units may be combined into a codec hardware unit in combination with appropriate software and/or firmware, or be provided by interoperable hardware units (including one or more processors described above). This is not limited in this embodiment of this application.</p>
<p id="p0343" num="0343">In addition, the picture reconstruction apparatus 5000 may also be referred to as a codec device or a codec, and a video picture can be encoded or decoded by using the picture reconstruction apparatus 5000.</p>
<p id="p0344" num="0344">For specific execution actions of the foregoing units, refer to the foregoing method embodiments, and details are not described herein again.</p>
<p id="p0345" num="0345"><figref idref="f0011">FIG. 15</figref> is a schematic block diagram of a picture reconstruction apparatus according to an embodiment of this application. The picture reconstruction apparatus 6000 shown in <figref idref="f0011">FIG. 15</figref> includes:
<ul id="ul0015" list-style="none" compact="compact">
<li>a memory 6001, configured to store a program; and</li>
<li>a processor 6002, configured to execute a program stored in the memory 6001, where when the program stored in the memory 6001 is executed, the processor 6002 is configured to:
<ul id="ul0016" list-style="none" compact="compact">
<li>obtain a prediction mode of a current coding unit, and/or obtain a prediction partition mode of the current coding unit, where the current coding unit includes a luma coding block and a chroma coding block, and the prediction<!-- EPO <DP n="58"> --> partition mode is a mode of splitting the current coding unit into prediction blocks or prediction units;</li>
<li>obtain a transform block of the current coding unit based on the prediction partition mode and/or the prediction mode; and</li>
<li>generate a reconstructed picture block of the current coding unit based on the transform block.</li>
</ul></li>
</ul></p>
<p id="p0346" num="0346">The obtaining unit 5001, the processing unit 5002, and the reconstruction unit 5003 in the picture reconstruction apparatus 5000 may correspond to the processor 6002 in the picture reconstruction apparatus 6000. The processor 6002 can implement functions of the obtaining unit 5001, the processing unit 5002, and the reconstruction unit 5003 in the picture reconstruction apparatus 5000.</p>
<p id="p0347" num="0347">The memory 6001 in the picture reconstruction apparatus 6000 may correspond to the memory 530 in <figref idref="f0006">FIG. 5</figref>, and the processor 6002 may correspond to the processor 510 in <figref idref="f0006">FIG. 5</figref>. The picture reconstruction apparatus 6000 can implement the embodiments of the picture reconstruction method in <figref idref="f0009">FIG. 12</figref>. The picture reconstruction apparatus 6000 can further perform the steps to be performed by the picture reconstruction apparatus 5000.</p>
<p id="p0348" num="0348">In addition, like the picture reconstruction apparatus 5000, the picture reconstruction apparatus 6000 may be either an encoder device or a decoder device.</p>
<p id="p0349" num="0349">Similarly, the picture reconstruction apparatus 6000 may also be referred to as a codec device or a codec, and a video picture can be encoded or decoded by using the picture reconstruction apparatus 6000.</p>
<p id="p0350" num="0350">For specific execution actions of the processor 6002, refer to the foregoing method embodiments, and details are not described herein again.</p>
<p id="p0351" num="0351">It should be understood that, the processor in the embodiments of this application may be a central processing unit (central processing unit, CPU), or may further be another general-purpose processor, a digital signal processor (digital signal processor, DSP), an application specific integrated circuit (application specific integrated circuit, ASIC), a field programmable gate array (field programmable gate array, FPGA), or another programmable logic device, discrete gate or transistor logic device, discrete hardware component, or the like. The general-purpose processor may be a microprocessor, or may be any conventional processor or the like.</p>
<p id="p0352" num="0352">It should be further understood that the memory in the embodiments of this application may be a volatile memory or a non-volatile memory, or may include a volatile memory and a non-volatile memory. The non-volatile memory may be a read-only memory (read-only memory, ROM), a programmable read-only memory (programmable ROM, PROM), an erasable programmable read-only memory (erasable PROM, EPROM), an electrically erasable programmable read-only memory (electrically EPROM, EEPROM), or a flash memory. The volatile memory may be a random access memory (random access memory, RAM), used as an external cache. Through example but not<!-- EPO <DP n="59"> --> limitative description, many forms of random access memory (random access memory, RAM) RAMs may be used, for example, a static random access memory (static RAM, SRAM), a dynamic random access memory (dynamic random access memory, DRAM), a synchronous dynamic random access memory (synchronous DRAM, SDRAM), a double data rate synchronous dynamic random access memory (double data rate SDRAM, DDR SDRAM), an enhanced synchronous dynamic random access memory (enhanced SDRAM, ESDRAM), a synchronous link dynamic random access memory (synchlink DRAM, SLDRAM), and a direct rambus dynamic random access memory (direct rambus RAM, DR RAM).</p>
<p id="p0353" num="0353">All or some of the foregoing embodiments may be implemented by using software, hardware, firmware, or any combination thereof. When software is used to implement the embodiments, the foregoing embodiments may be implemented completely or partially in a form of a computer program product. The computer program product includes one or more computer instructions or computer programs. When the program instructions or the computer programs are loaded and executed on the computer, the procedure or functions according to the embodiments of this application are all or partially generated. The computer may be a general-purpose computer, a dedicated computer, a computer network, or other programmable apparatuses. The computer instructions may be stored in a computer-readable storage medium or may be transmitted from a computer-readable storage medium to another computer-readable storage medium. For example, the computer instructions may be transmitted from a website, computer, server, or data center to another website, computer, server, or data center in a wired (for example, infrared, radio, and microwave, or the like) manner. The computer-readable storage medium may be any usable medium accessible by a computer, or a data storage device, such as a server or a data center, integrating one or more usable media. The usable medium may be a magnetic medium (for example, a floppy disk, a hard disk, or a magnetic tape), an optical medium (for example, a DVD), or a semiconductor medium. The semiconductor medium may be a solid-state drive.</p>
<p id="p0354" num="0354">As defined in the embodiments of this application, a one-way communication link from an access network to a terminal is a downlink, data transmitted on the downlink is downlink data, and a transmission direction of the downlink data is referred to as a downlink direction; a one-way communication link from the terminal to the access network is an uplink, data transmitted on the uplink is uplink data, and a transmission direction of the uplink data is referred to as an uplink direction.</p>
<p id="p0355" num="0355">The resources described in the embodiments of this application may also be referred to as transmission resources, including one or more types of time-domain resources, frequency-domain resources, and code-domain resources. The resources may be used to bear data or signaling in an uplink communication process or a downlink communication process.<!-- EPO <DP n="60"> --></p>
<p id="p0356" num="0356">The term "and/or" in this specification describes only an association relationship for describing associated objects and represents that three relationships may exist. For example, A and/or B may represent the following three cases: Only A exists, both A and B exist, and only B exists. In addition, the character "/" in this specification indicates an "or" relationship between the associated objects.</p>
<p id="p0357" num="0357">It should be understood that in the embodiments of the present invention, "B corresponding to A" indicates that B is associated with A, and B may be determined according to A. However, it should further be understood that determining A according to B does not mean that B is determined according to A only; that is, B may also be determined according to A and/or other information.</p>
<p id="p0358" num="0358">In the embodiments of this application, "a plurality of' refers to two or more than two.</p>
<p id="p0359" num="0359">Descriptions such as "first", "second" in the embodiments of this application are merely used for indicating and distinguishing between described objects, do not show a sequence, do not indicate a specific limitation on a quantity of devices in the embodiments of this application, and do not constitute any limitation on the embodiments of this application.</p>
<p id="p0360" num="0360">In the embodiments of this application, "connection" means various connection manners such as a direct connection or an indirect connection, for implementing communication between devices. This is not limited in the embodiments of this application.</p>
<p id="p0361" num="0361">Unless otherwise specified, "transmit/transmission" (transmit/transmission) in the embodiments of this application refers to bidirectional transmission, and includes a sending action and/or a receiving action. Specifically, "transmit/transmission" in the embodiments of this application includes data sending, data receiving, or data sending and data receiving. In other words, data transmission herein includes uplink and/or downlink data transmission. The data may include a channel and/or a signal. The uplink data transmission is uplink channel transmission and/or uplink signal transmission, and the downlink data transmission is downlink channel transmission and/or downlink signal transmission.</p>
<p id="p0362" num="0362">Services (service) described in the embodiments of this application are communication services obtained by a terminal device from a network side. The communication services include control plane services and/or data plane services, for example, voice services and data traffic services. Sending or receiving of services includes sending or receiving of service-related data (data) or signaling (signaling).</p>
<p id="p0363" num="0363">In the embodiments of this application, a "network" and a "system" convey a same concept, and a communication system is a communication network.</p>
<p id="p0364" num="0364">It should be understood that sequence numbers of the foregoing processes do not mean execution<!-- EPO <DP n="61"> --> sequences in various embodiments of this application. The execution sequences of the processes should be determined according to functions and internal logic of the processes, and should not be construed as any limitation on the implementation processes of the embodiments of this application.</p>
<p id="p0365" num="0365">A person skilled in the art can understand that, the functions described with reference to various illustrative logical blocks, modules, and algorithm steps disclosed and described in this specification can be implemented by hardware, software, firmware, or any combination thereof. If implemented by software, the functions described with reference to the illustrative logical blocks, modules, and steps may be stored in or transmitted over a computer-readable medium as one or more instructions or code and executed by a hardware-based processing unit. The computer-readable medium may include a computer-readable storage medium, which corresponds to a tangible medium such as a data storage medium, or a communication medium including any medium that facilitates transfer of a computer program from one place to another (for example, according to a communication protocol). In this manner, the computer-readable medium may generally correspond to: (1) a non-transitory tangible computer-readable storage medium, or (2) a communication medium such as a signal or a carrier. The data storage medium may be any usable medium that can be accessed by one or more computers or one or more processors to retrieve instructions, code, and/or data structures for implementing the technologies described in this application. A computer program product may include a computer-readable medium.</p>
<p id="p0366" num="0366">By way of example but not limitation, such computer-readable storage media may include a RAM, a ROM, an EEPROM, a CD-ROM or another compact disc storage apparatus, a magnetic disk storage apparatus or another magnetic storage apparatus, a flash memory, or any other medium that can be used to store desired program code in a form of an instruction or a data structure and that can be accessed by a computer. In addition, any connection is properly referred to as a computer-readable medium. For example, if instructions are transmitted from a website, a server, or another remote source through a coaxial cable, an optical fiber, a twisted pair, a digital subscriber line (DSL), or wireless technologies such as infrared, radio, and microwave, the coaxial cable, the optical fiber, the twisted pair, the DSL, or the wireless technologies such as infrared, radio, and microwave are included in a definition of the medium. However, it should be understood that the computer-readable storage medium and the data storage medium do not include connections, carriers, signals, or other transitory media, but actually mean non-transitory tangible storage media. Disks and discs used in this specification include a compact disc (CD), a laser disc, an optical disc, a digital versatile disc (DVD), and a Blu-ray disc. The disks usually reproduce data magnetically, whereas the discs reproduce data optically with lasers. Combinations of the foregoing should also be included in the scope of the computer-readable media.<!-- EPO <DP n="62"> --></p>
<p id="p0367" num="0367">Instructions may be executed by one or more processors such as one or more digital signal processors (DSP), general-purpose microprocessors, application-specific integrated circuits (ASIC), field programmable logic arrays (FPGA), or other equivalent integrated circuit or discrete logic circuits. Therefore, the term "processor" used in this specification may be any of the foregoing structures or any other structure suitable for implementing the technologies described in this specification. In addition, in some aspects, the functions described with reference to the illustrative logical blocks, modules, and steps described in this specification may be provided within dedicated hardware and/or software modules configured for encoding and decoding, or may be incorporated into a combined codec. In addition, the technologies may be completely implemented in one or more circuits or logic elements.</p>
<p id="p0368" num="0368">The technologies in this application may be implemented in various apparatuses or devices, including a wireless handset, an integrated circuit (IC), or a set of ICs (for example, a chip set). Various components, modules, or units are described in this application to emphasize functional aspects of the apparatuses configured to perform the disclosed technologies, but are not necessarily implemented by different hardware units. Actually, as described above, various units may be combined into a codec hardware unit in combination with appropriate software and/or firmware, or be provided by interoperable hardware units (including one or more processors described above).</p>
<p id="p0369" num="0369">In the foregoing embodiments, the descriptions in the embodiments have respective focuses. For a part that is not described in detail in an embodiment, refer to related descriptions in other embodiments.</p>
<p id="p0370" num="0370">The foregoing descriptions are merely specific example implementations of this application, but are not intended to limit the protection scope of this application. Any variation or replacement readily figured out by a person skilled in the art within the technical scope disclosed in this application shall fall within the protection scope of this application. Therefore, the protection scope of this application shall be subject to the protection scope of the claims.</p>
</description>
<claims id="claims01" lang="en"><!-- EPO <DP n="63"> -->
<claim id="c-en-0001" num="0001">
<claim-text>A picture reconstruction method, comprising:
<claim-text>obtaining a prediction mode of a current coding unit, and/or obtaining a prediction partition mode of the current coding unit, wherein the current coding unit comprises a luma coding block and a chroma coding block, and the prediction partition mode is a mode of splitting the current coding unit into prediction blocks or prediction units;</claim-text>
<claim-text>obtaining a transform block of the current coding unit based on the prediction partition mode and/or the prediction mode; and</claim-text>
<claim-text>generating a reconstructed picture block of the current coding unit based on the transform block.</claim-text></claim-text></claim>
<claim id="c-en-0002" num="0002">
<claim-text>The method according to claim 1, wherein the obtaining a transform block of the current coding unit based on the prediction partition mode and/or the prediction mode comprises:<br/>
splitting the current coding unit into transform blocks based on the prediction partition mode and/or the prediction mode.</claim-text></claim>
<claim id="c-en-0003" num="0003">
<claim-text>The method according to claim 1 or 2, wherein the obtaining a prediction mode of a current coding unit comprises:<br/>
obtaining the prediction mode from a bitstream through parsing or derivation, wherein the prediction mode comprises an intra prediction mode and an inter prediction mode.</claim-text></claim>
<claim id="c-en-0004" num="0004">
<claim-text>The method according to any one of claims 1 to 3, wherein the obtaining a prediction partition mode of the current coding unit comprises:
<claim-text>determining, based on a size of the current coding unit, candidate prediction partition modes that are allowed to be used for the current coding unit; and</claim-text>
<claim-text>determining the prediction partition mode from the candidate prediction partition modes that are allowed to be used.</claim-text></claim-text></claim>
<claim id="c-en-0005" num="0005">
<claim-text>The method according to any one of claims 1 to 4, wherein the obtaining a prediction partition mode of the current coding unit comprises:<br/>
determining the prediction partition mode of the current coding unit based on the size of the current coding unit.</claim-text></claim>
<claim id="c-en-0006" num="0006">
<claim-text>The method according to any one of claims 1 to 5, wherein the method further comprises:<br/>
when the prediction mode is the intra prediction mode, splitting the luma coding block in the prediction partition mode to obtain a luma prediction block; and skipping splitting the chroma coding block, and using the chroma coding block as a chroma prediction block.<!-- EPO <DP n="64"> --></claim-text></claim>
<claim id="c-en-0007" num="0007">
<claim-text>The method according to any one of claims 1 to 5, wherein the method further comprises:<br/>
when the prediction mode is the inter prediction mode, skipping splitting the current coding unit, and using the current coding unit as a prediction unit.</claim-text></claim>
<claim id="c-en-0008" num="0008">
<claim-text>The method according to any one of claims 1 to 7, wherein the method further comprises:<br/>
when the prediction mode is the inter prediction mode, splitting the current coding unit in any one of the following modes:
<claim-text>splitting the luma coding block in the prediction partition mode to obtain a luma prediction block, and splitting the chroma coding block in the prediction partition mode to obtain a chroma prediction block; or</claim-text>
<claim-text>splitting the luma coding block in the prediction partition mode to obtain a luma prediction block, and when there are two luma prediction blocks and a length of at least one side of at least one of the two luma prediction blocks is 4, skipping splitting the chroma coding block and using the chroma coding block as a chroma prediction block.</claim-text></claim-text></claim>
<claim id="c-en-0009" num="0009">
<claim-text>The method according to any one of claims 1 to 8, wherein the obtaining a transform block of the current coding unit based on the prediction partition mode and/or the prediction mode comprises:
<claim-text>when the prediction mode is the intra prediction mode, and the prediction partition mode of the luma coding block is vertical quartering partition or vertical asymmetric binary split, splitting the luma coding block through vertical quartering partition to obtain a luma transform block, and skipping splitting the chroma coding block and using the chroma coding block as a chroma transform block; or</claim-text>
<claim-text>when the prediction mode is the intra prediction mode, and the prediction partition mode of the luma coding block is horizontal quartering partition or horizontal asymmetric binary split, splitting the luma coding block through horizontal quartering partition to obtain a luma transform block, and skipping splitting the chroma coding block and using the chroma coding block as a chroma transform block.</claim-text></claim-text></claim>
<claim id="c-en-0010" num="0010">
<claim-text>The method according to any one of claims 1 to 8, wherein the obtaining a transform block of the current coding unit based on the prediction partition mode and/or the prediction mode comprises:<br/>
when the prediction mode is the inter prediction mode, skipping splitting the current coding unit, and using the current coding unit as a transform unit.</claim-text></claim>
<claim id="c-en-0011" num="0011">
<claim-text>The method according to any one of claims 1 to 10, wherein the method further comprises:
<claim-text>determining whether to allow splitting of the current coding unit to obtain a prediction block when the size of the current coding unit meets at least one of the following conditions: a ratio of a width to a height of the current coding unit is less than P, wherein P is a positive integer; or a maximum side length of the current coding unit is equal to a preset threshold; and<!-- EPO <DP n="65"> --></claim-text>
<claim-text>performing the step of obtaining the prediction partition mode of the current coding unit when it is determined that splitting of the current coding unit to obtain a prediction block is allowed.</claim-text></claim-text></claim>
<claim id="c-en-0012" num="0012">
<claim-text>A picture reconstruction apparatus, comprising:
<claim-text>an obtaining unit, configured to: obtain a prediction mode of a current coding unit, and/or obtain a prediction partition mode of the current coding unit, wherein the current coding unit comprises a luma coding block and a chroma coding block, and the prediction partition mode is a mode of splitting the current coding unit into prediction blocks or prediction units;</claim-text>
<claim-text>a processing unit, configured to obtain a transform block of the current coding unit based on the prediction partition mode and/or the prediction mode; and</claim-text>
<claim-text>a reconstruction unit, configured to generate a reconstructed picture block of the current coding unit based on the transform block.</claim-text></claim-text></claim>
<claim id="c-en-0013" num="0013">
<claim-text>The apparatus according to claim 12, wherein the processing unit is specifically configured to split the current coding unit into transform blocks based on the prediction partition mode and/or the prediction mode.</claim-text></claim>
<claim id="c-en-0014" num="0014">
<claim-text>The apparatus according to claim 12 or 13, wherein the obtaining unit is specifically configured to obtain the prediction mode from a bitstream through parsing or derivation, wherein the prediction mode comprises an intra prediction mode and an inter prediction mode.</claim-text></claim>
<claim id="c-en-0015" num="0015">
<claim-text>The apparatus according to any one of claims 12 to 14, wherein the obtaining unit is specifically configured to: determine, based on a size of the current coding unit, candidate prediction partition modes that are allowed to be used for the current coding unit; and determine the prediction partition mode from the candidate prediction partition modes that are allowed to be used.</claim-text></claim>
<claim id="c-en-0016" num="0016">
<claim-text>The apparatus according to any one of claims 12 to 15, wherein the obtaining unit is specifically configured to determine the prediction partition mode of the current coding unit based on the size of the current coding unit.</claim-text></claim>
<claim id="c-en-0017" num="0017">
<claim-text>The apparatus according to any one of claims 12 to 16, wherein the processing unit is further configured to: when the prediction mode is the intra prediction mode, split the luma coding block in the prediction partition mode to obtain a luma prediction block; and skip splitting the chroma coding block, and use the chroma coding block as a chroma prediction block.</claim-text></claim>
<claim id="c-en-0018" num="0018">
<claim-text>The apparatus according to any one of claims 12 to 16, wherein the processing unit is further configured to: when the prediction mode is the inter prediction mode, skip splitting the current coding unit, and use the current coding unit as a prediction unit.</claim-text></claim>
<claim id="c-en-0019" num="0019">
<claim-text>The apparatus according to any one of claims 12 to 18, wherein the processing unit is further configured to:<!-- EPO <DP n="66"> --> when the prediction mode is the inter prediction mode, split the current coding unit in any one of the following modes:
<claim-text>splitting the luma coding block in the prediction partition mode to obtain a luma prediction block, and splitting the chroma coding block in the prediction partition mode to obtain a chroma prediction block; or</claim-text>
<claim-text>splitting the luma coding block in the prediction partition mode to obtain a luma prediction block, and when there are two luma prediction blocks and a length of at least one side of at least one of the two luma prediction blocks is 4, skipping splitting the chroma coding block and using the chroma coding block as a chroma prediction block.</claim-text></claim-text></claim>
<claim id="c-en-0020" num="0020">
<claim-text>The apparatus according to any one of claims 12 to 19, wherein the processing unit is specifically configured to: when the prediction mode is the intra prediction mode, and the prediction partition mode of the luma coding block is vertical quartering partition or vertical asymmetric binary split, split the luma coding block through vertical quartering partition to obtain a luma transform block, and skip splitting the chroma coding block and use the chroma coding block as a chroma transform block; or<br/>
when the prediction mode is the intra prediction mode, and the prediction partition mode of the luma coding block is horizontal quartering partition or horizontal asymmetric binary split, split the luma coding block through horizontal quartering partition to obtain a luma transform block, and skip splitting the chroma coding block and use the chroma coding block as a chroma transform block.</claim-text></claim>
<claim id="c-en-0021" num="0021">
<claim-text>The apparatus according to any one of claims 12 to 19, wherein the processing unit is specifically configured to: when the prediction mode is the inter prediction mode, skip splitting the current coding unit, and use the current coding unit as a transform unit.</claim-text></claim>
<claim id="c-en-0022" num="0022">
<claim-text>The apparatus according to any one of claims 12 to 21, wherein the processing unit is further configured to determine whether to allow splitting of the current coding unit to obtain a prediction block when the size of the current coding unit meets at least one of the following conditions: a ratio of a width to a height of the current coding unit is less than P, wherein P is a positive integer; or a maximum side length of the current coding unit is equal to a preset threshold; and<br/>
perform the step of obtaining the prediction partition mode of the current coding unit when it is determined that splitting of the current coding unit to obtain a prediction block is allowed.</claim-text></claim>
<claim id="c-en-0023" num="0023">
<claim-text>A video coding device, comprising:
<claim-text>a memory; and</claim-text>
<claim-text>a processor, wherein the processor invokes program code stored in the memory to perform the method according to any one of claims 1 to 11.</claim-text></claim-text></claim>
</claims>
<drawings id="draw" lang="en"><!-- EPO <DP n="67"> -->
<figure id="f0001" num="1A"><img id="if0001" file="imgf0001.tif" wi="141" he="228" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="68"> -->
<figure id="f0002" num="1B"><img id="if0002" file="imgf0002.tif" wi="117" he="127" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="69"> -->
<figure id="f0003" num="2"><img id="if0003" file="imgf0003.tif" wi="147" he="233" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="70"> -->
<figure id="f0004" num="3"><img id="if0004" file="imgf0004.tif" wi="158" he="229" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="71"> -->
<figure id="f0005" num="4"><img id="if0005" file="imgf0005.tif" wi="162" he="125" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="72"> -->
<figure id="f0006" num="5,6(a),6(b),6(c),6(d),6(e)"><img id="if0006" file="imgf0006.tif" wi="162" he="163" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="73"> -->
<figure id="f0007" num="7,8(a),8(b),8(c),8(d),8(e),8(f)"><img id="if0007" file="imgf0007.tif" wi="164" he="209" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="74"> -->
<figure id="f0008" num="9,10"><img id="if0008" file="imgf0008.tif" wi="137" he="174" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="75"> -->
<figure id="f0009" num="11,12"><img id="if0009" file="imgf0009.tif" wi="160" he="223" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="76"> -->
<figure id="f0010" num="13(a),13(b),13(c),13(d),13(e),13(f)"><img id="if0010" file="imgf0010.tif" wi="160" he="130" img-content="drawing" img-format="tif"/></figure><!-- EPO <DP n="77"> -->
<figure id="f0011" num="14,15"><img id="if0011" file="imgf0011.tif" wi="104" he="206" img-content="drawing" img-format="tif"/></figure>
</drawings>
<search-report-data id="srep" lang="en" srep-office="EP" date-produced=""><doc-page id="srep0001" file="srep0001.tif" wi="150" he="233" type="tif"/><doc-page id="srep0002" file="srep0002.tif" wi="150" he="233" type="tif"/><doc-page id="srep0003" file="srep0003.tif" wi="150" he="233" type="tif"/></search-report-data>
<ep-reference-list id="ref-list">
<heading id="ref-h0001"><b>REFERENCES CITED IN THE DESCRIPTION</b></heading>
<p id="ref-p0001" num=""><i>This list of references cited by the applicant is for the reader's convenience only. It does not form part of the European patent document. Even though great care has been taken in compiling the references, errors or omissions cannot be excluded and the EPO disclaims all liability in this regard.</i></p>
<heading id="ref-h0002"><b>Patent documents cited in the description</b></heading>
<p id="ref-p0002" num="">
<ul id="ref-ul0001" list-style="bullet">
<li><patcit id="ref-pcit0001" dnum="US201811539678" dnum-type="L"><document-id><country>US</country><doc-number>201811539678</doc-number><date>20181215</date></document-id></patcit><crossref idref="pcit0001">[0001]</crossref></li>
<li><patcit id="ref-pcit0002" dnum="US201811585506" dnum-type="L"><document-id><country>US</country><doc-number>201811585506</doc-number><date>20181224</date></document-id></patcit><crossref idref="pcit0002">[0001]</crossref></li>
</ul></p>
</ep-reference-list>
</ep-patent-document>
